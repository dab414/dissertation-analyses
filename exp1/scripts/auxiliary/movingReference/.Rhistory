d <- read.csv('../../../data/dstClean.csv')
d <- read.csv('../../data/dstClean.csv')
head(d)
summary(d$block)
d %>%
group_by(subject, block) %>%
summarize(difficulty = unique(difficulty))
library(tidyverse)
library(ez)
source('../../formatSimpleEffects.r')
d %>%
group_by(subject, block) %>%
summarize(difficulty = unique(difficulty))
## code lagged difficulty
d <- d %>%
group_by(subject, block) %>%
summarize(difficulty = difficulty)
## code lagged difficulty
d <- d %>%
group_by(subject, block) %>%
summarize(difficulty = unique(difficulty))
unique(d$difficulty)
unique(c('a','a'))
## code lagged difficulty
d <- d %>%
group_by(subject, block) %>%
summarize(difficulty = difficulty[1])
d
d <- read.csv('../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
d %>%
group_by(subject, block) %>%
summarize(difficulty = difficulty[1])
head(d)
source('../formatSimpleEffects.r')
library(data.table)
help(lag)
d %>%
group_by(subject, block) %>%
summarize(difficulty = difficulty[1]) %>%
mutate(lagDifficulty = lag(difficulty))
## code lagged difficulty
d <- d %>%
group_by(subject, block) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty))
d
d <- read.csv('../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
head(d)
sumamry(d$cycle)
summary(d$cycle)
d %>%
group_by(subject, block) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty)) %>%
inner_join(d)
## code lagged difficulty
d <- d %>%
group_by(subject, block) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty)) %>%
inner_join(d) %>%
filter(cycle != 1 & block != 1)
d
d[d$block == 1,]
d <- read.csv('../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
## code lagged difficulty
d <- d %>%
group_by(subject, block) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty)) %>%
inner_join(d) %>%
filter((cycle != 1 & block != 1))
d
d[d$block == 1,]
a <- 1
b <- 2
a != 2 & b != 1
a != 2 & b != 2
d <- read.csv('../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
## code lagged difficulty
d <- d %>%
group_by(subject, block) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty)) %>%
inner_join(d) %>%
d <- d[d$block != 1 & d$cycle != 1,]
d <- read.csv('../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
## code lagged difficulty
d <- d %>%
group_by(subject, block) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty)) %>%
inner_join(d)
d <- d[d$block != 1 & d$cycle != 1,]
d
d[d$block == 1,]
d <- read.csv('../../data/dstClean.csv')
d[d$cycle == 2,]
d <- read.csv('../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
## code lagged difficulty
d <- d %>%
group_by(subject, block) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty)) %>%
inner_join(d) %>%
mutate(trash = ifelse(block == 1 & cycle == 1, 1, 0)) %>%
filter(trash == 0) %>%
select(-trash)
d
d[d$block == 1,]
d <- read.csv('../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
d %>%
group_by(subject, block) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty))
d <- d %>%
group_by(subject, block) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty)) %>%
inner_join(d)
d[d$cycle == 2,]
d <- read.csv('../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
d <- d %>%
group_by(subject, block) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty)) %>%
select(-difficulty) %>%
inner_join(d)
d[d$cycle==2,]
tail(d)
d <- read.csv('../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
## code lagged difficulty
d <- d %>%
group_by(subject, block, cycle) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty)) %>%
select(-difficulty) %>%
inner_join(d)
d[d$cycle==2,]
d <- read.csv('../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
## code lagged difficulty
d <- d %>%
group_by(subject, block, cycle) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty)) %>%
select(-difficulty) %>%
inner_join(d) %>%
mutate(trash = ifelse(block == 1 & cycle == 1, 1, 0)) %>%
filter(trash == 0) %>%
select(-trash)
d
d %>%
group_by(subject, cycle, block) %>%
summarize(n())
5*8-5
d %>%
group_by(subject, cycle, block) %>%
summarize(n()) %>%
data.frame()
7*4
colnames(d)
d %>%
mutate(selRefDeck = ifelse(chosenDeckId == 'reference', 1, 0))
colnames(d)
sum(d$error)
'selRefDeck' %in% colnames(d)
d <- d %>%
mutate(selRefDeck = ifelse(chosenDeckId == 'reference', 1, 0))
'selRefDeck' %in% colnames(d)
summary(d$lagDifficulty)
cellMeans <- d %>%
group_by(subject, difficulty, lagDifficulty) %>%
summarize(srd = mean(selRefDeck)) %>%
group_by(difficulty, lagDifficulty) %>%
summarize(selRefDeck = mean(srd), se = sd(srd) / sqrt(n()))
cellMeans
cellMeans %>%
ggplot(aes(x = difficulty, y = selRefDeck, group = lagDifficulty)) +
geom_bar(stat = 'identity', aes(fill = lagDifficulty), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = selRefDeck - se, ymax = selRefDeck + se), position = position_dodge(width = 0.9), width = 0.5) +
theme_bw() +
xlab('Difficulty') +
ylab('Proportion Selection of Reference Deck') +
scale_fill_manual(name = 'lagDifficulty', values = c('Easier than Reference' = 'Light Grey', 'Harder than reference' = 'Black')) +
theme(strip.background = element_rect(color = 'black', fill = 'white'),
legend.position = 'top')
cellMeans <- d %>%
group_by(subject, difficulty, lagDifficulty) %>%
summarize(srd = mean(selRefDeck)) %>%
group_by(difficulty, lagDifficulty) %>%
summarize(selRefDeck = mean(srd), se = sd(srd) / sqrt(n()))
cellMeans
cellMeans %>%
ggplot(aes(x = difficulty, y = selRefDeck, group = lagDifficulty)) +
geom_bar(stat = 'identity', aes(fill = lagDifficulty), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = selRefDeck - se, ymax = selRefDeck + se), position = position_dodge(width = 0.9), width = 0.5) +
theme_bw() +
xlab('Difficulty') +
ylab('Proportion Selection of Reference Deck') +
scale_fill_manual(name = 'lagDifficulty', values = c('Easier than Reference' = 'Light Grey', 'Harder than reference' = 'Black'), label = 'Lagged Difficulty') +
theme(strip.background = element_rect(color = 'black', fill = 'white'),
legend.position = 'top')
cellMeans <- d %>%
group_by(subject, difficulty, lagDifficulty) %>%
summarize(srd = mean(selRefDeck)) %>%
group_by(difficulty, lagDifficulty) %>%
summarize(selRefDeck = mean(srd), se = sd(srd) / sqrt(n()))
cellMeans
cellMeans %>%
ggplot(aes(x = difficulty, y = selRefDeck, group = lagDifficulty)) +
geom_bar(stat = 'identity', aes(fill = lagDifficulty), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = selRefDeck - se, ymax = selRefDeck + se), position = position_dodge(width = 0.9), width = 0.5) +
theme_bw() +
xlab('Difficulty') +
ylab('Proportion Selection of Reference Deck') +
scale_fill_manual(name = 'Lagged Difficulty', values = c('Easier than Reference' = 'Light Grey', 'Harder than reference' = 'Black')) +
theme(strip.background = element_rect(color = 'black', fill = 'white'),
legend.position = 'top')
cellMeans <- d %>%
group_by(subject, difficulty, lagDifficulty) %>%
summarize(srd = mean(selRefDeck)) %>%
group_by(difficulty, lagDifficulty) %>%
summarize(selRefDeck = mean(srd), se = sd(srd) / sqrt(n()))
cellMeans
cellMeans %>%
ggplot(aes(x = difficulty, y = selRefDeck, group = lagDifficulty)) +
geom_bar(stat = 'identity', aes(fill = lagDifficulty), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = selRefDeck - se, ymax = selRefDeck + se), position = position_dodge(width = 0.9), width = 0.5) +
theme_bw() +
xlab('Difficulty') +
ylab('Proportion Selection of Reference Deck') +
ylim(0,1) +
scale_fill_manual(name = 'Lagged Difficulty', values = c('Easier than Reference' = 'Light Grey', 'Harder than reference' = 'Black')) +
theme(strip.background = element_rect(color = 'black', fill = 'white'),
legend.position = 'top')
d %>%
group_by(subject, lagDifficulty, difficulty) %>%
summarize(selRefDeck = mean(selRefDeck))
m1 <- ezANOVA(wid = subject, within = .(lagDifficulty, difficulty), dv = selRefDeck, data = d, detailed = TRUE)
ezDesign(x = difficulty, y = selRefDeck, row = lagDifficulty, data = d)
d %>%
group_by(subject, lagDifficulty, difficulty) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
filter(is.na(selRefDeck))
d %>%
group_by(subject, lagDifficulty, difficulty) %>%
summarize(selRefDeck = mean(selRefDeck))
ezDesign(x = difficulty, y = selRefDeck, row = lagDifficulty, data = d)\
ezDesign(x = difficulty, y = selRefDeck, row = lagDifficulty, data = d)
head(d)
library(tidyverse)
library(ez)
library(data.table)
source('../formatSimpleEffects.r')
d <- read.csv('../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
## code lagged difficulty
d <- d %>%
group_by(subject, block, cycle) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty)) %>%
select(-difficulty) %>%
inner_join(d) %>%
mutate(trash = ifelse(block == 1 & cycle == 1, 1, 0)) %>%
filter(trash == 0) %>%
select(-trash)
d <- d %>%
mutate(selRefDeck = ifelse(chosenDeckId == 'reference', 1, 0))
d
cellMeans <- d %>%
group_by(subject, difficulty, lagDifficulty) %>%
summarize(srd = mean(selRefDeck)) %>%
group_by(difficulty, lagDifficulty) %>%
summarize(selRefDeck = mean(srd), se = sd(srd) / sqrt(n()))
cellMeans
cellMeans %>%
ggplot(aes(x = difficulty, y = selRefDeck, group = lagDifficulty)) +
geom_bar(stat = 'identity', aes(fill = lagDifficulty), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = selRefDeck - se, ymax = selRefDeck + se), position = position_dodge(width = 0.9), width = 0.5) +
theme_bw() +
xlab('Difficulty') +
ylab('Proportion Selection of Reference Deck') +
ylim(0,1) +
scale_fill_manual(name = 'Lagged Difficulty', values = c('Easier than Reference' = 'Light Grey', 'Harder than reference' = 'Black')) +
theme(strip.background = element_rect(color = 'black', fill = 'white'),
legend.position = 'top')
d %>%
group_by(subject, lagDifficulty, difficulty) %>%
summarize(selRefDeck = mean(selRefDeck))
head(d)
nrow(d)
m1 <- ezANOVA(wid = subject, within = .(lagDifficulty, difficulty), dv = selRefDeck, data = d, detailed = TRUE)
d[is.na(d$lagDifficulty),]
d %>%
group_by(subject,lagDifficulty, difficulty) %>%
summarize(n())
d$difficulty <- factor(d$difficulty, levels = tolower(levels(d$difficulty)))
summary(d$difficulty)
library(tidyverse)
library(ez)
library(data.table)
source('../formatSimpleEffects.r')
d <- read.csv('../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
## code lagged difficulty
d <- d %>%
group_by(subject, block, cycle) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty)) %>%
select(-difficulty) %>%
inner_join(d) %>%
mutate(trash = ifelse(block == 1 & cycle == 1, 1, 0)) %>%
filter(trash == 0) %>%
select(-trash)
d <- d %>%
mutate(selRefDeck = ifelse(chosenDeckId == 'reference', 1, 0))
d
cellMeans <- d %>%
group_by(subject, difficulty, lagDifficulty) %>%
summarize(srd = mean(selRefDeck)) %>%
group_by(difficulty, lagDifficulty) %>%
summarize(selRefDeck = mean(srd), se = sd(srd) / sqrt(n()))
cellMeans
cellMeans %>%
ggplot(aes(x = difficulty, y = selRefDeck, group = lagDifficulty)) +
geom_bar(stat = 'identity', aes(fill = lagDifficulty), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = selRefDeck - se, ymax = selRefDeck + se), position = position_dodge(width = 0.9), width = 0.5) +
theme_bw() +
xlab('Difficulty') +
ylab('Proportion Selection of Reference Deck') +
ylim(0,1) +
scale_fill_manual(name = 'Lagged Difficulty', values = c('Easier than Reference' = 'Light Grey', 'Harder than reference' = 'Black')) +
theme(strip.background = element_rect(color = 'black', fill = 'white'),
legend.position = 'top')
d %>%
group_by(subject, lagDifficulty, difficulty) %>%
summarize(selRefDeck = mean(selRefDeck))
levels(d$difficulty) <- tolower(levels(d$difficulty))
summary(d$difference)
summary(d$difficulty)
levels(d$lagDifficulty) <- tolower(levels(d$lagDifficulty))
m1 <- ezANOVA(wid = subject, within = .(lagDifficulty, difficulty), dv = selRefDeck, data = d, detailed = TRUE)
m1 <- ezANOVA(wid = subject, within = .(difficulty, lagDifficulty), dv = selRefDeck, data = d, detailed = TRUE)
m1 <- ezANOVA(wid = subject, between = .(difficulty, lagDifficulty), dv = selRefDeck, data = d, detailed = TRUE)
cs <- c(colnames(m1$ANOVA), 'n2p')
omni <- cbind(m1, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
colnames(omni) <- cs
omni
m1 <- ezANOVA(wid = subject, between = .(difficulty, lagDifficulty), dv = selRefDeck, data = d, detailed = TRUE)
cs <- c(colnames(m1$ANOVA), 'n2p')
omni <- cbind(m1, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
colnames(omni) <- cs
omni
m1 <- ezANOVA(wid = subject, between = .(difficulty, lagDifficulty), dv = selRefDeck, data = d, detailed = TRUE)
m1
# cs <- c(colnames(m1$ANOVA), 'n2p')
# omni <- cbind(m1, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
# colnames(omni) <- cs
# omni
m1 <- ezANOVA(wid = subject, between = .(difficulty, lagDifficulty), dv = selRefDeck, data = d, detailed = TRUE)
summary(m1)
# cs <- c(colnames(m1$ANOVA), 'n2p')
# omni <- cbind(m1, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
# colnames(omni) <- cs
# omni
m1
m1$ANOVA
colnames(m1$ANOVA)
cs <- c(colnames(m1$ANOVA), 'n2p')
omni <- cbind(m1, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
colnames(omni) <- cs
omni
m1$ANOVA$SSn
m1$ANOVA$SSd
m1 <- ezANOVA(wid = subject, between = .(difficulty, lagDifficulty), dv = selRefDeck, data = d, detailed = TRUE)
m1
cs <- c(colnames(m1$ANOVA), 'n2p')
omni <- cbind(m1, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
colnames(omni) <- cs
omni
q()
q()
library(tidyverse)
library(ez)
library(data.table)
source('../../formatSimpleEffects.r')
d <- read.csv('../../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
## code lagged difficulty
d <- d %>%
group_by(subject, block, cycle) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty)) %>%
select(-difficulty) %>%
inner_join(d) %>%
mutate(trash = ifelse(block == 1 & cycle == 1, 1, 0)) %>%
filter(trash == 0) %>%
select(-trash)
d <- d %>%
mutate(selRefDeck = ifelse(chosenDeckId == 'reference', 1, 0))
d
cellMeans <- d %>%
group_by(subject, difficulty, lagDifficulty) %>%
summarize(srd = mean(selRefDeck)) %>%
group_by(difficulty, lagDifficulty) %>%
summarize(selRefDeck = mean(srd), se = sd(srd) / sqrt(n()))
cellMeans
cellMeans %>%
ggplot(aes(x = difficulty, y = selRefDeck, group = lagDifficulty)) +
geom_bar(stat = 'identity', aes(fill = lagDifficulty), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = selRefDeck - se, ymax = selRefDeck + se), position = position_dodge(width = 0.9), width = 0.5) +
theme_bw() +
xlab('Difficulty') +
ylab('Proportion Selection of Reference Deck') +
ylim(0,1) +
scale_fill_manual(name = 'Lagged Difficulty', values = c('Easier than Reference' = 'Light Grey', 'Harder than reference' = 'Black')) +
theme(strip.background = element_rect(color = 'black', fill = 'white'),
legend.position = 'top')
d %>%
group_by(subject, lagDifficulty, difficulty) %>%
summarize(selRefDeck = mean(selRefDeck))
m1 <- ezANOVA(wid = subject, between = .(difficulty, lagDifficulty), dv = selRefDeck, data = d, detailed = TRUE)
m1
cs <- c(colnames(m1$ANOVA), 'n2p')
omni <- cbind(m1, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
colnames(omni) <- cs
omni
q()
q()
