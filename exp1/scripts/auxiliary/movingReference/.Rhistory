theme_bw() +
xlab('Difficulty') +
ylab('Proportion Selection of Reference Deck') +
ylim(0,1) +
scale_fill_manual(name = 'Lagged Difficulty', values = c('Easier than Reference' = 'Light Grey', 'Harder than reference' = 'Black')) +
theme(strip.background = element_rect(color = 'black', fill = 'white'),
legend.position = 'top')
d %>%
group_by(subject, lagDifficulty, difficulty) %>%
summarize(selRefDeck = mean(selRefDeck))
levels(d$difficulty) <- tolower(levels(d$difficulty))
summary(d$difference)
summary(d$difficulty)
levels(d$lagDifficulty) <- tolower(levels(d$lagDifficulty))
m1 <- ezANOVA(wid = subject, within = .(lagDifficulty, difficulty), dv = selRefDeck, data = d, detailed = TRUE)
m1 <- ezANOVA(wid = subject, within = .(difficulty, lagDifficulty), dv = selRefDeck, data = d, detailed = TRUE)
m1 <- ezANOVA(wid = subject, between = .(difficulty, lagDifficulty), dv = selRefDeck, data = d, detailed = TRUE)
cs <- c(colnames(m1$ANOVA), 'n2p')
omni <- cbind(m1, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
colnames(omni) <- cs
omni
m1 <- ezANOVA(wid = subject, between = .(difficulty, lagDifficulty), dv = selRefDeck, data = d, detailed = TRUE)
cs <- c(colnames(m1$ANOVA), 'n2p')
omni <- cbind(m1, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
colnames(omni) <- cs
omni
m1 <- ezANOVA(wid = subject, between = .(difficulty, lagDifficulty), dv = selRefDeck, data = d, detailed = TRUE)
m1
# cs <- c(colnames(m1$ANOVA), 'n2p')
# omni <- cbind(m1, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
# colnames(omni) <- cs
# omni
m1 <- ezANOVA(wid = subject, between = .(difficulty, lagDifficulty), dv = selRefDeck, data = d, detailed = TRUE)
summary(m1)
# cs <- c(colnames(m1$ANOVA), 'n2p')
# omni <- cbind(m1, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
# colnames(omni) <- cs
# omni
m1
m1$ANOVA
colnames(m1$ANOVA)
cs <- c(colnames(m1$ANOVA), 'n2p')
omni <- cbind(m1, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
colnames(omni) <- cs
omni
m1$ANOVA$SSn
m1$ANOVA$SSd
m1 <- ezANOVA(wid = subject, between = .(difficulty, lagDifficulty), dv = selRefDeck, data = d, detailed = TRUE)
m1
cs <- c(colnames(m1$ANOVA), 'n2p')
omni <- cbind(m1, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
colnames(omni) <- cs
omni
q()
q()
library(tidyverse)
library(ez)
library(data.table)
source('../../formatSimpleEffects.r')
d <- read.csv('../../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
## code lagged difficulty
d <- d %>%
group_by(subject, block, cycle) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty)) %>%
select(-difficulty) %>%
inner_join(d) %>%
mutate(trash = ifelse(block == 1 & cycle == 1, 1, 0)) %>%
filter(trash == 0) %>%
select(-trash)
d <- d %>%
mutate(selRefDeck = ifelse(chosenDeckId == 'reference', 1, 0))
d
cellMeans <- d %>%
group_by(subject, difficulty, lagDifficulty) %>%
summarize(srd = mean(selRefDeck)) %>%
group_by(difficulty, lagDifficulty) %>%
summarize(selRefDeck = mean(srd), se = sd(srd) / sqrt(n()))
cellMeans
cellMeans %>%
ggplot(aes(x = difficulty, y = selRefDeck, group = lagDifficulty)) +
geom_bar(stat = 'identity', aes(fill = lagDifficulty), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = selRefDeck - se, ymax = selRefDeck + se), position = position_dodge(width = 0.9), width = 0.5) +
theme_bw() +
xlab('Difficulty') +
ylab('Proportion Selection of Reference Deck') +
ylim(0,1) +
scale_fill_manual(name = 'Lagged Difficulty', values = c('Easier than Reference' = 'Light Grey', 'Harder than reference' = 'Black')) +
theme(strip.background = element_rect(color = 'black', fill = 'white'),
legend.position = 'top')
d %>%
group_by(subject, lagDifficulty, difficulty) %>%
summarize(selRefDeck = mean(selRefDeck))
m1 <- ezANOVA(wid = subject, between = .(difficulty, lagDifficulty), dv = selRefDeck, data = d, detailed = TRUE)
m1
cs <- c(colnames(m1$ANOVA), 'n2p')
omni <- cbind(m1, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
colnames(omni) <- cs
omni
q()
q()
library(tidyverse)
library(ez)
library(data.table)
source('../../formatSimpleEffects.r')
d <- read.csv('../../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
## code lagged difficulty
d <- d %>%
group_by(subject, block, cycle) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty)) %>%
select(-difficulty) %>%
inner_join(d) %>%
mutate(trash = ifelse(block == 1 & cycle == 1, 1, 0)) %>%
filter(trash == 0) %>%
select(-trash)
d <- d %>%
mutate(selRefDeck = ifelse(chosenDeckId == 'reference', 1, 0))
d
cellMeans <- d %>%
group_by(subject, difficulty, lagDifficulty) %>%
summarize(srd = mean(selRefDeck)) %>%
group_by(difficulty, lagDifficulty) %>%
summarize(selRefDeck = mean(srd), se = sd(srd) / sqrt(n()))
cellMeans
cellMeans %>%
ggplot(aes(x = difficulty, y = selRefDeck, group = lagDifficulty)) +
geom_bar(stat = 'identity', aes(fill = lagDifficulty), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = selRefDeck - se, ymax = selRefDeck + se), position = position_dodge(width = 0.9), width = 0.5) +
theme_bw() +
xlab('Difficulty') +
ylab('Proportion Selection of Reference Deck') +
ylim(0,1) +
scale_fill_manual(name = 'Lagged Difficulty', values = c('Easier than Reference' = 'Light Grey', 'Harder than reference' = 'Black')) +
theme(strip.background = element_rect(color = 'black', fill = 'white'),
legend.position = 'top')
d %>%
group_by(subject, lagDifficulty, difficulty) %>%
summarize(selRefDeck = mean(selRefDeck))
m1 <- ezANOVA(wid = subject, between = .(difficulty, lagDifficulty), dv = selRefDeck, data = d, detailed = TRUE)
m1
cs <- c(colnames(m1$ANOVA), 'n2p')
omni <- cbind(m1, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
colnames(omni) <- cs
omni
head(d)
colnames(d)
summary(d$block)
summary(d$condition)
summary(d$condition2)
nrow(d[d$subject==1,])
nrow(d[d$subject==2,])
summary(d$cycle)
d %>%
filter(subject ==2) %>%
group_by(cycle, block) %>%
summarize(n())
d %>%
filter(subject ==3) %>%
group_by(cycle, block) %>%
summarize(n())
d %>%
filter(subject ==4) %>%
group_by(cycle, block) %>%
summarize(n())
summary(d$subject)
d %>%
group_by(subject)
d %>%
group_by(subject) %>%
summarize(n())
d <- read.csv('../../../data/dstClean.csv')
d %>%
group_by(subject) %>%
summarize(n())
d %>%
q()
library(tidyverse)
library(ez)
library(data.table)
source('../../formatSimpleEffects.r')
d <- read.csv('../../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
## code lagged difficulty
d <- d %>%
group_by(subject, block, cycle) %>%
summarize(difficulty = difficulty[1]) %>%
ungroup() %>%
mutate(lagDifficulty = lag(difficulty)) %>%
select(-difficulty) %>%
inner_join(d) %>%
mutate(trash = ifelse(block == 1 & cycle == 1, 1, 0)) %>%
filter(trash == 0) %>%
select(-trash)
d <- d %>%
mutate(selRefDeck = ifelse(chosenDeckId == 'reference', 1, 0))
d
cellMeans <- d %>%
group_by(subject, difficulty, lagDifficulty) %>%
summarize(srd = mean(selRefDeck)) %>%
group_by(difficulty, lagDifficulty) %>%
summarize(selRefDeck = mean(srd), se = sd(srd) / sqrt(n()))
cellMeans
cellMeans %>%
ggplot(aes(x = difficulty, y = selRefDeck, group = lagDifficulty)) +
geom_bar(stat = 'identity', aes(fill = lagDifficulty), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = selRefDeck - se, ymax = selRefDeck + se), position = position_dodge(width = 0.9), width = 0.5) +
theme_bw() +
xlab('Difficulty') +
ylab('Proportion Selection of Reference Deck') +
ylim(0,1) +
scale_fill_manual(name = 'Lagged Difficulty', values = c('Easier than Reference' = 'Light Grey', 'Harder than reference' = 'Black')) +
theme(strip.background = element_rect(color = 'black', fill = 'white'),
legend.position = 'top')
d %>%
group_by(subject, lagDifficulty, difficulty) %>%
summarize(selRefDeck = mean(selRefDeck))
m1 <- ezANOVA(wid = subject, between = .(difficulty, lagDifficulty), dv = selRefDeck, data = d, detailed = TRUE)
m1
cs <- c(colnames(m1$ANOVA), 'n2p')
omni <- cbind(m1, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
colnames(omni) <- cs
omni
d <- read.csv('../../../data/dstClean.csv')
d$isFirstBlock <- ifelse(d$cycle == 1 & d$block == 1, 1, 0)
d[d$subject == 1 & d$isFirstBlock == 1,]
d[d$subject == 1 & d$isFirstBlock == 1, 'transcode']
d[d$subject == 1 & d$isFirstBlock == 1, 'srd']
length(d[d$subject == 1 & d$isFirstBlock == 1, 'srd']
)
colnames(d)
d <- read.csv('../../../data/dstClean.csv')
d$isFirstBlock <- ifelse(d$cycle == 1 & d$block == 1, 1, 0)
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd)) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n)) %>%
ggplot(aes(x = condition, y = srd)) +
geom_line() +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se)) +
geom_point(size = 2)
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd)) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n)) %>%
ggplot(aes(x = condition, y = srd)) +
geom_line() +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se)) +
geom_point(size = 2) +
facet_wrap(~isFirstBlock)
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd)) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n)) %>%
ggplot(aes(x = condition, y = srd)) +
geom_line() +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se)) +
geom_point(size = 2) +
facet_wrap(~isFirstBlock) +
ylim(0,1)
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd), nobs = n()) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n), nobs = sum(nobs)) %>%
head()
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd), nobs = n()) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n), nobs = sum(nobs))
70/4
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd), nobs = n()) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n), nobs = sum(nobs)) %>%
ggplot(aes(x = condition, y = srd)) +
geom_line() +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se)) +
geom_point(size = 2) +
facet_wrap(~isFirstBlock) +
ylim(0,1)
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd), nobs = n()) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n), nobs = sum(nobs)) %>%
ggplot(aes(x = condition, y = srd)) +
geom_line() +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se)) +
geom_point(size = 2) +
facet_wrap(~isFirstBlock) +
scale_x_continuous(labels = c(.1, .3, .7, .9), breaks = c(.1, .3, .7, .9)) +
ylim(0,1)
d$isFirstBlock <- ifelse(d$cycle == 1 & d$block == 1, 'First Block', 'Not First Block')
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd), nobs = n()) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n), nobs = sum(nobs)) %>%
ggplot(aes(x = condition, y = srd)) +
geom_line() +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se)) +
geom_point(size = 2) +
facet_wrap(~isFirstBlock) +
scale_x_continuous(labels = c(.1, .3, .7, .9), breaks = c(.1, .3, .7, .9)) +
ylim(0,1)
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd), nobs = n()) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n), nobs = sum(nobs)) %>%
filter(isFirstBlock == 'First Block')
.5-.37
.37-.2
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd), nobs = n()) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n), nobs = sum(nobs)) %>%
#filter(isFirstBlock == 'First Block')
ggplot(aes(x = condition, y = srd)) +
geom_line() +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se)) +
geom_point(size = 2) +
facet_wrap(~isFirstBlock) +
scale_x_continuous(labels = c(.1, .3, .7, .9), breaks = c(.1, .3, .7, .9)) +
ylim(0,1)
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd), nobs = n()) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n), nobs = sum(nobs)) %>%
#filter(isFirstBlock == 'First Block')
ggplot(aes(x = condition, y = srd)) +
geom_line() +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se)) +
geom_point(size = 2) +
geom_text(label = nobs) +
facet_wrap(~isFirstBlock) +
scale_x_continuous(labels = c(.1, .3, .7, .9), breaks = c(.1, .3, .7, .9)) +
ylim(0,1)
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd), nobs = n()) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n), nobs = sum(nobs)) %>%
#filter(isFirstBlock == 'First Block')
ggplot(aes(x = condition, y = srd)) +
geom_line() +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se)) +
geom_point(size = 2) +
geom_text(aes(label = nobs)) +
facet_wrap(~isFirstBlock) +
scale_x_continuous(labels = c(.1, .3, .7, .9), breaks = c(.1, .3, .7, .9)) +
ylim(0,1)
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd), nobs = n()) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n), nobs = sum(nobs)) %>%
#filter(isFirstBlock == 'First Block')
ggplot(aes(x = condition, y = srd)) +
geom_line() +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se)) +
geom_point(size = 2) +
geom_text(aes(label = nobs), yjust = 10) +
facet_wrap(~isFirstBlock) +
scale_x_continuous(labels = c(.1, .3, .7, .9), breaks = c(.1, .3, .7, .9)) +
ylim(0,1)
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd), nobs = n()) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n), nobs = sum(nobs)) %>%
#filter(isFirstBlock == 'First Block')
ggplot(aes(x = condition, y = srd)) +
geom_line() +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se)) +
geom_point(size = 2) +
geom_text(aes(label = nobs), nudge_y = .10) +
facet_wrap(~isFirstBlock) +
scale_x_continuous(labels = c(.1, .3, .7, .9), breaks = c(.1, .3, .7, .9)) +
ylim(0,1)
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd), nobs = n()) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n), nobs = sum(nobs)) %>%
#filter(isFirstBlock == 'First Block')
ggplot(aes(x = condition, y = srd)) +
geom_line() +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se)) +
geom_point(size = 2) +
geom_label(aes(label = nobs), nudge_y = .10) +
facet_wrap(~isFirstBlock) +
scale_x_continuous(labels = c(.1, .3, .7, .9), breaks = c(.1, .3, .7, .9)) +
ylim(0,1)
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd), nobs = n()) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n), nobs = sum(nobs)) %>%
#filter(isFirstBlock == 'First Block')
ggplot(aes(x = condition, y = srd)) +
geom_hline(yintercept = .5, type = 'dotted') +
geom_line() +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se)) +
geom_point(size = 2) +
geom_label(aes(label = nobs), nudge_y = .10) +
facet_wrap(~isFirstBlock) +
scale_x_continuous(labels = c(.1, .3, .7, .9), breaks = c(.1, .3, .7, .9)) +
ylim(0,1) +
labs(
'Proportion Selection of Reference Deck',
'Probability of Switching for Critical Deck',
caption = 'Labels reflect number of observations per condition'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
strip.background = element_rect(color = 'black', fill = 'white'))
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd), nobs = n()) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n), nobs = sum(nobs)) %>%
#filter(isFirstBlock == 'First Block')
ggplot(aes(x = condition, y = srd)) +
geom_hline(yintercept = .5, linetype = 'dotted') +
geom_line() +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se)) +
geom_point(size = 2) +
geom_label(aes(label = nobs), nudge_y = .10) +
facet_wrap(~isFirstBlock) +
scale_x_continuous(labels = c(.1, .3, .7, .9), breaks = c(.1, .3, .7, .9)) +
ylim(0,1) +
labs(
'Proportion Selection of Reference Deck',
'Probability of Switching for Critical Deck',
caption = 'Labels reflect number of observations per condition'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
strip.background = element_rect(color = 'black', fill = 'white'))
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd), nobs = n()) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n), nobs = sum(nobs)) %>%
#filter(isFirstBlock == 'First Block')
ggplot(aes(x = condition, y = srd)) +
geom_hline(yintercept = .5, linetype = 'dotted') +
geom_line() +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se)) +
geom_point(size = 2) +
geom_label(aes(label = nobs), nudge_y = .10) +
facet_wrap(~isFirstBlock) +
scale_x_continuous(labels = c(.1, .3, .7, .9), breaks = c(.1, .3, .7, .9)) +
ylim(0,1) +
labs(
y = 'Proportion Selection of Reference Deck',
x = 'Probability of Switching for Critical Deck',
caption = 'Labels reflect number of observations per condition'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
strip.background = element_rect(color = 'black', fill = 'white'))
d %>%
group_by(subject, isFirstBlock, condition) %>%
summarize(srd1 = mean(srd), nobs = n()) %>%
group_by(isFirstBlock, condition) %>%
summarize(srd = mean(srd1), se = sd(srd1) / sqrt(n), nobs = sum(nobs)) %>%
#filter(isFirstBlock == 'First Block')
ggplot(aes(x = condition, y = srd)) +
geom_hline(yintercept = .5, linetype = 'dotted') +
geom_line() +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se)) +
geom_point(size = 2) +
geom_label(aes(label = nobs), nudge_y = -.10) +
facet_wrap(~isFirstBlock) +
scale_x_continuous(labels = c(.1, .3, .7, .9), breaks = c(.1, .3, .7, .9)) +
ylim(0,1) +
labs(
y = 'Proportion Selection of Reference Deck',
x = 'Probability of Switching for Critical Deck',
caption = 'Labels reflect number of observations per condition'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
strip.background = element_rect(color = 'black', fill = 'white'))
q()
