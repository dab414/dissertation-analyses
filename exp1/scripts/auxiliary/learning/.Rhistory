geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .3) +
scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than Reference` = 'Red'))
dst %>%
group_by(subject, trial, difficulty, difference) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difficulty, difference, trial) %>%
summarize(srd = mean(selRefDeck), se = sd(selRefDeck) / sqrt(N)) %>%
ggplot(aes(x = trial, y = srd)) +
geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .3) +
scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than Reference` = 'Red')) +
scale_fill_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than Reference` = 'Red'))
dst %>%
group_by(subject, trial, difficulty, difference) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difficulty, difference, trial) %>%
summarize(srd = mean(selRefDeck), se = sd(selRefDeck) / sqrt(N)) %>%
ggplot(aes(x = trial, y = srd)) +
geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .3) +
#scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than Reference` = 'Red')) +
scale_fill_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than Reference` = 'Red'))
dst %>%
group_by(subject, trial, difficulty, difference) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difficulty, difference, trial) %>%
summarize(srd = mean(selRefDeck), se = sd(selRefDeck) / sqrt(N)) %>%
ggplot(aes(x = trial, y = srd)) +
geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .3) +
#scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than Reference` = 'Red')) +
scale_fill_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red'))
dst %>%
group_by(subject, trial, difficulty, difference) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difficulty, difference, trial) %>%
summarize(srd = mean(selRefDeck), se = sd(selRefDeck) / sqrt(N)) %>%
ggplot(aes(x = trial, y = srd)) +
geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .3) +
scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_fill_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red'))
dst %>%
group_by(subject, trial, difficulty, difference) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difficulty, difference, trial) %>%
summarize(srd = mean(selRefDeck), se = sd(selRefDeck) / sqrt(N)) %>%
ggplot(aes(x = trial, y = srd)) +
geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .2) +
scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_fill_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red'))
scale_linetype_manual(name = 'Difference)
dst %>%
group_by(subject, trial, difficulty, difference) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difficulty, difference, trial) %>%
summarize(srd = mean(selRefDeck), se = sd(selRefDeck) / sqrt(N)) %>%
ggplot(aes(x = trial, y = srd)) +
geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .2) +
scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
dst %>%
group_by(subject, trial, difficulty, difference) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difficulty, difference, trial) %>%
summarize(srd = mean(selRefDeck), se = sd(selRefDeck) / sqrt(N)) %>%
ggplot(aes(x = trial, y = srd)) +
geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .2) +
scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_fill_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) #+
dst %>%
group_by(subject, trial, difficulty, difference) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difficulty, difference, trial) %>%
summarize(srd = mean(selRefDeck), se = sd(selRefDeck) / sqrt(N)) %>%
ggplot(aes(x = trial, y = srd)) +
geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .2) +
scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_fill_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_linetype_manual(name = 'Difference')
scale_linetype_manual(name = 'Difference', value = c(Moderate = 'solid', Extreme = 'dashed')
scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
dst %>%
group_by(subject, trial, difficulty, difference) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difficulty, difference, trial) %>%
summarize(srd = mean(selRefDeck), se = sd(selRefDeck) / sqrt(N)) %>%
ggplot(aes(x = trial, y = srd)) +
geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .2) +
scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_fill_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_linetype_manual(name = 'Difference', value = c(Moderate = 'solid', Extreme = 'dashed')
dst %>%
group_by(subject, trial, difficulty, difference) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difficulty, difference, trial) %>%
summarize(srd = mean(selRefDeck), se = sd(selRefDeck) / sqrt(N)) %>%
ggplot(aes(x = trial, y = srd)) +
geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .2) +
scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_fill_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_linetype_manual(name = 'Difference', value = c(Moderate = 'solid', Extreme = 'dashed'))
dst %>%
group_by(subject, trial, difficulty, difference) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difficulty, difference, trial) %>%
summarize(srd = mean(selRefDeck), se = sd(selRefDeck) / sqrt(N)) %>%
ggplot(aes(x = trial, y = srd)) +
geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .2) +
scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_fill_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_linetype_manual(name = 'Difference', values = c(Moderate = 'solid', Extreme = 'dashed'))
dst %>%
group_by(subject, trial, difficulty, difference) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difficulty, difference, trial) %>%
summarize(srd = mean(selRefDeck), se = sd(selRefDeck) / sqrt(N)) %>%
ggplot(aes(x = trial, y = srd)) +
geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .2) +
scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_fill_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_linetype_manual(name = 'Difference', values = c(Moderate = 'solid', Extreme = 'dashed')) +
labs(
x = 'Trial',
y = 'Proportion Selection of Reference Deck',
caption = 'Color bands represent standard errors'
) +
theme_bw()
dst %>%
group_by(subject, trial, difficulty, difference) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difficulty, difference, trial) %>%
summarize(srd = mean(selRefDeck), se = sd(selRefDeck) / sqrt(N)) %>%
ggplot(aes(x = trial, y = srd)) +
geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .2) +
scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_fill_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_linetype_manual(name = 'Difference', values = c(Moderate = 'solid', Extreme = 'dashed')) +
labs(
x = 'Trial',
y = 'Proportion Selection of Reference Deck',
caption = 'Color bands represent standard errors'
) +
theme_bw() +
theme(legend.position = 'bottom')
install.packages('segmented')
library(segmented)
dst <- dst %>%
mutate(differenceD = ifelse(difference == 'moderate', 0, 1),
difficultyD = ifelse(difficulty == 'Easier than Reference', 0, 1))
m1 <- glm(selRefDeck ~ differenceD * difficultyD * trial, data = dst, family = binomial)
summary(m1)
dst[is.ns(dst),]
dst[is.na(dst),]
dst <- dst %>%
mutate(differenceD = ifelse(difference == 'Moderate', 0, 1),
difficultyD = ifelse(difficulty == 'Easier than Reference', 0, 1))
m1 <- glm(selRefDeck ~ differenceD * difficultyD * trial, data = dst, family = binomial)
summary(m1)
segmented(m1, seg.Z = differenceD * difficultyD * trial, psi = NA)
segmented(m1, seg.Z = ~differenceD * difficultyD * trial, psi = NA)
psi <- list(differenceD = c(0.5), difficultyD = c(0.5), trial = c(median(dst$trial)))
psi
segmented(m1, seg.Z = ~differenceD * difficultyD * trial, psi = psi)
psi <- list(differenceD = c(0.5), difficultyD = c(0.5), trial = c(median(dst$trial)), `differenceD:difficultyD` = c(0.5*0.5), `differenceD:trial` = c(0.5*median(dst$trial)), `difficultyD:trial` = c(0.5*median(dst$trial)), `differenceD:difficultyD:trial` = c(0.5*median(dst$trial) * 0.5))
segmented(m1, seg.Z = ~differenceD * difficultyD * trial, psi = psi)
dst <- dst %>%
mutate(differenceD = ifelse(difference == 'Moderate', 0, 1),
difficultyD = ifelse(difficulty == 'Easier than Reference', 0, 1))
m1 <- glm(selRefDeck ~ trial, data = dst[dst$differenceD == 0 & dst$difficultyD == 0,], family = binomial)
segmented(m1, seg.Z = ~ trial)
dst <- dst %>%
mutate(differenceD = ifelse(difference == 'Moderate', 0, 1),
difficultyD = ifelse(difficulty == 'Easier than Reference', 0, 1))
m1 <- glm(selRefDeck ~ trial, data = dst[dst$differenceD == 0 & dst$difficultyD == 0,], family = binomial)
s1 <- segmented(m1, seg.Z = ~ trial)
summary(s1)
s1$fitted.values
str(s1)
str(summary(s1))
summary(s1)
summary(s1)$Ttable
summary(s1)$psi
summary(s1)$psi["Est."]
summary(s1)$psi[`Est.`]
summary(s1)$psi[2]
dst <- dst %>%
mutate(differenceD = ifelse(difference == 'Moderate', 0, 1),
difficultyD = ifelse(difficulty == 'Easier than Reference', 0, 1))
result = data.frame(difference = numeric(), difficulty = numeric(), estimate = numeric())
for (i in 0:1) {
for (e in 0:1) {
m1 <- glm(selRefDeck ~ trial, data = dst[dst$differenceD == i & dst$difficultyD == e,], family = binomial)
s1 <- segmented(m1, seg.Z = ~ trial)
result <- rbind(result, data.frame(difference = i, difficulty = e, estimate = summary(s1)$psi[2]))
}
}
result
dst <- dst %>%
mutate(differenceD = ifelse(difference == 'Moderate', 0, 1),
difficultyD = ifelse(difficulty == 'Easier than Reference', 0, 1))
result = data.frame(difference = numeric(), difficulty = numeric(), estimate = numeric())
for (i in 0:1) {
for (e in 0:1) {
m1 <- glm(selRefDeck ~ trial, data = dst[dst$differenceD == i & dst$difficultyD == e,], family = binomial)
s1 <- segmented(m1, seg.Z = ~ trial)
result <- rbind(result, data.frame(difference = i, difficulty = e, estimate = summary(s1)$psi[2]))
}
}
condCodes <- dst %>%
group_by(differenceD, difficultyD) %>%
summarize(difference = unique(difference), difficulty = unique(difficulty))
condCodes
condCodes <- dst %>%
group_by(differenceD, difficultyD) %>%
summarize(difference = unique(difference), difficulty = unique(difficulty))
result <- result %>%
inner_join(condCodes)
colnames(result)
colnames(result) <- c('differenceD', 'difficultyD', 'estimate')
result <- result %>%
inner_join(condCodes)
result
p1 <- dst %>%
group_by(subject, trial, difficulty, difference) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difficulty, difference, trial) %>%
summarize(srd = mean(selRefDeck), se = sd(selRefDeck) / sqrt(N)) %>%
ggplot(aes(x = trial, y = srd)) +
geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .2) +
scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_fill_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_linetype_manual(name = 'Difference', values = c(Moderate = 'solid', Extreme = 'dashed')) +
labs(
x = 'Trial',
y = 'Proportion Selection of Reference Deck',
caption = 'Color bands represent standard errors'
) +
theme_bw() +
theme(legend.position = 'bottom')
p1
result
plotData <- dst %>%
group_by(subject, trial, difficulty, difference) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difficulty, difference, trial) %>%
summarize(srd = mean(selRefDeck), se = sd(selRefDeck) / sqrt(N))
plotData %>%
ggplot(aes(x = trial, y = srd)) +
geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .2) +
scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_fill_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_linetype_manual(name = 'Difference', values = c(Moderate = 'solid', Extreme = 'dashed')) +
labs(
x = 'Trial',
y = 'Proportion Selection of Reference Deck',
caption = 'Color bands represent standard errors'
) +
theme_bw() +
theme(legend.position = 'bottom')
p1
result <- result %>%
rename(trial = estimate) %>%
mutate(trial = round(trial)) %>%
mutate(srd = plotData[plotData$difficulty == difficulty & plotData$difference == difference,]$srd)
result <- result %>%
rename(trial = estimate) %>%
mutate(trial = round(trial)) %>%
mutate(srd = plotData[plotData$difficulty == difficulty & plotData$difference == difference, dst$trial == trial,]$srd)
result <- result %>%
rename(trial = estimate) %>%
mutate(trial = round(trial)) %>%
mutate(srd = plotData[plotData$difficulty == difficulty & plotData$difference == difference, plotData$trial == trial,]$srd)
head(plotData)
result <- result %>%
rename(trial = estimate) %>%
mutate(trial = round(trial))
result
result <- result %>%
rename(trial = estimate) %>%
mutate(trial = round(trial)) %>%
mutate(srd = plotData[plotData$difficulty == difficulty & plotData$difference == difference & plotData$trial == trial,]$srd)
library(tidyverse)
dst <- read.csv('../../../data/dstClean.csv')
N <- dst %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
dst
dst$trialBin <- cut(dst$trial, seq(0, 100, 10), include.lowest = TRUE, right = FALSE, labels = seq(1, 100, 10))
dst$selRefDeck <- ifelse(dst$chosenDeckId == 'reference', 1, 0)
dst %>%
group_by(trialBin, subject, difference, difficulty) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
ggplot(aes(x = trialBin, y = selRefDeck, group = 1)) +
geom_line(alpha = 0.3, aes(group = subject)) +
geom_smooth() +
facet_grid(difference ~ difficulty) +
labs(
x = 'Trial Bin',
y = 'Proportion Selection of Reference Deck'
) +
theme_bw() +
theme(strip.background = element_rect(fill = 'white', color = 'black'))
plotData <- dst %>%
group_by(subject, trial, difficulty, difference) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difficulty, difference, trial) %>%
summarize(srd = mean(selRefDeck), se = sd(selRefDeck) / sqrt(N))
plotData %>%
ggplot(aes(x = trial, y = srd)) +
geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .2) +
scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_fill_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_linetype_manual(name = 'Difference', values = c(Moderate = 'solid', Extreme = 'dashed')) +
labs(
x = 'Trial',
y = 'Proportion Selection of Reference Deck',
caption = 'Color bands represent standard errors'
) +
theme_bw() +
theme(legend.position = 'bottom')
p1
dst <- dst %>%
mutate(differenceD = ifelse(difference == 'Moderate', 0, 1),
difficultyD = ifelse(difficulty == 'Easier than Reference', 0, 1))
result = data.frame(differenceD = numeric(), difficultyD = numeric(), estimate = numeric())
for (i in 0:1) {
for (e in 0:1) {
m1 <- glm(selRefDeck ~ trial, data = dst[dst$differenceD == i & dst$difficultyD == e,], family = binomial)
s1 <- segmented(m1, seg.Z = ~ trial)
result <- rbind(result, data.frame(differenceD = i, difficultyD = e, estimate = summary(s1)$psi[2]))
}
}
condCodes <- dst %>%
group_by(differenceD, difficultyD) %>%
summarize(difference = unique(difference), difficulty = unique(difficulty))
result <- result %>%
inner_join(condCodes)
result <- result %>%
rename(trial = estimate) %>%
mutate(trial = round(trial)) %>%
mutate(srd = plotData[plotData$difficulty == difficulty & plotData$difference == difference & plotData$trial == trial,]$srd)
result
plotData[plotData$difficulty == 'Easier than Reference' & plotData$difference == 'Moderate' & plotData$trial == 59,]$srd
round(result$estimate)
plotData[plotData$difficulty == 'Easier than Reference' & plotData$difference == 'Moderate' & plotData$trial == 9,]$srd
plotData[plotData$difficulty == 'Easier than Reference' & plotData$difference == 'Moderate' & plotData$trial == 57,]$srd
plotData[plotData$difficulty == 'Easier than Reference' & plotData$difference == 'Moderate' & plotData$trial == 35,]$srd
result
result %>%
mutate(trial = round(estimate))
result %>%
mutate(trial = round(estimate)) %>%
mutate(srd = plotData[plotData$difficulty == difficulty & plotData$difference == difference & plotData$trial == trial,]$srd)
result <- result %>%
mutate(trial = round(estimate)) %>%
mutate(srd = plotData[plotData$difficulty == difficulty & plotData$difference == difference & plotData$trial == trial,'srd'])
head(plotData)
result <- result %>%
mutate(trial = round(estimate)) %>%
mutate(srd = plotData[plotData$difficulty == difficulty & plotData$difference == difference & plotData$trial == trial,]$srd)
library(tidyverse)
dst <- read.csv('../../../data/dstClean.csv')
N <- dst %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
dst
dst$trialBin <- cut(dst$trial, seq(0, 100, 10), include.lowest = TRUE, right = FALSE, labels = seq(1, 100, 10))
dst$selRefDeck <- ifelse(dst$chosenDeckId == 'reference', 1, 0)
dst %>%
group_by(trialBin, subject, difference, difficulty) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
ggplot(aes(x = trialBin, y = selRefDeck, group = 1)) +
geom_line(alpha = 0.3, aes(group = subject)) +
geom_smooth() +
facet_grid(difference ~ difficulty) +
labs(
x = 'Trial Bin',
y = 'Proportion Selection of Reference Deck'
) +
theme_bw() +
theme(strip.background = element_rect(fill = 'white', color = 'black'))
plotData <- dst %>%
group_by(subject, trial, difficulty, difference) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difficulty, difference, trial) %>%
summarize(srd = mean(selRefDeck), se = sd(selRefDeck) / sqrt(N))
plotData %>%
ggplot(aes(x = trial, y = srd)) +
geom_line(aes(color = difficulty, linetype = difference)) +
ylim(0,1) +
geom_ribbon(aes(ymin = srd - se, ymax = srd + se, group = interaction(difference, difficulty), fill = difficulty), alpha = .2) +
scale_color_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_fill_manual(name = 'Difficulty', values = c(`Easier than Reference` = 'Dark green', `Harder than reference` = 'Red')) +
scale_linetype_manual(name = 'Difference', values = c(Moderate = 'solid', Extreme = 'dashed')) +
labs(
x = 'Trial',
y = 'Proportion Selection of Reference Deck',
caption = 'Color bands represent standard errors'
) +
theme_bw() +
theme(legend.position = 'bottom')
p1
dst <- dst %>%
mutate(differenceD = ifelse(difference == 'Moderate', 0, 1),
difficultyD = ifelse(difficulty == 'Easier than Reference', 0, 1))
condCodes <- dst %>%
group_by(differenceD, difficultyD) %>%
summarize(difference = unique(difference), difficulty = unique(difficulty))
result = data.frame(differenceD = numeric(), difficultyD = numeric(), estimate = numeric(), srd = numeric())
for (i in 0:1) {
for (e in 0:1) {
m1 <- glm(selRefDeck ~ trial, data = dst[dst$differenceD == i & dst$difficultyD == e,], family = binomial)
s1 <- segmented(m1, seg.Z = ~ trial)
estimate <- round(summary(s1)$psi[2])
srd <- with(plotData, plotData[difference == condCodes[condCodes$differenceD == i,]$difference & difficulty == condCodes[condCodes$difficultyD == e,]$difficulty, trial == estimate])
result <- rbind(result, data.frame(differenceD = i, difficultyD = e, estimate = estimate, srd = srd))
}
}
srd <- with(plotData, plotData[difference == condCodes[condCodes$differenceD == i,]$difference & difficulty == condCodes[condCodes$difficultyD == e,]$difficulty, trial == estimate,]$srd)
for (i in 0:1) {
for (e in 0:1) {
m1 <- glm(selRefDeck ~ trial, data = dst[dst$differenceD == i & dst$difficultyD == e,], family = binomial)
s1 <- segmented(m1, seg.Z = ~ trial)
estimate <- round(summary(s1)$psi[2])
srd <- with(plotData, plotData[difference == condCodes[condCodes$differenceD == i,]$difference & difficulty == condCodes[condCodes$difficultyD == e,]$difficulty, trial == estimate,]$srd)
result <- rbind(result, data.frame(differenceD = i, difficultyD = e, estimate = estimate, srd = srd))
}
}
for (i in 0:1) {
for (e in 0:1) {
m1 <- glm(selRefDeck ~ trial, data = dst[dst$differenceD == i & dst$difficultyD == e,], family = binomial)
s1 <- segmented(m1, seg.Z = ~ trial)
estimate <- round(summary(s1)$psi[2])
srd <- plotData[plotData$difference == condCodes[condCodes$differenceD == i,]$difference & plotData$difficulty == condCodes[condCodes$difficultyD == e,]$difficulty, plotData$trial == estimate,]$srd
result <- rbind(result, data.frame(differenceD = i, difficultyD = e, estimate = estimate, srd = srd))
}
}
condCodes
i <- 0
e <- 0
srd <- plotData[plotData$difference == condCodes[condCodes$differenceD == i,]$difference & plotData$difficulty == condCodes[condCodes$difficultyD == e,]$difficulty, plotData$trial == estimate,]$srd
rlang()::last_error()''
rlang()::last_error()
rlang::last_error()
summary(rlang::last_error())
condCodes[condCodes$differenceD == i,]$difference
srd <- plotData[plotData$difference == condCodes[condCodes$differenceD == i,]$difference[1] & plotData$difficulty == condCodes[condCodes$difficultyD == e,]$difficulty[1], plotData$trial == estimate,]$srd
srd <- plotData[plotData$difference == condCodes[condCodes$differenceD == i,]$difference[1] & plotData$difficulty == condCodes[condCodes$difficultyD == e,]$difficulty[1] & plotData$trial == estimate,]$srd
for (i in 0:1) {
for (e in 0:1) {
m1 <- glm(selRefDeck ~ trial, data = dst[dst$differenceD == i & dst$difficultyD == e,], family = binomial)
s1 <- segmented(m1, seg.Z = ~ trial)
estimate <- round(summary(s1)$psi[2])
srd <- plotData[plotData$difference == condCodes[condCodes$differenceD == i,]$difference[1] & plotData$difficulty == condCodes[condCodes$difficultyD == e,]$difficulty[1] & plotData$trial == estimate,]$srd
result <- rbind(result, data.frame(differenceD = i, difficultyD = e, estimate = estimate, srd = srd))
}
}
result <- result %>%
inner_join(condCodes)
result
p1 +
geom_point(data = result, aes(x = trial, y = srd, color = difficulty))
restul
result
result <- result %>%
rename(trial = estimate)
p1 +
geom_point(data = result, aes(x = trial, y = srd, color = difficulty))
p1 +
geom_point(data = result, aes(x = trial, y = srd, color = difficulty), size = 4)
p1 +
geom_point(data = result, aes(x = trial, y = srd, color = difficulty), size = 4, shape = 13)
p1 +
geom_point(data = result, aes(x = trial, y = srd, color = 'blue'), size = 4, shape = 13)
p1 +
geom_point(data = result, aes(x = trial, y = srd), color = 'blue', size = 4, shape = 13)
p1 +
geom_point(data = result, aes(x = trial, y = srd), color = 'blue', size = 4, shape = 13) +
labs(caption = 'Blue targets represent breaking point in the selection ~ trial relationship.')
q()
