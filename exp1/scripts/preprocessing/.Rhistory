badSubjectsList <- d %>%
group_by(subject) %>%
summarize(error = mean(error))
badSubjectsList %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey') +
theme_bw() +
xlab('Error Rate')
badSubjectsList <- badSubjectsList %>%
filter(error > .35)
badSubjects <- rbind(badSubjects, data.frame(subject = badSubjectsList$subject, reason = rep('Error rate higher than 15%', nrow(badSubjectsList))))
badSubjects
good <- d %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error < .35)
bad <- d %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error > .35)
good
bad
source('../identitiesAndRejections/computeRejectList.r')
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
head(rejectList)
d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
filter(subject == 4)
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
filter(subject == 3) %>%
d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
filter(subject == 3) %>%
select(isBot)
d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot))
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_fill_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
theme_bw() +
theme(legend.position = 'bottom')
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_fill_manual(title = 'Turing Test', values = c(Bot = 'red', Human = 'green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
theme_bw() +
theme(legend.position = 'bottom')
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_fill_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
theme_bw() +
theme(legend.position = 'bottom')
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
theme_bw() +
theme(legend.position = 'bottom')
d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
theme_bw() +
theme(legend.position = 'bottom')
q()
library(tidyverse)
library(data.table)
d <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
d
badSubjectsList <- demo[demo$vision == 'impaired',]$subject
badSubjects <- data.frame(subject = badSubjectsList, reason = rep('Vision Impaired', length(badSubjectsList)))
badSubjectsList <- d %>%
group_by(subject) %>%
summarize(error = mean(error))
badSubjectsList %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey') +
theme_bw() +
xlab('Error Rate')
badSubjectsList <- badSubjectsList %>%
filter(error > .15)
badSubjects <- rbind(badSubjects, data.frame(subject = badSubjectsList$subject, reason = rep('Error rate higher than 15%', nrow(badSubjectsList))))
badSubjects
good <- d %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error < .35)
bad <- d %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error > .35)
good
bad
source('../identitiesAndRejections/computeRejectList.r')
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
theme_bw() +
theme(legend.position = 'bottom')
q()
install.packages('ggextra')
install.packages('ggExtra')
library(ggExtra)
d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
ggMarginal(groupedColor = TRUE) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
theme_bw() +
theme(legend.position = 'bottom')
library(tidyverse)
library(data.table)
library(ggExtra)
d <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
d
badSubjectsList <- demo[demo$vision == 'impaired',]$subject
badSubjects <- data.frame(subject = badSubjectsList, reason = rep('Vision Impaired', length(badSubjectsList)))
badSubjectsList <- d %>%
group_by(subject) %>%
summarize(error = mean(error))
badSubjectsList %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey') +
theme_bw() +
xlab('Error Rate')
badSubjectsList <- badSubjectsList %>%
filter(error > .15)
badSubjects <- rbind(badSubjects, data.frame(subject = badSubjectsList$subject, reason = rep('Error rate higher than 15%', nrow(badSubjectsList))))
badSubjects
good <- d %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error < .35)
bad <- d %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error > .35)
good
bad
source('../identitiesAndRejections/computeRejectList.r')
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
ggMarginal(groupedColor = TRUE) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
theme_bw() +
theme(legend.position = 'bottom')
ggMarginal(p = p, groupedColor = TRUE) +
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
p <- d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
theme_bw() +
theme(legend.position = 'bottom')
ggMarginal(p = p, groupedColor = TRUE) +
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
p <- d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
theme_bw() +
theme(legend.position = 'bottom')
ggMarginal(p = p, groupedColor = TRUE)
ggMarginal(p = p, groupedFill = TRUE)
ggMarginal(p = p)
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
p <- d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
theme_bw() +
theme(legend.position = 'bottom')
ggMarginal(p = p)
ggMarginal(p = p, type = 'histogram')
ggMarginal(p = p, type = 'histogram')
p <- d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt, color = isBot)) +
geom_point() +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
theme_bw() +
theme(legend.position = 'bottom')
ggMarginal(p = p, type = 'histogram', groupFill = TRUE)
q()
library(tidyverse)
library(data.table)
library(ggExtra)
d <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
d
badSubjectsList <- demo[demo$vision == 'impaired',]$subject
badSubjects <- data.frame(subject = badSubjectsList, reason = rep('Vision Impaired', length(badSubjectsList)))
badSubjectsList <- d %>%
group_by(subject) %>%
summarize(error = mean(error))
badSubjectsList %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey') +
theme_bw() +
xlab('Error Rate')
badSubjectsList <- badSubjectsList %>%
filter(error > .15)
badSubjects <- rbind(badSubjects, data.frame(subject = badSubjectsList$subject, reason = rep('Error rate higher than 15%', nrow(badSubjectsList))))
badSubjects
good <- d %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error < .35)
bad <- d %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error > .35)
good
bad
source('../identitiesAndRejections/computeRejectList.r')
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
p <- d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt, color = isBot)) +
geom_point() +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
theme_bw() +
theme(legend.position = 'bottom')
ggMarginal(p = p, type = 'histogram', groupFill = TRUE)
print(paste('Number of rows before removing bad subjects:', nrow(d)))
d <- d[!(d$subject %in% badSubjects$subject),]
print(paste('Number of rows after removing bad subjects:', nrow(d)))
demo <- demo[!(demo$subject %in% badSubjects$subject),]
d %>%
group_by(subject) %>%
summarize(error = mean(error)) %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey') +
theme_bw() +
xlab('Error Rate')
initialRows <- nrow(d)
print(paste('Number of rows before removing trials with RTs longer than 10 s:', initialRows))
d <- d %>%
filter(cuedRt < 10000, choiceRt < 10000)
print(paste('Number of rows after removing trials with RTs longer than 10 s:', nrow(d)))
badTrials <- data.frame('Data Dropped' = round(1 - (nrow(d) / initialRows), 2), Reason = 'Trials longer than 10 s')
badTrials
## choice first
initialRows <- nrow(d)
print(paste('Number of rows before removing trials where choices exceeded participant-wise choice RT cutoffs:', initialRows))
d <- d %>%
group_by(subject) %>%
summarize(meanChoiceRt = mean(choiceRt), sdChoiceRt = sd(choiceRt)) %>%
inner_join(d) %>%
mutate(badChoice = ifelse(choiceRt <= meanChoiceRt - 2 * sdChoiceRt | choiceRt > meanChoiceRt + 2 * sdChoiceRt, 1, 0)) %>%
filter(badChoice == 0) %>%
select(-badChoice)
print(paste('Number of rows before removing trials where choices exceeded participant-wise choice RT cutoffs:', nrow(d)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(d) / initialRows), 2), Reason = 'Choice trials with RTs more extreme than two SDs beyond participant-wise means'))
badTrials
## now for cued responses
initialRows <- nrow(d)
print(paste('Number of rows before removing trials where cued responses exceeded participant-wise cued RT cutoffs:', initialRows))
d <- d %>%
group_by(subject) %>%
summarize(meancuedRt = mean(cuedRt), sdcuedRt = sd(cuedRt)) %>%
inner_join(d) %>%
mutate(badcued = ifelse(cuedRt <= meancuedRt - 2 * sdcuedRt | cuedRt > meancuedRt + 2 * sdcuedRt, 1, 0)) %>%
filter(badcued == 0) %>%
select(-badcued)
print(paste('Number of rows before removing trials where cued responses exceeded participant-wise cued RT cutoffs:', nrow(d)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(d) / initialRows), 2), Reason = 'Cued trials with RTs more extreme than two SDs beyond participant-wise means'))
badTrials
write.csv(d, '../../data/dstCleanErrors.csv', row.names = FALSE)
initialRows <- nrow(d)
print(paste('Number of rows before removing error trials and trials following error trials :', initialRows))
d <- d %>%
mutate(errorTrim = ifelse(error | shift(error), 1, 0)) %>%
filter(errorTrim == 0)
print(paste('Number of rows before removing error trials and trials following error trials :', nrow(d)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(d) / initialRows), 2), Reason = 'Trimming error trials and trials following error trials'))
badTrials
write.csv(d, '../../data/dstClean.csv', row.names = FALSE)
write.csv(demo, '../../data/demoClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
n
nrow(badSubjects)
nrow(badSubjects[unique(badSubjects$subject),])
q()
library(tidyverse)
library(data.table)
library(ggExtra)
d <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
d
badSubjectsList <- demo[demo$vision == 'impaired',]$subject
badSubjects <- data.frame(subject = badSubjectsList, reason = rep('Vision Impaired', length(badSubjectsList)))
badSubjectsList <- d %>%
group_by(subject) %>%
summarize(error = mean(error))
badSubjectsList %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey') +
theme_bw() +
xlab('Error Rate')
badSubjectsList <- badSubjectsList %>%
filter(error > .15)
badSubjects <- rbind(badSubjects, data.frame(subject = badSubjectsList$subject, reason = rep('Error rate higher than 15%', nrow(badSubjectsList))))
badSubjects
uniqueBadSubjects <- nrow(badSubjects[unique(badSubjects$subject),])
write.csv(uniqueBadSubjects, '../../data/badSubjects.csv', row.names = FALSE)
good <- d %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error < .35)
bad <- d %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error > .35)
good
bad
source('../identitiesAndRejections/computeRejectList.r')
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
p <- d %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt, color = isBot)) +
geom_point() +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
theme_bw() +
theme(legend.position = 'bottom')
ggMarginal(p = p, type = 'histogram', groupFill = TRUE)
print(paste('Number of rows before removing bad subjects:', nrow(d)))
d <- d[!(d$subject %in% badSubjects$subject),]
print(paste('Number of rows after removing bad subjects:', nrow(d)))
demo <- demo[!(demo$subject %in% badSubjects$subject),]
d %>%
group_by(subject) %>%
summarize(error = mean(error)) %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey') +
theme_bw() +
xlab('Error Rate')
initialRows <- nrow(d)
print(paste('Number of rows before removing trials with RTs longer than 10 s:', initialRows))
d <- d %>%
filter(cuedRt < 10000, choiceRt < 10000)
print(paste('Number of rows after removing trials with RTs longer than 10 s:', nrow(d)))
badTrials <- data.frame('Data Dropped' = round(1 - (nrow(d) / initialRows), 2), Reason = 'Trials longer than 10 s')
badTrials
## choice first
initialRows <- nrow(d)
print(paste('Number of rows before removing trials where choices exceeded participant-wise choice RT cutoffs:', initialRows))
d <- d %>%
group_by(subject) %>%
summarize(meanChoiceRt = mean(choiceRt), sdChoiceRt = sd(choiceRt)) %>%
inner_join(d) %>%
mutate(badChoice = ifelse(choiceRt <= meanChoiceRt - 2 * sdChoiceRt | choiceRt > meanChoiceRt + 2 * sdChoiceRt, 1, 0)) %>%
filter(badChoice == 0) %>%
select(-badChoice)
print(paste('Number of rows before removing trials where choices exceeded participant-wise choice RT cutoffs:', nrow(d)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(d) / initialRows), 2), Reason = 'Choice trials with RTs more extreme than two SDs beyond participant-wise means'))
badTrials
## now for cued responses
initialRows <- nrow(d)
print(paste('Number of rows before removing trials where cued responses exceeded participant-wise cued RT cutoffs:', initialRows))
d <- d %>%
group_by(subject) %>%
summarize(meancuedRt = mean(cuedRt), sdcuedRt = sd(cuedRt)) %>%
inner_join(d) %>%
mutate(badcued = ifelse(cuedRt <= meancuedRt - 2 * sdcuedRt | cuedRt > meancuedRt + 2 * sdcuedRt, 1, 0)) %>%
filter(badcued == 0) %>%
select(-badcued)
print(paste('Number of rows before removing trials where cued responses exceeded participant-wise cued RT cutoffs:', nrow(d)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(d) / initialRows), 2), Reason = 'Cued trials with RTs more extreme than two SDs beyond participant-wise means'))
badTrials
write.csv(d, '../../data/dstCleanErrors.csv', row.names = FALSE)
initialRows <- nrow(d)
print(paste('Number of rows before removing error trials and trials following error trials :', initialRows))
d <- d %>%
mutate(errorTrim = ifelse(error | shift(error), 1, 0)) %>%
filter(errorTrim == 0)
print(paste('Number of rows before removing error trials and trials following error trials :', nrow(d)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(d) / initialRows), 2), Reason = 'Trimming error trials and trials following error trials'))
badTrials
write.csv(d, '../../data/dstClean.csv', row.names = FALSE)
write.csv(demo, '../../data/demoClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
q
q()
