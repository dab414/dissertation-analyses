) +
theme_bw()
q()
d %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
spread(condition, selRefDeck)
library(tidyverse)
library(ez)
d <- read.csv('../../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
d
d <- d %>%
mutate(selRefDeck = ifelse(chosenDeckId == 'reference', 1, 0)) %>%
mutate(difference = factor(difference, levels = levels(factor(difference))[c(2,1)]))
d %>%
group_by(subject, difference, difficulty) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difference, difficulty) %>%
summarize(mSelRefDeck = mean(selRefDeck), se = sd(selRefDeck) / sqrt(n())) %>%
ggplot(aes(x = difficulty, y = mSelRefDeck, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = mSelRefDeck - se, ymax = mSelRefDeck + se), position = position_dodge(width = 0.9), width = 0.5) +
theme_bw() +
xlab('Difficulty') +
ylab('Proportion Selection of Reference Deck') +
ylim(0,1) +
scale_fill_manual(name = 'Difference', values = c(Moderate = 'Light Grey', Extreme = 'Black')) +
theme(legend.position = 'top')
d %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck))
d %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
spread(condition, selRefDeck)
condMeans <- d %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
subjectCodes <- d %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
spread(condition, selRefDeck) %>%
mutate(rational = ifelse(EE < EM & EM < HM & HM < HE, 'yes', 'no')) %>%
mutate(EEDev = EM - EE, EMDev = 0.5 - EM, HMDev = HM - 0.5, HEDev = HE - HM) %>%
mutate(model = ifelse(EMDev > EEDev & HMDev > HEDev, 'Prospect', ifelse(EEDev > EMDev & EMDev > HMDev & HMDev > HEDev, 'Concave Down',
ifelse(EEDev < EMDev & EMDev < HMDev & HMDev < HEDev, 'Concave Up', 'Other')))) %>%
select(subject, rational, model)
condMeans <- d %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(condition) %>%
summarize(selRefDeck = mean(selRefDeck))
subjectCodes <- d %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
spread(condition, selRefDeck) %>%
mutate(rational = ifelse(EE < EM & EM < HM & HM < HE, 'yes', 'no')) %>%
mutate(EEDev = EM - EE, EMDev = 0.5 - EM, HMDev = HM - 0.5, HEDev = HE - HM) %>%
mutate(model = ifelse(EMDev > EEDev & HMDev > HEDev, 'Prospect', ifelse(EEDev > EMDev & EMDev > HMDev & HMDev > HEDev, 'Concave Down',
ifelse(EEDev < EMDev & EMDev < HMDev & HMDev < HEDev, 'Concave Up', 'Other')))) %>%
select(subject, rational, model)
d %>%
mutate(condition = factor(condition, levels = levels(condition)[c(2,1,4,3)])) %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
inner_join(subjectCodes)
ggplot(aes(x = condition, y = selRefDeck)) +
geom_violin(fill = NA) +
geom_boxplot(fill = NA) +
geom_point(alpha = .3) +
geom_line(aes(group = subject, aes = rational), alpha = .3, linetype = 'dashed') +
geom_point(data = condMeans, aes(x = condition, y = selRefDeck), size = 4, fill = 'red', shape = 23) +
geom_label(data = condMeans, aes(x = condition, y = selRefDeck, label = round(selRefDeck,2), hjust = 1.5, vjust = 1.5)) +
scale_x_discrete(labels = c(`EM` = 'Easy Moderate', `EE` = 'Extreme Easy', `HM` = 'Hard Moderate', `HE` = 'Hard Extreme')) +
labs(
title = 'Selection of reference deck by condition and subject',
caption = 'Red diamonds are condition means. Horizontal black lines are medians.',
x = 'Critical Deck Intensity Level',
y = 'Proportion Selection of Reference Deck'
) +
theme_bw()
condMeans <- d %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(condition) %>%
summarize(selRefDeck = mean(selRefDeck))
subjectCodes <- d %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
spread(condition, selRefDeck) %>%
mutate(rational = ifelse(EE < EM & EM < HM & HM < HE, 'yes', 'no')) %>%
mutate(EEDev = EM - EE, EMDev = 0.5 - EM, HMDev = HM - 0.5, HEDev = HE - HM) %>%
mutate(model = ifelse(EMDev > EEDev & HMDev > HEDev, 'Prospect', ifelse(EEDev > EMDev & EMDev > HMDev & HMDev > HEDev, 'Concave Down',
ifelse(EEDev < EMDev & EMDev < HMDev & HMDev < HEDev, 'Concave Up', 'Other')))) %>%
select(subject, rational, model)
d %>%
mutate(condition = factor(condition, levels = levels(condition)[c(2,1,4,3)])) %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
inner_join(subjectCodes) %>%
ggplot(aes(x = condition, y = selRefDeck)) +
geom_violin(fill = NA) +
geom_boxplot(fill = NA) +
geom_point(alpha = .3) +
geom_line(aes(group = subject, aes = rational), alpha = .3, linetype = 'dashed') +
geom_point(data = condMeans, aes(x = condition, y = selRefDeck), size = 4, fill = 'red', shape = 23) +
geom_label(data = condMeans, aes(x = condition, y = selRefDeck, label = round(selRefDeck,2), hjust = 1.5, vjust = 1.5)) +
scale_x_discrete(labels = c(`EM` = 'Easy Moderate', `EE` = 'Extreme Easy', `HM` = 'Hard Moderate', `HE` = 'Hard Extreme')) +
labs(
title = 'Selection of reference deck by condition and subject',
caption = 'Red diamonds are condition means. Horizontal black lines are medians.',
x = 'Critical Deck Intensity Level',
y = 'Proportion Selection of Reference Deck'
) +
theme_bw()
condMeans <- d %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(condition) %>%
summarize(selRefDeck = mean(selRefDeck))
subjectCodes <- d %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
spread(condition, selRefDeck) %>%
mutate(rational = ifelse(EE < EM & EM < HM & HM < HE, 'yes', 'no')) %>%
mutate(EEDev = EM - EE, EMDev = 0.5 - EM, HMDev = HM - 0.5, HEDev = HE - HM) %>%
mutate(model = ifelse(EMDev > EEDev & HMDev > HEDev, 'Prospect', ifelse(EEDev > EMDev & EMDev > HMDev & HMDev > HEDev, 'Concave Down',
ifelse(EEDev < EMDev & EMDev < HMDev & HMDev < HEDev, 'Concave Up', 'Other')))) %>%
select(subject, rational, model)
d %>%
mutate(condition = factor(condition, levels = levels(condition)[c(2,1,4,3)])) %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
inner_join(subjectCodes) %>%
ggplot(aes(x = condition, y = selRefDeck)) +
geom_violin(fill = NA) +
geom_boxplot(fill = NA) +
geom_point(alpha = .3) +
geom_line(aes(group = subject, color = rational), alpha = .3, linetype = 'dashed') +
geom_point(data = condMeans, aes(x = condition, y = selRefDeck), size = 4, fill = 'red', shape = 23) +
geom_label(data = condMeans, aes(x = condition, y = selRefDeck, label = round(selRefDeck,2), hjust = 1.5, vjust = 1.5)) +
scale_x_discrete(labels = c(`EM` = 'Easy Moderate', `EE` = 'Extreme Easy', `HM` = 'Hard Moderate', `HE` = 'Hard Extreme')) +
labs(
title = 'Selection of reference deck by condition and subject',
caption = 'Red diamonds are condition means. Horizontal black lines are medians.',
x = 'Critical Deck Intensity Level',
y = 'Proportion Selection of Reference Deck'
) +
theme_bw()
d %>%
mutate(condition = factor(condition, levels = levels(condition)[c(2,1,4,3)])) %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
inner_join(subjectCodes) %>%
ggplot(aes(x = condition, y = selRefDeck)) +
geom_violin(fill = NA) +
geom_boxplot(fill = NA) +
geom_point(alpha = .3) +
geom_line(aes(group = subject, color = rational), alpha = .4, linetype = 'dashed') +
geom_point(data = condMeans, aes(x = condition, y = selRefDeck), size = 4, fill = 'red', shape = 23) +
geom_label(data = condMeans, aes(x = condition, y = selRefDeck, label = round(selRefDeck,2), hjust = 1.5, vjust = 1.5)) +
scale_x_discrete(labels = c(`EM` = 'Easy Moderate', `EE` = 'Extreme Easy', `HM` = 'Hard Moderate', `HE` = 'Hard Extreme')) +
labs(
title = 'Selection of reference deck by condition and subject',
caption = 'Red diamonds are condition means. Horizontal black lines are medians.',
x = 'Critical Deck Intensity Level',
y = 'Proportion Selection of Reference Deck'
) +
theme_bw()
d %>%
mutate(condition = factor(condition, levels = levels(condition)[c(2,1,4,3)])) %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
inner_join(subjectCodes) %>%
ggplot(aes(x = condition, y = selRefDeck)) +
geom_violin(fill = NA) +
geom_boxplot(fill = NA) +
geom_point(alpha = .3) +
geom_line(aes(group = subject, color = rational), alpha = .6, linetype = 'dashed') +
geom_point(data = condMeans, aes(x = condition, y = selRefDeck), size = 4, fill = 'red', shape = 23) +
geom_label(data = condMeans, aes(x = condition, y = selRefDeck, label = round(selRefDeck,2), hjust = 1.5, vjust = 1.5)) +
scale_x_discrete(labels = c(`EM` = 'Easy Moderate', `EE` = 'Extreme Easy', `HM` = 'Hard Moderate', `HE` = 'Hard Extreme')) +
labs(
title = 'Selection of reference deck by condition and subject',
caption = 'Red diamonds are condition means. Horizontal black lines are medians.',
x = 'Critical Deck Intensity Level',
y = 'Proportion Selection of Reference Deck'
) +
theme_bw()
subjectCodes %>%
group_by(rational) %>%
summarize(n())
d %>%
mutate(condition = factor(condition, levels = levels(condition)[c(2,1,4,3)])) %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
inner_join(subjectCodes) %>%
ggplot(aes(x = condition, y = selRefDeck)) +
geom_violin(fill = NA) +
geom_boxplot(fill = NA) +
geom_point(alpha = .3) +
geom_line(aes(group = subject, color = model), alpha = .6, linetype = 'dashed') +
geom_point(data = condMeans, aes(x = condition, y = selRefDeck), size = 4, fill = 'red', shape = 23) +
geom_label(data = condMeans, aes(x = condition, y = selRefDeck, label = round(selRefDeck,2), hjust = 1.5, vjust = 1.5)) +
scale_x_discrete(labels = c(`EM` = 'Easy Moderate', `EE` = 'Extreme Easy', `HM` = 'Hard Moderate', `HE` = 'Hard Extreme')) +
labs(
title = 'Selection of reference deck by condition and subject',
caption = 'Red diamonds are condition means. Horizontal black lines are medians.',
x = 'Critical Deck Intensity Level',
y = 'Proportion Selection of Reference Deck'
) +
theme_bw()
subjectCodes %>%
group_by(model) %>%
summarize(n())
d %>%
mutate(condition = factor(condition, levels = levels(condition)[c(2,1,4,3)])) %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
inner_join(subjectCodes) %>%
filter(model != 'other') %>%
ggplot(aes(x = condition, y = selRefDeck)) +
geom_violin(fill = NA) +
geom_boxplot(fill = NA) +
geom_point(alpha = .3) +
geom_line(aes(group = subject, color = model), alpha = .6, linetype = 'dashed') +
geom_point(data = condMeans, aes(x = condition, y = selRefDeck), size = 4, fill = 'red', shape = 23) +
geom_label(data = condMeans, aes(x = condition, y = selRefDeck, label = round(selRefDeck,2), hjust = 1.5, vjust = 1.5)) +
scale_x_discrete(labels = c(`EM` = 'Easy Moderate', `EE` = 'Extreme Easy', `HM` = 'Hard Moderate', `HE` = 'Hard Extreme')) +
labs(
title = 'Selection of reference deck by condition and subject',
caption = 'Red diamonds are condition means. Horizontal black lines are medians.',
x = 'Critical Deck Intensity Level',
y = 'Proportion Selection of Reference Deck'
) +
theme_bw()
d %>%
mutate(condition = factor(condition, levels = levels(condition)[c(2,1,4,3)])) %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
inner_join(subjectCodes) %>%
filter(model != 'Other') %>%
ggplot(aes(x = condition, y = selRefDeck)) +
geom_violin(fill = NA) +
geom_boxplot(fill = NA) +
geom_point(alpha = .3) +
geom_line(aes(group = subject, color = model), alpha = .6, linetype = 'dashed') +
geom_point(data = condMeans, aes(x = condition, y = selRefDeck), size = 4, fill = 'red', shape = 23) +
geom_label(data = condMeans, aes(x = condition, y = selRefDeck, label = round(selRefDeck,2), hjust = 1.5, vjust = 1.5)) +
scale_x_discrete(labels = c(`EM` = 'Easy Moderate', `EE` = 'Extreme Easy', `HM` = 'Hard Moderate', `HE` = 'Hard Extreme')) +
labs(
title = 'Selection of reference deck by condition and subject',
caption = 'Red diamonds are condition means. Horizontal black lines are medians.',
x = 'Critical Deck Intensity Level',
y = 'Proportion Selection of Reference Deck'
) +
theme_bw()
condMeans <- d %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(condition) %>%
summarize(selRefDeck = mean(selRefDeck))
## building in the option to break subjects down by hypothesis
## a little underwhelming
subjectCodes <- d %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
spread(condition, selRefDeck) %>%
mutate(rational = ifelse(EE < EM & EM < HM & HM < HE, 'yes', 'no')) %>%
mutate(EEDev = EM - EE, EMDev = 0.5 - EM, HMDev = HM - 0.5, HEDev = HE - HM) %>%
mutate(model = ifelse(EMDev > EEDev & HMDev > HEDev, 'Prospect', ifelse(EEDev > EMDev & EMDev > HMDev & HMDev > HEDev, 'Concave Down',
ifelse(EEDev < EMDev & EMDev < HMDev & HMDev < HEDev, 'Concave Up', 'Other')))) %>%
select(subject, rational, model)
d %>%
mutate(condition = factor(condition, levels = levels(condition)[c(2,1,4,3)])) %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
inner_join(subjectCodes) %>%
ggplot(aes(x = condition, y = selRefDeck)) +
geom_violin(fill = NA) +
geom_boxplot(fill = NA) +
geom_point(alpha = .3) +
geom_line(aes(group = subject), alpha = .6, linetype = 'dashed') +
geom_point(data = condMeans, aes(x = condition, y = selRefDeck), size = 4, fill = 'red', shape = 23) +
geom_label(data = condMeans, aes(x = condition, y = selRefDeck, label = round(selRefDeck,2), hjust = 1.5, vjust = 1.5)) +
scale_x_discrete(labels = c(`EM` = 'Easy Moderate', `EE` = 'Extreme Easy', `HM` = 'Hard Moderate', `HE` = 'Hard Extreme')) +
labs(
title = 'Selection of reference deck by condition and subject',
caption = 'Red diamonds are condition means. Horizontal black lines are medians.',
x = 'Critical Deck Intensity Level',
y = 'Proportion Selection of Reference Deck'
) +
theme_bw()
q()
library(tidyverse)
library(ez)
d <- read.csv('../../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
d
d <- d %>%
mutate(selRefDeck = ifelse(chosenDeckId == 'reference', 1, 0)) %>%
mutate(difference = factor(difference, levels = levels(factor(difference))[c(2,1)]))
d %>%
group_by(subject, difference, difficulty) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difference, difficulty) %>%
summarize(mSelRefDeck = mean(selRefDeck), se = sd(selRefDeck) / sqrt(n())) %>%
ggplot(aes(x = difficulty, y = mSelRefDeck, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = mSelRefDeck - se, ymax = mSelRefDeck + se), position = position_dodge(width = 0.9), width = 0.5) +
theme_bw() +
xlab('Difficulty') +
ylab('Proportion Selection of Reference Deck') +
ylim(0,1) +
scale_fill_manual(name = 'Difference', values = c(Moderate = 'Light Grey', Extreme = 'Black')) +
theme(legend.position = 'top')
condMeans <- d %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(condition) %>%
summarize(selRefDeck = mean(selRefDeck))
## building in the option to break subjects down by hypothesis
## a little underwhelming
subjectCodes <- d %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
spread(condition, selRefDeck) %>%
mutate(rational = ifelse(EE < EM & EM < HM & HM < HE, 'yes', 'no')) %>%
mutate(EEDev = EM - EE, EMDev = 0.5 - EM, HMDev = HM - 0.5, HEDev = HE - HM) %>%
mutate(model = ifelse(EMDev > EEDev & HMDev > HEDev, 'Prospect', ifelse(EEDev > EMDev & EMDev > HMDev & HMDev > HEDev, 'Concave Down',
ifelse(EEDev < EMDev & EMDev < HMDev & HMDev < HEDev, 'Concave Up', 'Other')))) %>%
select(subject, rational, model)
d %>%
mutate(condition = factor(condition, levels = levels(condition)[c(2,1,4,3)])) %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
inner_join(subjectCodes) %>%
ggplot(aes(x = condition, y = selRefDeck)) +
geom_violin(fill = NA) +
geom_boxplot(fill = NA) +
geom_point(alpha = .3) +
geom_line(aes(group = subject), alpha = .6, linetype = 'dashed') +
geom_point(data = condMeans, aes(x = condition, y = selRefDeck), size = 4, fill = 'red', shape = 23) +
geom_label(data = condMeans, aes(x = condition, y = selRefDeck, label = round(selRefDeck,2), hjust = 1.5, vjust = 1.5)) +
scale_x_discrete(labels = c(`EM` = 'Easy Moderate', `EE` = 'Extreme Easy', `HM` = 'Hard Moderate', `HE` = 'Hard Extreme')) +
labs(
title = 'Selection of reference deck by condition and subject',
caption = 'Red diamonds are condition means. Horizontal black lines are medians.',
x = 'Critical Deck Intensity Level',
y = 'Proportion Selection of Reference Deck'
) +
theme_bw()
condTable <- data.frame(condition = c('EE','EM','HE','HM'), difficulty = c(rep('Easier than Reference', 2), rep('Harder than Reference', 2)), difference = rep(c('Extreme', 'Moderate'), 2))
subjectCellMeans <- d %>%
mutate(selRefDeck = ifelse(chosenDeckId == 'reference', 1, 0)) %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
spread(condition, selRefDeck) %>%
mutate(EEDEV = EM - EE, EMDEV = 0.5 - EM, HMDEV = HM - 0.5, HEDEV = HE - HM) %>%
select(-(EE:HM)) %>%
gather(condition, selRefDeck, contains('DEV')) %>%
mutate(condition = str_replace(condition, 'DEV', '')) %>%
inner_join(condTable) %>%
select(-condition)
subjectCellMeans
subjectCellMeans %>%
mutate(difference = factor(difference, levels = levels(factor(difference))[c(2,1)]))
group_by(difficulty, difference) %>%
summarize(mSelRefDeck = mean(selRefDeck), se = sd(selRefDeck) / sqrt(n())) %>%
ggplot(aes(x = difficulty, y = mSelRefDeck, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = mSelRefDeck - se, ymax = mSelRefDeck + se), position = position_dodge(width = 0.9), width = 0.5) +
theme_bw() +
xlab('Difficulty') +
ylab('Change in Selection of Reference Deck') +
scale_fill_manual(name = 'Difference', values = c(Moderate = 'Light Grey', Extreme = 'Black')) +
theme(legend.position = 'top')
subjectCellMeans %>%
mutate(difference = factor(difference, levels = levels(factor(difference))[c(2,1)])) %>%
group_by(difficulty, difference) %>%
summarize(mSelRefDeck = mean(selRefDeck), se = sd(selRefDeck) / sqrt(n())) %>%
ggplot(aes(x = difficulty, y = mSelRefDeck, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = mSelRefDeck - se, ymax = mSelRefDeck + se), position = position_dodge(width = 0.9), width = 0.5) +
theme_bw() +
xlab('Difficulty') +
ylab('Change in Selection of Reference Deck') +
scale_fill_manual(name = 'Difference', values = c(Moderate = 'Light Grey', Extreme = 'Black')) +
theme(legend.position = 'top')
q()
library(tidyverse)
library(ez)
d <- read.csv('../../../data/dstClean.csv')
n <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow(.)
d
d <- d %>%
mutate(selRefDeck = ifelse(chosenDeckId == 'reference', 1, 0)) %>%
mutate(difference = factor(difference, levels = levels(factor(difference))[c(2,1)]))
d %>%
group_by(subject, difference, difficulty) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(difference, difficulty) %>%
summarize(mSelRefDeck = mean(selRefDeck), se = sd(selRefDeck) / sqrt(n())) %>%
ggplot(aes(x = difficulty, y = mSelRefDeck, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = mSelRefDeck - se, ymax = mSelRefDeck + se), position = position_dodge(width = 0.9), width = 0.5) +
theme_bw() +
xlab('Difficulty') +
ylab('Proportion Selection of Reference Deck') +
ylim(0,1) +
scale_fill_manual(name = 'Difference', values = c(Moderate = 'Light Grey', Extreme = 'Black')) +
theme(legend.position = 'top')
condMeans <- d %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
group_by(condition) %>%
summarize(selRefDeck = mean(selRefDeck))
## building in the option to break subjects down by hypothesis
## a little underwhelming
subjectCodes <- d %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
spread(condition, selRefDeck) %>%
mutate(rational = ifelse(EE < EM & EM < HM & HM < HE, 'yes', 'no')) %>%
mutate(EEDev = EM - EE, EMDev = 0.5 - EM, HMDev = HM - 0.5, HEDev = HE - HM) %>%
mutate(model = ifelse(EMDev > EEDev & HMDev > HEDev, 'Prospect', ifelse(EEDev > EMDev & EMDev > HMDev & HMDev > HEDev, 'Concave Down',
ifelse(EEDev < EMDev & EMDev < HMDev & HMDev < HEDev, 'Concave Up', 'Other')))) %>%
select(subject, rational, model)
d %>%
mutate(condition = factor(condition, levels = levels(condition)[c(2,1,4,3)])) %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
inner_join(subjectCodes) %>%
ggplot(aes(x = condition, y = selRefDeck)) +
geom_violin(fill = NA) +
geom_boxplot(fill = NA) +
geom_point(alpha = .3) +
geom_line(aes(group = subject), alpha = .6, linetype = 'dashed') +
geom_point(data = condMeans, aes(x = condition, y = selRefDeck), size = 4, fill = 'red', shape = 23) +
geom_label(data = condMeans, aes(x = condition, y = selRefDeck, label = round(selRefDeck,2), hjust = 1.5, vjust = 1.5)) +
scale_x_discrete(labels = c(`EM` = 'Easy Moderate', `EE` = 'Extreme Easy', `HM` = 'Hard Moderate', `HE` = 'Hard Extreme')) +
labs(
title = 'Selection of reference deck by condition and subject',
caption = 'Red diamonds are condition means. Horizontal black lines are medians.',
x = 'Critical Deck Intensity Level',
y = 'Proportion Selection of Reference Deck'
) +
theme_bw()
condTable <- data.frame(condition = c('EE','EM','HE','HM'), difficulty = c(rep('Easier than Reference', 2), rep('Harder than Reference', 2)), difference = rep(c('Extreme', 'Moderate'), 2))
subjectCellMeans <- d %>%
mutate(selRefDeck = ifelse(chosenDeckId == 'reference', 1, 0)) %>%
group_by(subject, condition) %>%
summarize(selRefDeck = mean(selRefDeck)) %>%
spread(condition, selRefDeck) %>%
mutate(EEDEV = EM - EE, EMDEV = 0.5 - EM, HMDEV = HM - 0.5, HEDEV = HE - HM) %>%
select(-(EE:HM)) %>%
gather(condition, selRefDeck, contains('DEV')) %>%
mutate(condition = str_replace(condition, 'DEV', '')) %>%
inner_join(condTable) %>%
select(-condition)
subjectCellMeans
subjectCellMeans %>%
mutate(difference = factor(difference, levels = levels(factor(difference))[c(2,1)])) %>%
group_by(difficulty, difference) %>%
summarize(mSelRefDeck = mean(selRefDeck), se = sd(selRefDeck) / sqrt(n())) %>%
print() %>%
ggplot(aes(x = difficulty, y = mSelRefDeck, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = mSelRefDeck - se, ymax = mSelRefDeck + se), position = position_dodge(width = 0.9), width = 0.5) +
theme_bw() +
xlab('Difficulty') +
ylab('Change in Selection of Reference Deck') +
scale_fill_manual(name = 'Difference', values = c(Moderate = 'Light Grey', Extreme = 'Black')) +
theme(legend.position = 'top')
d <- read.csv('quickCompare.csv')
d <- d[,2:4]
HE <- d[4, 3]
HM <- d[3, 3]
d[4, 3] <- HM
d[3, 3] <- HE
d
d[c(2,1,4,3),]
d <- read.csv('quickCompare.csv')
d <- d[,2:4]
HE <- d[4, 3]
HM <- d[3, 3]
d[4, 3] <- HM
d[3, 3] <- HE
d <- d[c(2,1,4,3),]
rownames(d) <- 1:4
d <- read.csv('quickCompare.csv')
d <- d[,2:4]
HE <- d[4, 3]
HM <- d[3, 3]
d[4, 3] <- HM
d[3, 3] <- HE
d <- d[c(2,1,4,3),]
rownames(d) <- 1:4
d
q()
