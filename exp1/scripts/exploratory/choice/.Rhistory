group_by(condition, switch_cost_d) %>%
summarize(srd_m = mean(srd), srd_s = sd(srd) / sqrt(N)) %>%
ggplot(aes(x = condition, y = srd_m, group = switch_cost_d)) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_line(data = subjects, aes(x = condition, y = srd, linetype = switch_cost_d, group = subject), alpha = .3) +
geom_point(data = subjects, aes(x = condition, y = srd, color = switch_cost_d), size = 2, alpha = .3) +
geom_line(size = 3, aes(color = switch_cost_d)) +
geom_ribbon(aes(ymin = srd_m - srd_s, ymax = srd_m + srd_s), alpha = .2) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Proportion Selection of Reference Deck',
caption = 'Switch cost is a median split'
) +
scale_fill_discrete(name = 'Switch Cost') +
scale_linetype_discrete(name = 'Switch Cost') +
scale_color_manual(name = 'Switch Cost') +
theme_bw() +
theme(legend.position = 'bottom',
panel.grid = element_blank())
subjects %>%
group_by(condition, switch_cost_d) %>%
summarize(srd_m = mean(srd), srd_s = sd(srd) / sqrt(N)) %>%
ggplot(aes(x = condition, y = srd_m, group = switch_cost_d)) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_line(data = subjects, aes(x = condition, y = srd, color = switch_cost_d, group = subject), alpha = .3) +
geom_point(data = subjects, aes(x = condition, y = srd, color = switch_cost_d), size = 2, alpha = .3) +
geom_line(size = 3, aes(color = switch_cost_d)) +
geom_ribbon(aes(ymin = srd_m - srd_s, ymax = srd_m + srd_s), alpha = .2) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Proportion Selection of Reference Deck',
caption = 'Switch cost is a median split'
) +
scale_fill_discrete(name = 'Switch Cost') +
scale_color_discrete(name = 'Switch Cost') +
theme_bw() +
theme(legend.position = 'bottom',
panel.grid = element_blank())
subjects %>%
group_by(condition, switch_cost_d) %>%
summarize(srd_m = mean(srd), srd_s = sd(srd) / sqrt(N)) %>%
ggplot(aes(x = condition, y = srd_m, group = switch_cost_d)) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_line(data = subjects, aes(x = condition, y = srd, color = switch_cost_d, group = subject), alpha = .3) +
geom_point(data = subjects, aes(x = condition, y = srd, color = switch_cost_d), size = 2, alpha = .3) +
geom_line(size = 3, aes(color = switch_cost_d)) +
geom_ribbon(aes(ymin = srd_m - srd_s, ymax = srd_m + srd_s, color = switch_cost_d), alpha = .2) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Proportion Selection of Reference Deck',
caption = 'Switch cost is a median split'
) +
scale_fill_discrete(name = 'Switch Cost') +
scale_color_discrete(name = 'Switch Cost') +
theme_bw() +
theme(legend.position = 'bottom',
panel.grid = element_blank())
subjects %>%
group_by(condition, switch_cost_d) %>%
summarize(srd_m = mean(srd), srd_s = sd(srd) / sqrt(N)) %>%
ggplot(aes(x = condition, y = srd_m, group = switch_cost_d)) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_line(data = subjects, aes(x = condition, y = srd, color = switch_cost_d, group = subject), alpha = .3) +
geom_point(data = subjects, aes(x = condition, y = srd, color = switch_cost_d), size = 2, alpha = .3) +
geom_line(size = 3, aes(color = switch_cost_d)) +
geom_ribbon(aes(ymin = srd_m - srd_s, ymax = srd_m + srd_s, fill = switch_cost_d), alpha = .2) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Proportion Selection of Reference Deck',
caption = 'Switch cost is a median split'
) +
scale_fill_discrete(name = 'Switch Cost') +
scale_color_discrete(name = 'Switch Cost') +
theme_bw() +
theme(legend.position = 'bottom',
panel.grid = element_blank())
newdata %>%
ggplot(aes(x = condition, y = proba, group = switch_cost_d)) +
geom_hline(yintercept = 0.5, linetype = 'dotted') +
geom_line(data = cond_means, aes(x = as.numeric(as.character(condition)), y = srd_m, color = switch_cost_d), linetype = 'dashed') +
geom_point(data = cond_means, aes(x = as.numeric(as.character(condition)), y = srd_m, color = switch_cost_d), size = 2) +
geom_errorbar(data = cond_means, aes(x = as.numeric(as.character(condition)), ymin = srd_m - se, ymax = srd_m + se, y = srd_m, color = switch_cost_d), width = .2) +
geom_line(data = newdata, aes(color = switch_cost_d), size = 2) +
ylim(0,1) +
labs(
y = 'Probability of Selecting Reference Deck',
x = 'Critical Deck Probability of Switching',
caption = 'Dashed lines represent observed data; solid lines represent model estimates.'
) +
scale_color_discrete(name = 'Switch Cost') +
theme_bw() +
theme(panel.grid = element_blank(),
axis.ticks = element_blank())
cond_means <- subjects %>%
group_by(condition, switch_cost_d) %>%
summarize(srd_m = mean(srd), se = sd(srd) / sqrt(N))
cond_means$switch_cost_d <- ifelse(cond_means$switch_cost_d == 'low', 'Low', 'High')
cond_means %>%
ggplot(aes(x = condition, y = srd_m, group = switch_cost_d)) +
geom_hline(yintercept = 0.5, linetype = 'dotted') +
geom_line(aes(x = condition, y = srd_m, linetype = switch_cost_d)) +
geom_point(aes(x = condition, y = srd_m), size = 2) +
geom_errorbar(aes(x = condition, ymin = srd_m - se, ymax = srd_m + se, y = srd_m), width = .2) +
ylim(0,1) +
labs(
y = 'Probability of Selecting Reference Deck',
x = 'Critical Deck Probability of Switching'
) +
scale_color_manual(name = 'Switch Cost', values = c(Low = 'Light Grey', High = 'Black')) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.ticks = element_blank())
cond_means %>%
ggplot(aes(x = condition, y = srd_m, group = switch_cost_d)) +
geom_hline(yintercept = 0.5, linetype = 'dotted') +
geom_line(aes(x = condition, y = srd_m, linetype = switch_cost_d)) +
geom_point(aes(x = condition, y = srd_m), size = 2) +
geom_errorbar(aes(x = condition, ymin = srd_m - se, ymax = srd_m + se, y = srd_m), width = .2) +
ylim(0,1) +
labs(
y = 'Probability of Selecting Reference Deck',
x = 'Critical Deck Probability of Switching'
) +
scale_linetype_discrete(name = 'Switch Cost') +
theme_bw() +
theme(panel.grid = element_blank(),
axis.ticks = element_blank())
q()
library(tidyverse)
library(ez)
library(data.table)
d <- read.csv('../../../data/dstClean.csv')
N <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
head(d)
d$difference <- factor(d$difference, levels = levels(d$difference)[c(2,1)])
cued <- read.csv('../../../data/pracCued.csv')
cued <- cued[cued$subject %in% d$subject,]
cued <- cued[cued$rt < 10000,]
cued$errortrim <- ifelse(cued$error == 1 | shift(cued$error) == 1, 1, 0)
cued <- cued[cued$transition != 'startBlock' & cued$errortrim == 0,]
cued <- cued %>%
group_by(subject) %>%
summarize(m_rt = mean(rt), s_rt = sd(rt)) %>%
inner_join(cued, by = 'subject') %>%
filter(rt <= m_rt + 2 * s_rt & rt >= m_rt - 2 * s_rt) %>%
select(-m_rt, s_rt)
d<- cued %>%
group_by(subject, transition) %>%
summarize(rt = mean(rt)) %>%
select(subject, transition, rt) %>%
spread(transition, rt) %>%
mutate(switch_cost = switch - `repeat`) %>%
select(-switch, -`repeat`) %>%
inner_join(d, by = 'subject')
d$condition <- factor(ifelse(d$rightDeckId == 'reference', d$leftDeckSwitch, d$rightDeckSwitch))
subjects <- d %>%
mutate(selRefDeck = ifelse(chosenDeckId == 'reference', 1, 0)) %>%
group_by(subject, condition) %>%
summarize(srd = mean(selRefDeck), switch_cost = max(switch_cost))
subjects$switch_cost_d <-ifelse(subjects$switch_cost > median(subjects$switch_cost), 'high', 'low')
#subjects$condition <- factor(subjects$condition, levels = levels(subjects$condition)[c(1,2,4,3)])
subjects %>%
group_by(condition, switch_cost_d) %>%
summarize(srd_m = mean(srd), srd_s = sd(srd) / sqrt(N)) %>%
ggplot(aes(x = condition, y = srd_m, group = switch_cost_d)) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_line(data = subjects, aes(x = condition, y = srd, color = switch_cost_d, group = subject), alpha = .3) +
geom_point(data = subjects, aes(x = condition, y = srd, color = switch_cost_d), size = 2, alpha = .3) +
geom_line(size = 3, aes(color = switch_cost_d)) +
geom_ribbon(aes(ymin = srd_m - srd_s, ymax = srd_m + srd_s, fill = switch_cost_d), alpha = .2) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Proportion Selection of Reference Deck',
caption = 'Switch cost is a median split'
) +
scale_fill_discrete(name = 'Switch Cost') +
scale_color_discrete(name = 'Switch Cost') +
theme_bw() +
theme(legend.position = 'bottom',
panel.grid = element_blank())
d$condition <- as.numeric(as.character(d$condition))
d$srd <- ifelse(d$chosenDeckId == 'reference', 1, 0)
d$condition_c <- d$condition - .4
d$switch_cost_c <- scale(d$switch_cost, center = TRUE)
m1 <- glm(srd ~ condition_c * switch_cost_c, data = d, family = binomial)
summary(m1)
exp(m1$coefficients)
exp(confint(m1))
newdata = expand.grid(switch_cost = c(mean(d$switch_cost) - sd(d$switch_cost), mean(d$switch_cost) + sd(d$switch_cost)), condition = seq(0,1,.01))
newdata$switch_cost_d <- ifelse(newdata$switch_cost < 500, 'Low', 'High')
newdata$switch_cost_c <- scale(newdata$switch_cost, center = TRUE)
newdata$condition_c <- newdata$condition - .5
newdata$proba <- predict(m1, newdata = newdata, type = 'link')
newdata$proba <- exp(newdata$proba) / (1 + exp(newdata$proba))
cond_means <- subjects %>%
group_by(condition, switch_cost_d) %>%
summarize(srd_m = mean(srd), se = sd(srd) / sqrt(N))
cond_means$switch_cost_d <- ifelse(cond_means$switch_cost_d == 'low', 'Low', 'High')
newdata %>%
ggplot(aes(x = condition, y = proba, group = switch_cost_d)) +
geom_hline(yintercept = 0.5, linetype = 'dotted') +
geom_line(data = cond_means, aes(x = as.numeric(as.character(condition)), y = srd_m, color = switch_cost_d), linetype = 'dashed') +
geom_point(data = cond_means, aes(x = as.numeric(as.character(condition)), y = srd_m, color = switch_cost_d), size = 2) +
geom_errorbar(data = cond_means, aes(x = as.numeric(as.character(condition)), ymin = srd_m - se, ymax = srd_m + se, y = srd_m, color = switch_cost_d), width = .2) +
geom_line(data = newdata, aes(color = switch_cost_d), size = 2) +
ylim(0,1) +
labs(
y = 'Probability of Selecting Reference Deck',
x = 'Critical Deck Probability of Switching',
caption = 'Dashed lines represent observed data; solid lines represent model estimates.'
) +
scale_color_discrete(name = 'Switch Cost') +
theme_bw() +
theme(panel.grid = element_blank(),
axis.ticks = element_blank())
head(d)
colnames(d)
summary(d$condition_c)
mean(d$condition)
summary(factor(d$condition))
d$condition <- as.numeric(as.character(d$condition))
d$srd <- ifelse(d$chosenDeckId == 'reference', 1, 0)
d$condition_c <- d$condition - mean(d$condition)
d$switch_cost_c <- scale(d$switch_cost, center = TRUE)
m1 <- glm(srd ~ condition_c * switch_cost_c, data = d, family = binomial)
summary(m1)
exp(m1$coefficients)
exp(confint(m1))
d$condition_h <- d$condition_c - .4
d$condition_l <- d$condition_l + .4
d$condition_h <- d$condition_c - .4
d$condition_l <- d$condition_c + .4
m_h <- glm(srd ~ condition_h * switch_cost_c, data = d, family = binomial(link = 'logit'))
print(summary(m_h))
print(exp(m_h$coefficients))
print(exp(confint(m_h)))
m_l <- glm(srd ~ condition_l * switch_cost_c, data = d, family = binomial(link = 'logit'))
print(summary(m_l))
print(exp(m_l$coefficients))
print(exp(confint(m_l)))
mean(d$condition)
q()
library(tidyverse)
library(ez)
library(data.table)
d <- read.csv('../../../data/dstClean.csv')
N <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
head(d)
d$difference <- factor(d$difference, levels = levels(d$difference)[c(2,1)])
cued <- read.csv('../../../data/pracCued.csv')
cued <- cued[cued$subject %in% d$subject,]
cued <- cued[cued$rt < 10000,]
cued$errortrim <- ifelse(cued$error == 1 | shift(cued$error) == 1, 1, 0)
cued <- cued[cued$transition != 'startBlock' & cued$errortrim == 0,]
cued <- cued %>%
group_by(subject) %>%
summarize(m_rt = mean(rt), s_rt = sd(rt)) %>%
inner_join(cued, by = 'subject') %>%
filter(rt <= m_rt + 2 * s_rt & rt >= m_rt - 2 * s_rt) %>%
select(-m_rt, s_rt)
d<- cued %>%
group_by(subject, transition) %>%
summarize(rt = mean(rt)) %>%
select(subject, transition, rt) %>%
spread(transition, rt) %>%
mutate(switch_cost = switch - `repeat`) %>%
select(-switch, -`repeat`) %>%
inner_join(d, by = 'subject')
d$condition <- factor(ifelse(d$rightDeckId == 'reference', d$leftDeckSwitch, d$rightDeckSwitch))
subjects <- d %>%
mutate(selRefDeck = ifelse(chosenDeckId == 'reference', 1, 0)) %>%
group_by(subject, condition) %>%
summarize(srd = mean(selRefDeck), switch_cost = max(switch_cost))
subjects$switch_cost_d <-ifelse(subjects$switch_cost > median(subjects$switch_cost), 'high', 'low')
#subjects$condition <- factor(subjects$condition, levels = levels(subjects$condition)[c(1,2,4,3)])
subjects %>%
group_by(condition, switch_cost_d) %>%
summarize(srd_m = mean(srd), srd_s = sd(srd) / sqrt(N)) %>%
ggplot(aes(x = condition, y = srd_m, group = switch_cost_d)) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_line(data = subjects, aes(x = condition, y = srd, color = switch_cost_d, group = subject), alpha = .3) +
geom_point(data = subjects, aes(x = condition, y = srd, color = switch_cost_d), size = 2, alpha = .3) +
geom_line(size = 3, aes(color = switch_cost_d)) +
geom_ribbon(aes(ymin = srd_m - srd_s, ymax = srd_m + srd_s, fill = switch_cost_d), alpha = .2) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Proportion Selection of Reference Deck',
caption = 'Switch cost is a median split'
) +
scale_fill_discrete(name = 'Switch Cost') +
scale_color_discrete(name = 'Switch Cost') +
theme_bw() +
theme(legend.position = 'bottom',
panel.grid = element_blank())
d$condition <- as.numeric(as.character(d$condition))
d$srd <- ifelse(d$chosenDeckId == 'reference', 1, 0)
d$condition_c <- d$condition - mean(d$condition)
d$switch_cost_c <- scale(d$switch_cost, center = TRUE)
m1 <- glm(srd ~ condition_c * switch_cost_c, data = d, family = binomial)
summary(m1)
m1_copy <- m1
m1_copy$coefficients <- m1_copy$coefficients * .2
exp(m1_copy$coefficients)
exp(confint(m1_copy))
d$condition_h <- d$condition_c - .4
d$condition_l <- d$condition_c + .4
m_h <- glm(srd ~ condition_h * switch_cost_c, data = d, family = binomial(link = 'logit'))
print(summary(m_h))
m_h$coefficients <- m_h$coefficients * .2
print(exp(m_h$coefficients))
print(exp(confint(m_h)))
m_l <- glm(srd ~ condition_l * switch_cost_c, data = d, family = binomial(link = 'logit'))
print(summary(m_l))
m_l$coefficients <- m_l$coefficients * .2
print(exp(m_l$coefficients))
print(exp(confint(m_l)))
q()
library(tidyverse)
library(ez)
library(data.table)
d <- read.csv('../../../data/dstClean.csv')
N <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
head(d)
d$difference <- factor(d$difference, levels = levels(d$difference)[c(2,1)])
cued <- read.csv('../../../data/pracCued.csv')
cued <- cued[cued$subject %in% d$subject,]
cued <- cued[cued$rt < 10000,]
cued$errortrim <- ifelse(cued$error == 1 | shift(cued$error) == 1, 1, 0)
cued <- cued[cued$transition != 'startBlock' & cued$errortrim == 0,]
cued <- cued %>%
group_by(subject) %>%
summarize(m_rt = mean(rt), s_rt = sd(rt)) %>%
inner_join(cued, by = 'subject') %>%
filter(rt <= m_rt + 2 * s_rt & rt >= m_rt - 2 * s_rt) %>%
select(-m_rt, s_rt)
d<- cued %>%
group_by(subject, transition) %>%
summarize(rt = mean(rt)) %>%
select(subject, transition, rt) %>%
spread(transition, rt) %>%
mutate(switch_cost = switch - `repeat`) %>%
select(-switch, -`repeat`) %>%
inner_join(d, by = 'subject')
d$condition <- factor(ifelse(d$rightDeckId == 'reference', d$leftDeckSwitch, d$rightDeckSwitch))
subjects <- d %>%
mutate(selRefDeck = ifelse(chosenDeckId == 'reference', 1, 0)) %>%
group_by(subject, condition) %>%
summarize(srd = mean(selRefDeck), switch_cost = max(switch_cost))
subjects$switch_cost_d <-ifelse(subjects$switch_cost > median(subjects$switch_cost), 'high', 'low')
#subjects$condition <- factor(subjects$condition, levels = levels(subjects$condition)[c(1,2,4,3)])
subjects %>%
group_by(condition, switch_cost_d) %>%
summarize(srd_m = mean(srd), srd_s = sd(srd) / sqrt(N)) %>%
ggplot(aes(x = condition, y = srd_m, group = switch_cost_d)) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_line(data = subjects, aes(x = condition, y = srd, color = switch_cost_d, group = subject), alpha = .3) +
geom_point(data = subjects, aes(x = condition, y = srd, color = switch_cost_d), size = 2, alpha = .3) +
geom_line(size = 3, aes(color = switch_cost_d)) +
geom_ribbon(aes(ymin = srd_m - srd_s, ymax = srd_m + srd_s, fill = switch_cost_d), alpha = .2) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Proportion Selection of Reference Deck',
caption = 'Switch cost is a median split'
) +
scale_fill_discrete(name = 'Switch Cost') +
scale_color_discrete(name = 'Switch Cost') +
theme_bw() +
theme(legend.position = 'bottom',
panel.grid = element_blank())
d$condition <- as.numeric(as.character(d$condition))
d$srd <- ifelse(d$chosenDeckId == 'reference', 1, 0)
d$condition_c <- d$condition - mean(d$condition)
d$switch_cost_c <- scale(d$switch_cost, center = TRUE)
cond_codes <- data.frame(condition = c(0.1, 0.3, 0.7, 0.9), condition_unit = c(1, 2, 4, 5))
d <- d %>%
inner_join(cond_codes, by = 'condition')
m1 <- glm(srd ~ condition_c * switch_cost_c, data = d, family = binomial)
d$condition_c <- d$condition_unit - 3
m_out <- glm(srd ~ condition_c * switch_cost_c, data = d, family = binomial)
summary(m1)
m1_copy <- m1
m1_copy$coefficients <- m1_copy$coefficients * .2
exp(m1_copy$coefficients)
exp(confint(m1_copy))
d$condition <- as.numeric(as.character(d$condition))
d$srd <- ifelse(d$chosenDeckId == 'reference', 1, 0)
d$condition_c <- d$condition - mean(d$condition)
d$switch_cost_c <- scale(d$switch_cost, center = TRUE)
cond_codes <- data.frame(condition = c(0.1, 0.3, 0.7, 0.9), condition_unit = c(1, 2, 4, 5))
d <- d %>%
inner_join(cond_codes, by = 'condition')
m1 <- glm(srd ~ condition_c * switch_cost_c, data = d, family = binomial)
d$condition_c <- d$condition_unit - 3
library(tidyverse)
library(ez)
library(data.table)
d <- read.csv('../../../data/dstClean.csv')
N <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
head(d)
d$difference <- factor(d$difference, levels = levels(d$difference)[c(2,1)])
cued <- read.csv('../../../data/pracCued.csv')
cued <- cued[cued$subject %in% d$subject,]
cued <- cued[cued$rt < 10000,]
cued$errortrim <- ifelse(cued$error == 1 | shift(cued$error) == 1, 1, 0)
cued <- cued[cued$transition != 'startBlock' & cued$errortrim == 0,]
cued <- cued %>%
group_by(subject) %>%
summarize(m_rt = mean(rt), s_rt = sd(rt)) %>%
inner_join(cued, by = 'subject') %>%
filter(rt <= m_rt + 2 * s_rt & rt >= m_rt - 2 * s_rt) %>%
select(-m_rt, s_rt)
d<- cued %>%
group_by(subject, transition) %>%
summarize(rt = mean(rt)) %>%
select(subject, transition, rt) %>%
spread(transition, rt) %>%
mutate(switch_cost = switch - `repeat`) %>%
select(-switch, -`repeat`) %>%
inner_join(d, by = 'subject')
d$condition <- factor(ifelse(d$rightDeckId == 'reference', d$leftDeckSwitch, d$rightDeckSwitch))
subjects <- d %>%
mutate(selRefDeck = ifelse(chosenDeckId == 'reference', 1, 0)) %>%
group_by(subject, condition) %>%
summarize(srd = mean(selRefDeck), switch_cost = max(switch_cost))
subjects$switch_cost_d <-ifelse(subjects$switch_cost > median(subjects$switch_cost), 'high', 'low')
#subjects$condition <- factor(subjects$condition, levels = levels(subjects$condition)[c(1,2,4,3)])
subjects %>%
group_by(condition, switch_cost_d) %>%
summarize(srd_m = mean(srd), srd_s = sd(srd) / sqrt(N)) %>%
ggplot(aes(x = condition, y = srd_m, group = switch_cost_d)) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_line(data = subjects, aes(x = condition, y = srd, color = switch_cost_d, group = subject), alpha = .3) +
geom_point(data = subjects, aes(x = condition, y = srd, color = switch_cost_d), size = 2, alpha = .3) +
geom_line(size = 3, aes(color = switch_cost_d)) +
geom_ribbon(aes(ymin = srd_m - srd_s, ymax = srd_m + srd_s, fill = switch_cost_d), alpha = .2) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Proportion Selection of Reference Deck',
caption = 'Switch cost is a median split'
) +
scale_fill_discrete(name = 'Switch Cost') +
scale_color_discrete(name = 'Switch Cost') +
theme_bw() +
theme(legend.position = 'bottom',
panel.grid = element_blank())
d$condition <- as.numeric(as.character(d$condition))
d$srd <- ifelse(d$chosenDeckId == 'reference', 1, 0)
d$condition_c <- d$condition - mean(d$condition)
d$switch_cost_c <- scale(d$switch_cost, center = TRUE)
cond_codes <- data.frame(condition = c(0.1, 0.3, 0.7, 0.9), condition_unit = c(1, 2, 4, 5))
d <- d %>%
inner_join(cond_codes, by = 'condition')
m1 <- glm(srd ~ condition_c * switch_cost_c, data = d, family = binomial)
d$condition_c <- d$condition_unit - 3
m_out <- glm(srd ~ condition_c * switch_cost_c, data = d, family = binomial)
summary(m1)
exp(m1$coefficients)
exp(confint(m1))
summary(m_out)
exp(m_out$coefficients)
exp(confint(m_out))
newdata = expand.grid(switch_cost = c(mean(d$switch_cost) - sd(d$switch_cost), mean(d$switch_cost) + sd(d$switch_cost)), condition = seq(0,1,.01))
newdata$switch_cost_d <- ifelse(newdata$switch_cost < 500, 'Low', 'High')
newdata$switch_cost_c <- scale(newdata$switch_cost, center = TRUE)
newdata$condition_c <- newdata$condition - .5
newdata$proba <- predict(m1, newdata = newdata, type = 'link')
newdata$proba <- exp(newdata$proba) / (1 + exp(newdata$proba))
cond_means <- subjects %>%
group_by(condition, switch_cost_d) %>%
summarize(srd_m = mean(srd), se = sd(srd) / sqrt(N))
cond_means$switch_cost_d <- ifelse(cond_means$switch_cost_d == 'low', 'Low', 'High')
newdata %>%
ggplot(aes(x = condition, y = proba, group = switch_cost_d)) +
geom_hline(yintercept = 0.5, linetype = 'dotted') +
geom_line(data = cond_means, aes(x = as.numeric(as.character(condition)), y = srd_m, color = switch_cost_d), linetype = 'dashed') +
geom_point(data = cond_means, aes(x = as.numeric(as.character(condition)), y = srd_m, color = switch_cost_d), size = 2) +
geom_errorbar(data = cond_means, aes(x = as.numeric(as.character(condition)), ymin = srd_m - se, ymax = srd_m + se, y = srd_m, color = switch_cost_d), width = .2) +
geom_line(data = newdata, aes(color = switch_cost_d), size = 2) +
ylim(0,1) +
labs(
y = 'Probability of Selecting Reference Deck',
x = 'Critical Deck Probability of Switching',
caption = 'Dashed lines represent observed data; solid lines represent model estimates.'
) +
scale_color_discrete(name = 'Switch Cost') +
theme_bw() +
theme(panel.grid = element_blank(),
axis.ticks = element_blank())
d$condition_h <- d$condition_c - 2
d$condition_l <- d$condition_c + 2
m_h <- glm(srd ~ condition_h * switch_cost_c, data = d, family = binomial(link = 'logit'))
print(summary(m_h))
print(exp(m_h$coefficients))
print(exp(confint(m_h)))
m_l <- glm(srd ~ condition_l * switch_cost_c, data = d, family = binomial(link = 'logit'))
print(summary(m_l))
print(exp(m_l$coefficients))
print(exp(confint(m_l)))
print(exp(confint(m_l)))
q()
