labs(
x = 'Chosen Deck Probability of Switching',
y = 'Error Rate'
) +
theme_bw()
d <- d[d$transition != 'startBlock',]
cm <- d %>%
group_by(subject, chosenDeckIdEI, transition) %>%
summarize(err = mean(error)) %>%
group_by(chosenDeckIdEI, transition) %>%
summarize(error = mean(err), se = sd(err) / sqrt(N))
d %>%
group_by(subject, chosenDeckIdEI, transition) %>%
summarize(error = mean(error)) %>%
ggplot(aes(x = chosenDeckIdEI, y = error, group = transition)) +
geom_jitter(aes(color = transition), height = 0, alpha = .3, width = 0.2) +
geom_line(data = cm, aes(x = chosenDeckIdEI, y = error, color = transition)) +
geom_point(data = cm, aes(x = chosenDeckIdEI, y = error, color = transition), size = 2) +
geom_errorbar(data = cm, aes(ymin = error - se, ymax = error + se), width = .5) +
ylim(0,.5)+
scale_color_manual(name = 'Transition', labels = c(`repeat` = 'Repeat', `switch` = 'Switch'), value = c(`repeat` = 'blue', `switch` = 'red')) +
labs(
x = 'Chosen Deck Probability of Switching',
y = 'Error Rate'
) +
theme_bw()
d <- d[d$transition != 'startBlock',]
cm <- d %>%
group_by(subject, chosenDeckIdEI, transition) %>%
summarize(err = mean(error)) %>%
group_by(chosenDeckIdEI, transition) %>%
summarize(error = mean(err), se = sd(err) / sqrt(N))
d %>%
group_by(subject, chosenDeckIdEI, transition) %>%
summarize(error = mean(error)) %>%
ggplot(aes(x = chosenDeckIdEI, y = error, group = transition)) +
geom_jitter(aes(color = transition), height = 0, alpha = .3, width = 0.2) +
geom_line(data = cm, aes(x = chosenDeckIdEI, y = error, color = transition)) +
geom_point(data = cm, aes(x = chosenDeckIdEI, y = error, color = transition), size = 2) +
geom_errorbar(data = cm, aes(ymin = error - se, ymax = error + se), width = .5) +
ylim(0,.5)+
scale_color_manual(name = 'Transition', labels = c(`repeat` = 'Repeat', `switch` = 'Switch'), values = c(`repeat` = 'blue', `switch` = 'red')) +
labs(
x = 'Chosen Deck Probability of Switching',
y = 'Error Rate'
) +
theme_bw()
d <- d[d$transition != 'startBlock',]
cm <- d %>%
group_by(subject, chosenDeckIdEI, transition) %>%
summarize(err = mean(error)) %>%
group_by(chosenDeckIdEI, transition) %>%
summarize(error = mean(err), se = sd(err) / sqrt(N))
d %>%
group_by(subject, chosenDeckIdEI, transition) %>%
summarize(error = mean(error)) %>%
ggplot(aes(x = chosenDeckIdEI, y = error, group = transition)) +
geom_jitter(aes(color = transition), height = 0, alpha = .3, width = 0.2) +
geom_line(data = cm, aes(x = chosenDeckIdEI, y = error, color = transition), size = 2) +
geom_point(data = cm, aes(x = chosenDeckIdEI, y = error, color = transition), size = 2) +
geom_errorbar(data = cm, aes(ymin = error - se, ymax = error + se), width = .5) +
ylim(0,.5)+
scale_color_manual(name = 'Transition', labels = c(`repeat` = 'Repeat', `switch` = 'Switch'), values = c(`repeat` = 'blue', `switch` = 'red')) +
labs(
x = 'Chosen Deck Probability of Switching',
y = 'Error Rate'
) +
theme_bw()
d <- d[d$transition != 'startBlock',]
cm <- d %>%
group_by(subject, chosenDeckIdEI, transition) %>%
summarize(err = mean(error)) %>%
group_by(chosenDeckIdEI, transition) %>%
summarize(error = mean(err), se = sd(err) / sqrt(N))
d %>%
group_by(subject, chosenDeckIdEI, transition) %>%
summarize(error = mean(error)) %>%
ggplot(aes(x = chosenDeckIdEI, y = error, group = transition)) +
geom_jitter(aes(color = transition), height = 0, alpha = .3, width = 0.2) +
geom_line(data = cm, aes(x = chosenDeckIdEI, y = error, color = transition), size = 2) +
geom_point(data = cm, aes(x = chosenDeckIdEI, y = error, color = transition), size = 2) +
geom_errorbar(data = cm, aes(ymin = error - se, ymax = error + se), width = .5) +
ylim(0,.5)+
scale_color_manual(name = 'Transition', labels = c(`repeat` = 'Repeat', `switch` = 'Switch'), values = c(`repeat` = 'blue', `switch` = 'red')) +
labs(
x = 'Chosen Deck Probability of Switching',
y = 'Error Rate'
) +
theme_bw() +
theme(legend.position = c(.1, .8))
d$CDI_c <- d$chosenDeckIdEI - 0.5
m1 <- lm(error ~ CDI_c, data = d)
d$CDI_c <- as.numeric(as.character(d$chosenDeckIdEI)) - 0.5
m1 <- lm(error ~ CDI_c, data = d)
summary(m1)
d$transitionE <- ifelse(d$transition == 'repeat', -0.5, 0.5)
m2 <- lm(error ~ CDI_C * transitionE, data = d)
d$CDI_c <- as.numeric(as.character(d$chosenDeckIdEI)) - 0.5
m1 <- lm(error ~ CDI_c, data = d)
summary(m1)
d$transitionE <- ifelse(d$transition == 'repeat', -0.5, 0.5)
m2 <- lm(error ~ CDI_x * transitionE, data = d)
d$CDI_c <- as.numeric(as.character(d$chosenDeckIdEI)) - 0.5
m1 <- lm(error ~ CDI_c, data = d)
summary(m1)
d$transitionE <- ifelse(d$transition == 'repeat', -0.5, 0.5)
m2 <- lm(error ~ CDI_c * transitionE, data = d)
summary(m2)
library(tidyverse)
d <- read.csv('../../../data/dstClean.csv')
N <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
head(d)
condCodes <- data.frame(chosenDeckId = unique(d$chosenDeckId), chosenDeckIdEI = c(.1,.5,.3,.9,.7))
d <- d %>%
inner_join(condCodes, by = 'chosenDeckId') %>%
mutate(chosenDeckIdEI = factor(chosenDeckIdEI))
cm <- d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(mrt = mean(cuedRt)) %>%
group_by(chosenDeckIdEI) %>%
summarize(rt = mean(mrt), se = sd(mrt) / sqrt(N))
d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(rt = mean(cuedRt)) %>%
print() %>%
ggplot(aes(x = chosenDeckIdEI, y = rt)) +
geom_jitter(height = 0, alpha = .3, width = 0.2) +
geom_line(data = cm, aes(x = chosenDeckIdEI, y = rt, group = 1)) +
geom_point(data = cm, aes(x = chosenDeckIdEI, y = rt), size = 2) +
geom_errorbar(data = cm, aes(ymin = rt - se, ymax = rt + se), width = .5) +
labs(
x = 'Chosen Deck Probability of Switching',
y = 'Response Time (ms)'
) +
theme_bw()
cm <- d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(mrt = mean(cuedRt)) %>%
group_by(chosenDeckIdEI) %>%
summarize(rt = mean(mrt), se = sd(mrt) / sqrt(N))
cm
d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(rt = mean(cuedRt)) %>%
ggplot(aes(x = chosenDeckIdEI, y = rt)) +
geom_jitter(height = 0, alpha = .3, width = 0.2) +
geom_line(data = cm, aes(x = chosenDeckIdEI, y = rt, group = 1)) +
geom_point(data = cm, aes(x = chosenDeckIdEI, y = rt), size = 2) +
geom_errorbar(data = cm, aes(ymin = rt - se, ymax = rt + se), width = .5) +
labs(
x = 'Chosen Deck Probability of Switching',
y = 'Response Time (ms)'
) +
theme_bw()
q()
library(tidyverse)
d <- read.csv('../../../data/dstClean.csv')
N <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
head(d)
condCodes <- data.frame(chosenDeckId = unique(d$chosenDeckId), chosenDeckIdEI = c(.1,.5,.3,.9,.7))
d <- d %>%
inner_join(condCodes, by = 'chosenDeckId') %>%
mutate(chosenDeckIdEI = factor(chosenDeckIdEI))
cm <- d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(mrt = mean(cuedRt)) %>%
group_by(chosenDeckIdEI) %>%
summarize(rt = mean(mrt), se = sd(mrt) / sqrt(N))
cm
d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(rt = mean(cuedRt)) %>%
ggplot(aes(x = chosenDeckIdEI, y = rt)) +
geom_jitter(height = 0, alpha = .3, width = 0.2) +
geom_line(data = cm, aes(x = chosenDeckIdEI, y = rt, group = 1)) +
geom_point(data = cm, aes(x = chosenDeckIdEI, y = rt), size = 2) +
geom_errorbar(data = cm, aes(ymin = rt - se, ymax = rt + se), width = .5) +
labs(
x = 'Chosen Deck Probability of Switching',
y = 'Response Time (ms)'
) +
theme_bw()
d$chosenDeckIdEI <- as.double(as.character(d$chosenDeckIdEI))
m1 <- lm(cuedRt ~ chosenDeckIdEI, data = d)
newdata <- data.frame(chosenDeckIdEI = seq(0.1,0.9, .001))
x <- predict(m1, newdata, interval = 'predict')
x
head(x)
#newdata$linear <- m1$coefficients[1] + m1$coefficients[2] * newdata$chosenDeckIdEI
newdata <- cbind(newdata, predict(m1, newdata, interval = 'predict'))
head(newdata)
m2 <- nls(cuedRt ~ a * I(chosenDeckIdEI^b), data = d, start = list(a = 1000, b = 1), trace=T)
predict(m2, newdata, interval = 'predict')
predict.nls(m2, newdata, interval = 'predict')
library(stats)
predict.nls(m2, newdata, interval = 'predict')
install.packages('predFit')
install.packages('investr')
library(investr)
#newdata$powerfun <- m2$m$getPars()['a'] * newdata$chosenDeckIdEI^m2$m$getPars()['b']
newdata <- cbind(newdata, predFit(m2, newdata = newdata, interval = 'prediction'))
head(newdata)
colnames(newdata) <- c('chosenDeckIdEI','lfit','llwr','lupr','pfit','plwr','pupr')
newdata <- newdata %>%
gather(model, proba, lfit, pfit)
head(newdata)
newdata <- data.frame(chosenDeckIdEI = seq(0.1,0.9, .001))
#newdata$linear <- m1$coefficients[1] + m1$coefficients[2] * newdata$chosenDeckIdEI
newdata <- cbind(newdata, predict(m1, newdata, interval = 'predict'))
sm <- d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(cuedRt = mean(cuedRt))
m2 <- nls(cuedRt ~ a * I(chosenDeckIdEI^b), data = d, start = list(a = 1000, b = 1), trace=T)
#newdata$powerfun <- m2$m$getPars()['a'] * newdata$chosenDeckIdEI^m2$m$getPars()['b']
newdata <- cbind(newdata, predFit(m2, newdata = newdata, interval = 'prediction'))
colnames(newdata) <- c('chosenDeckIdEI','lfit','llwr','lupr','pfit','plwr','pupr')
newdata <- newdata %>%
gather(model, proba, lfit:pupr)
head(newdata)
newdata <- data.frame(chosenDeckIdEI = seq(0.1,0.9, .001))
#newdata$linear <- m1$coefficients[1] + m1$coefficients[2] * newdata$chosenDeckIdEI
newdata <- cbind(newdata, predict(m1, newdata, interval = 'predict'))
sm <- d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(cuedRt = mean(cuedRt))
m2 <- nls(cuedRt ~ a * I(chosenDeckIdEI^b), data = d, start = list(a = 1000, b = 1), trace=T)
#newdata$powerfun <- m2$m$getPars()['a'] * newdata$chosenDeckIdEI^m2$m$getPars()['b']
newdata <- cbind(newdata, predFit(m2, newdata = newdata, interval = 'prediction'))
colnames(newdata) <- c('chosenDeckIdEI','lfit','llwr','lupr','pfit','plwr','pupr')
head(newdata)
t <- newdata %>%
gather(model, fit, lfit, pfit)
head(t)
t <- t %>%
gather(model, lwr, llwr, plwr)
head(t)
t <- t %>%
gather(model, upr, lupr, pupr)
head(t)
summary(factor(t$model))
t %>%
ggplot(aes(x = chosenDeckIdEI, y = fit, group = model)) +
geom_line(aes(color = model)) +
geom_ribbon(aes(fill = model), alpha = .2)
t %>%
ggplot(aes(x = chosenDeckIdEI, y = fit, group = model)) +
geom_line(aes(color = model)) +
geom_ribbon(aes(fill = model, ymin = lwr, ymax = upr), alpha = .2)
hist(t[t$model == 'lupr',]$chosenDeckIdEI)
t %>%
filter(model == 'upr') %>%
ggplot(aes(x = chosenDeckIdEI, y = fit)) +
geom_line()
t %>%
filter(model == 'lupr') %>%
ggplot(aes(x = chosenDeckIdEI, y = fit)) +
geom_line()
head(newdata)
newdata %>%
gather(model, stat, lfit:pupr) %>%
head()
newdata %>%
gather(model, stat, lfit:pupr) %>%
separate(model, 2) %>%
head()
newdata %>%
gather(model, stat, lfit:pupr) %>%
separate(model, into = 2) %>%
head()
newdata %>%
gather(model, stat, lfit:pupr) %>%
separate(model, sep = 2) %>%
head()
newdata %>%
gather(model, stat, lfit:pupr) %>%
separate(model, sep = 2, into = c('model', 'parameter')) %>%
head()
newdata %>%
gather(model, stat, lfit:pupr) %>%
separate(model, sep = 1, into = c('model', 'parameter')) %>%
head()
newdata %>%
gather(model, stat, lfit:pupr) %>%
separate(model, sep = 1, into = c('model', 'parameter')) %>%
spread(parameter, stat) %>%
head()
newdata <- newdata %>%
gather(model, stat, lfit:pupr) %>%
separate(model, into = c('model', 'parameter'), sep = 1) %>%
spread(model, parameter)
head(newdata)
d$chosenDeckIdEI <- as.double(as.character(d$chosenDeckIdEI))
m1 <- lm(cuedRt ~ chosenDeckIdEI, data = d)
newdata <- data.frame(chosenDeckIdEI = seq(0.1,0.9, .001))
#newdata$linear <- m1$coefficients[1] + m1$coefficients[2] * newdata$chosenDeckIdEI
newdata <- cbind(newdata, predict(m1, newdata, interval = 'predict'))
sm <- d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(cuedRt = mean(cuedRt))
m2 <- nls(cuedRt ~ a * I(chosenDeckIdEI^b), data = d, start = list(a = 1000, b = 1), trace=T)
#newdata$powerfun <- m2$m$getPars()['a'] * newdata$chosenDeckIdEI^m2$m$getPars()['b']
newdata <- cbind(newdata, predFit(m2, newdata = newdata, interval = 'prediction'))
colnames(newdata) <- c('chosenDeckIdEI','lfit','llwr','lupr','pfit','plwr','pupr')
head(newdata)
newdata %>%
gather(model, stat, lfit:pupr) %>%
separate(model, into = c('model', 'parameter'), sep = 1)
newdata <- newdata %>%
gather(model, stat, lfit:pupr) %>%
separate(model, into = c('model', 'parameter'), sep = 1) %>%
spread(parameter, stat)
head(newdata)
newdata %>%
ggplot(aes(x = chosenDeckIdEI, y = fit, group = model)) +
geom_line(aes(color = model)) +
geom_ribbon(aes(fill = model, ymin = lwr, ymax = upr))
newdata %>%
ggplot(aes(x = chosenDeckIdEI, y = fit, group = model)) +
geom_line(aes(color = model)) +
geom_ribbon(aes(fill = model, ymin = lwr, ymax = upr), alpha = .2)
d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(rt = mean(cuedRt)) %>%
ggplot(aes(x = chosenDeckIdEI, y = rt)) +
geom_jitter(height = 0, alpha = .3, width = 0.01) +
geom_line(data = cm, aes(x = chosenDeckIdEI, y = rt, group = 1)) +
geom_point(data = cm, aes(x = chosenDeckIdEI, y = rt), size = 2) +
geom_errorbar(data = cm, aes(ymin = rt - se, ymax = rt + se), width = .05) +
geom_line(data = newdata, aes(x = chosenDeckIdEI, y = fit, color = model, group = model), size = 1.5, linetype = 'dashed') +
geom_ribbon(data = newdata, aes(x = chosenDeckIdEI, y = fit, fill = model, ymin = lwr, ymax = upr), alpha = .2) +
scale_x_continuous(breaks = seq(.1,.9,.2), labels = seq(.1,.9,.2)) +
scale_color_discrete(name = 'Model', labels = c(linear = 'Linear', powerfun = 'Power')) +
labs(
x = 'Chosen Deck Probability of Switching',
y = 'Response Time (ms)'
) +
theme_bw() +
theme(legend.position = c(.1,.8))
cm$chosenDeckIdEI <- as.numeric(as.character(cm$chosenDeckIdEI))
d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(rt = mean(cuedRt)) %>%
ggplot(aes(x = chosenDeckIdEI, y = rt)) +
geom_jitter(height = 0, alpha = .3, width = 0.01) +
geom_line(data = cm, aes(x = chosenDeckIdEI, y = rt, group = 1)) +
geom_point(data = cm, aes(x = chosenDeckIdEI, y = rt), size = 2) +
geom_errorbar(data = cm, aes(ymin = rt - se, ymax = rt + se), width = .05) +
geom_line(data = newdata, aes(x = chosenDeckIdEI, y = fit, color = model, group = model), size = 1.5, linetype = 'dashed') +
geom_ribbon(data = newdata, aes(x = chosenDeckIdEI, y = fit, fill = model, ymin = lwr, ymax = upr), alpha = .2) +
scale_x_continuous(breaks = seq(.1,.9,.2), labels = seq(.1,.9,.2)) +
scale_color_discrete(name = 'Model', labels = c(linear = 'Linear', powerfun = 'Power')) +
labs(
x = 'Chosen Deck Probability of Switching',
y = 'Response Time (ms)'
) +
theme_bw() +
theme(legend.position = c(.1,.8))
d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(rt = mean(cuedRt)) %>%
ggplot(aes(x = chosenDeckIdEI, y = rt)) +
geom_ribbon(data = newdata, aes(x = chosenDeckIdEI, y = fit, fill = model, ymin = lwr, ymax = upr), alpha = .2) +
geom_jitter(height = 0, alpha = .3, width = 0.01) +
geom_line(data = cm, aes(x = chosenDeckIdEI, y = rt, group = 1)) +
geom_point(data = cm, aes(x = chosenDeckIdEI, y = rt), size = 2) +
geom_errorbar(data = cm, aes(ymin = rt - se, ymax = rt + se), width = .05) +
geom_line(data = newdata, aes(x = chosenDeckIdEI, y = fit, color = model, group = model), size = 1.5, linetype = 'dashed') +
scale_x_continuous(breaks = seq(.1,.9,.2), labels = seq(.1,.9,.2)) +
scale_color_discrete(name = 'Model', labels = c(linear = 'Linear', powerfun = 'Power')) +
labs(
x = 'Chosen Deck Probability of Switching',
y = 'Response Time (ms)'
) +
theme_bw() +
theme(legend.position = c(.1,.8))
d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(rt = mean(cuedRt)) %>%
ggplot(aes(x = chosenDeckIdEI, y = rt)) +
geom_ribbon(data = newdata, aes(x = chosenDeckIdEI, y = fit, fill = model, ymin = lwr, ymax = upr), alpha = .2) +
geom_jitter(height = 0, alpha = .3, width = 0.01) +
geom_line(data = cm, aes(x = chosenDeckIdEI, y = rt, group = 1)) +
geom_point(data = cm, aes(x = chosenDeckIdEI, y = rt), size = 2) +
geom_errorbar(data = cm, aes(ymin = rt - se, ymax = rt + se), width = .05) +
geom_line(data = newdata, aes(x = chosenDeckIdEI, y = fit, color = model, group = model), size = 1.5, linetype = 'dashed') +
scale_x_continuous(breaks = seq(.1,.9,.2), labels = seq(.1,.9,.2)) +
scale_color_discrete(name = 'Model', labels = c(l = 'Linear', p = 'Power')) +
labs(
x = 'Chosen Deck Probability of Switching',
y = 'Response Time (ms)'
) +
theme_bw() +
theme(legend.position = c(.1,.8))
d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(rt = mean(cuedRt)) %>%
ggplot(aes(x = chosenDeckIdEI, y = rt)) +
geom_ribbon(data = newdata, aes(x = chosenDeckIdEI, y = fit, fill = model, ymin = lwr, ymax = upr), alpha = .2, show.legend = FALSE) +
geom_jitter(height = 0, alpha = .3, width = 0.01) +
geom_line(data = cm, aes(x = chosenDeckIdEI, y = rt, group = 1)) +
geom_point(data = cm, aes(x = chosenDeckIdEI, y = rt), size = 2) +
geom_errorbar(data = cm, aes(ymin = rt - se, ymax = rt + se), width = .05) +
geom_line(data = newdata, aes(x = chosenDeckIdEI, y = fit, color = model, group = model), size = 1.5, linetype = 'dashed') +
scale_x_continuous(breaks = seq(.1,.9,.2), labels = seq(.1,.9,.2)) +
scale_color_discrete(name = 'Model', labels = c(l = 'Linear', p = 'Power')) +
labs(
x = 'Chosen Deck Probability of Switching',
y = 'Response Time (ms)'
) +
theme_bw() +
theme(legend.position = c(.1,.8))
d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(rt = mean(cuedRt)) %>%
ggplot(aes(x = chosenDeckIdEI, y = rt)) +
geom_ribbon(data = newdata, aes(x = chosenDeckIdEI, y = fit, fill = model, ymin = lwr, ymax = upr), alpha = .2, show.legend = FALSE) +
geom_jitter(height = 0, alpha = .3, width = 0.01) +
geom_line(data = cm, aes(x = chosenDeckIdEI, y = rt, group = 1)) +
geom_point(data = cm, aes(x = chosenDeckIdEI, y = rt), size = 2) +
geom_errorbar(data = cm, aes(ymin = rt - se, ymax = rt + se), width = .05) +
geom_line(data = newdata, aes(x = chosenDeckIdEI, y = fit, color = model, group = model), size = 1.5, linetype = 'dashed') +
scale_x_continuous(breaks = seq(.1,.9,.2), labels = seq(.1,.9,.2)) +
scale_color_discrete(name = 'Model', labels = c(l = 'Linear', p = 'Power')) +
labs(
x = 'Chosen Deck Probability of Switching',
y = 'Response Time (ms)'
) +
theme_bw() +
theme(legend.position = c(.1,.9))
d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(rt = mean(cuedRt)) %>%
ggplot(aes(x = chosenDeckIdEI, y = rt)) +
geom_ribbon(data = newdata, aes(x = chosenDeckIdEI, y = fit, fill = model, ymin = lwr, ymax = upr), alpha = .2, show.legend = FALSE) +
geom_jitter(height = 0, alpha = .3, width = 0.01) +
geom_line(data = cm, aes(x = chosenDeckIdEI, y = rt, group = 1)) +
geom_point(data = cm, aes(x = chosenDeckIdEI, y = rt), size = 2) +
geom_errorbar(data = cm, aes(ymin = rt - se, ymax = rt + se), width = .05) +
geom_line(data = newdata, aes(x = chosenDeckIdEI, y = fit, color = model, group = model), size = 1.5, linetype = 'dashed') +
scale_x_continuous(breaks = seq(.1,.9,.2), labels = seq(.1,.9,.2)) +
scale_color_discrete(name = 'Model', labels = c(l = 'Linear', p = 'Power')) +
labs(
x = 'Chosen Deck Probability of Switching',
y = 'Response Time (ms)'
) +
theme_bw() +
theme(legend.position = c(.1,.85))
d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(rt = mean(cuedRt)) %>%
ggplot(aes(x = chosenDeckIdEI, y = rt)) +
geom_ribbon(data = newdata, aes(x = chosenDeckIdEI, y = fit, fill = model, ymin = lwr, ymax = upr), alpha = .2, show.legend = FALSE) +
geom_jitter(height = 0, alpha = .3, width = 0.01) +
geom_line(data = cm, aes(x = chosenDeckIdEI, y = rt, group = 1)) +
geom_point(data = cm, aes(x = chosenDeckIdEI, y = rt), size = 2) +
geom_errorbar(data = cm, aes(ymin = rt - se, ymax = rt + se), width = .05) +
geom_line(data = newdata, aes(x = chosenDeckIdEI, y = fit, color = model, group = model), size = 2, linetype = 'dashed') +
scale_x_continuous(breaks = seq(.1,.9,.2), labels = seq(.1,.9,.2)) +
scale_color_discrete(name = 'Model', labels = c(l = 'Linear', p = 'Power')) +
labs(
x = 'Chosen Deck Probability of Switching',
y = 'Response Time (ms)'
) +
theme_bw() +
theme(legend.position = c(.1,.85))
d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(rt = mean(cuedRt)) %>%
ggplot(aes(x = chosenDeckIdEI, y = rt)) +
geom_ribbon(data = newdata, aes(x = chosenDeckIdEI, y = fit, fill = model, ymin = lwr, ymax = upr), alpha = .2, show.legend = FALSE) +
geom_jitter(height = 0, alpha = .3, width = 0.01) +
geom_line(data = cm, aes(x = chosenDeckIdEI, y = rt, group = 1)) +
geom_point(data = cm, aes(x = chosenDeckIdEI, y = rt), size = 2) +
geom_errorbar(data = cm, aes(ymin = rt - se, ymax = rt + se), width = .05) +
geom_line(data = newdata, aes(x = chosenDeckIdEI, y = fit, color = model, group = model), size = 2, linetype = 'dashed') +
scale_x_continuous(breaks = seq(.1,.9,.2), labels = seq(.1,.9,.2)) +
scale_color_discrete(name = 'Model', labels = c(l = 'Linear', p = 'Power')) +
labs(
x = 'Chosen Deck Probability of Switching',
y = 'Response Time (ms)',
caption = 'Color bands represent 95% prediction intervals around model predictions.'
) +
theme_bw() +
theme(legend.position = c(.1,.85))
confint(m1)
confint(m2)
d %>%
group_by(subject, chosenDeckIdEI) %>%
summarize(rt = mean(cuedRt)) %>%
ggplot(aes(x = chosenDeckIdEI, y = rt)) +
geom_ribbon(data = newdata, aes(x = chosenDeckIdEI, y = fit, fill = model, ymin = lwr, ymax = upr), alpha = .1, show.legend = FALSE) +
geom_jitter(height = 0, alpha = .3, width = 0.01) +
geom_line(data = cm, aes(x = chosenDeckIdEI, y = rt, group = 1)) +
geom_point(data = cm, aes(x = chosenDeckIdEI, y = rt), size = 2) +
geom_errorbar(data = cm, aes(ymin = rt - se, ymax = rt + se), width = .05) +
geom_line(data = newdata, aes(x = chosenDeckIdEI, y = fit, color = model, group = model), size = 2, linetype = 'dashed') +
scale_x_continuous(breaks = seq(.1,.9,.2), labels = seq(.1,.9,.2)) +
scale_color_discrete(name = 'Model', labels = c(l = 'Linear', p = 'Power')) +
labs(
x = 'Chosen Deck Probability of Switching',
y = 'Response Time (ms)',
caption = 'Color bands represent 95% prediction intervals around model predictions.'
) +
theme_bw() +
theme(legend.position = c(.1,.85))
q()
