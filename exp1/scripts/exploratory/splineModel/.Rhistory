chisq <- append(chisq, anova(m_1, m_1_noposquad)$Chisq[2])
p <- append(p, anova(m_1, m_1_noposquad)$`Pr(>Chisq)`[2])
chisq <- append(chisq, anova(m_1, m_1_nonegquad)$Chisq[2])
p <- append(p, anova(m_1, m_1_nonegquad)$`Pr(>Chisq)`[2])
waldp <- c(NA, car::Anova(m_1)$`Pr(>Chisq)`)
result <- cbind(result, data.frame(Wald = waldp, chisq = chisq, chisq_p = p))
colnames(result)[3:4] <- c('LwrCI', 'UprCI')
data.frame(result)
## get subject cell means
sm <- d %>%
group_by(subject, condition) %>%
summarize(srd = mean(srd))
## get condition means
cm <- d %>%
group_by(condition) %>%
summarize(obs = mean(srd), se = mean(srd) / sqrt(N))
newdata %>%
mutate(condition = condition_c + 0.5) %>%
ggplot(aes(x = condition, y = est)) +
geom_vline(xintercept = 0.5, linetype = 'dotted') +
geom_line(data = sm, aes(x = condition, y = srd), linetype = 'dashed', alpha = .2) +
geom_violin(data = d, aes(x = condition, y = srd, group = condition)) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .2) +
geom_line() +
geom_point(data = cm, aes(x = condition, y = obs), size = 2) +
geom_errorbar(data = cm, aes(x = condition, ymin = obs - se, ymax = obs + se, y = obs), width = .05) +
ylim(0,1) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Probability of Selecting Reference Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
newdata %>%
mutate(condition = condition_c + 0.5) %>%
ggplot(aes(x = condition, y = est)) +
geom_vline(xintercept = 0.5, linetype = 'dotted') +
geom_line(data = sm, aes(x = condition, y = srd, group = subject), linetype = 'dashed', alpha = .2) +
geom_violin(data = d, aes(x = condition, y = srd, group = condition)) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .2) +
geom_line() +
geom_point(data = cm, aes(x = condition, y = obs), size = 2) +
geom_errorbar(data = cm, aes(x = condition, ymin = obs - se, ymax = obs + se, y = obs), width = .05) +
ylim(0,1) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Probability of Selecting Reference Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
newdata %>%
mutate(condition = condition_c + 0.5) %>%
ggplot(aes(x = condition, y = est)) +
geom_vline(xintercept = 0.5, linetype = 'dotted') +
geom_line(data = sm, aes(x = condition, y = srd, group = subject), linetype = 'dashed', alpha = .1) +
geom_violin(data = d, aes(x = condition, y = srd, group = condition)) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .2) +
geom_line() +
geom_point(data = cm, aes(x = condition, y = obs), size = 2) +
geom_errorbar(data = cm, aes(x = condition, ymin = obs - se, ymax = obs + se, y = obs), width = .05) +
ylim(0,1) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Probability of Selecting Reference Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
newdata %>%
mutate(condition = condition_c + 0.5) %>%
ggplot(aes(x = condition, y = est)) +
geom_vline(xintercept = 0.5, linetype = 'dotted') +
#geom_line(data = sm, aes(x = condition, y = srd, group = subject), linetype = 'dashed', alpha = .1) +
geom_violin(data = d, aes(x = condition, y = srd, group = condition)) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .2) +
geom_line() +
geom_point(data = cm, aes(x = condition, y = obs), size = 2) +
geom_errorbar(data = cm, aes(x = condition, ymin = obs - se, ymax = obs + se, y = obs), width = .05) +
ylim(0,1) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Probability of Selecting Reference Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
newdata %>%
mutate(condition = condition_c + 0.5) %>%
ggplot(aes(x = condition, y = est)) +
geom_vline(xintercept = 0.5, linetype = 'dotted') +
geom_line(data = sm, aes(x = condition, y = srd, group = subject), linetype = 'dashed', alpha = .2) +
#geom_violin(data = d, aes(x = condition, y = srd, group = condition)) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .2) +
geom_line() +
geom_point(data = cm, aes(x = condition, y = obs), size = 2) +
geom_errorbar(data = cm, aes(x = condition, ymin = obs - se, ymax = obs + se, y = obs), width = .05) +
ylim(0,1) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Probability of Selecting Reference Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
load('lrt_models.Rdata')
## convert estimates to odds ratios
vc <- as.data.frame(VarCorr(m_1))
vc <- vc[is.na(vc$var2),]$sdcor
result <- exp(cbind(est = fixef(m_1), confint(m_1, parm = 'beta_', method = 'Wald')))
result <- cbind(data.frame(estLogOdds = fixef(m_1), sdLogOdds = vc), result)
chisq <- anova(m_1, m_1_noint)$Chisq[2]
p <- anova(m_1, m_1_noint)$`Pr(>Chisq)`[2]
chisq <- append(chisq, anova(m_1, m_1_nolinear)$Chisq[2])
p <- append(p, anova(m_1, m_1_nolinear)$`Pr(>Chisq)`[2])
chisq <- append(chisq, anova(m_1, m_1_noposquad)$Chisq[2])
p <- append(p, anova(m_1, m_1_noposquad)$`Pr(>Chisq)`[2])
chisq <- append(chisq, anova(m_1, m_1_nonegquad)$Chisq[2])
p <- append(p, anova(m_1, m_1_nonegquad)$`Pr(>Chisq)`[2])
waldp <- c(NA, car::Anova(m_1)$`Pr(>Chisq)`)
result <- cbind(result, data.frame(Wald = waldp, chisq = chisq, chisq_p = p))
colnames(result)[4:5] <- c('LwrCI', 'UprCI')
data.frame(result)
newdata %>%
mutate(condition = condition_c + 0.5) %>%
ggplot(aes(x = condition, y = est)) +
geom_vline(xintercept = 0.5, linetype = 'dotted') +
geom_line(data = sm, aes(x = condition, y = srd, group = subject), linetype = 'dashed', alpha = .2) +
geom_point(data = sm, aes(x = condition, y = srd, group = subject), linetype = 'dashed', alpha = .2) +
#geom_violin(data = d, aes(x = condition, y = srd, group = condition)) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .2) +
geom_line() +
geom_point(data = cm, aes(x = condition, y = obs), size = 2) +
geom_errorbar(data = cm, aes(x = condition, ymin = obs - se, ymax = obs + se, y = obs), width = .05) +
ylim(0,1) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Probability of Selecting Reference Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
newdata %>%
mutate(condition = condition_c + 0.5) %>%
ggplot(aes(x = condition, y = est)) +
geom_vline(xintercept = 0.5, linetype = 'dotted') +
geom_line(data = sm, aes(x = condition, y = srd, group = subject), linetype = 'dashed', alpha = .2) +
geom_point(data = sm, aes(x = condition, y = srd, group = subject), alpha = .2) +
#geom_violin(data = d, aes(x = condition, y = srd, group = condition)) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .2) +
geom_line() +
geom_point(data = cm, aes(x = condition, y = obs), size = 2) +
geom_errorbar(data = cm, aes(x = condition, ymin = obs - se, ymax = obs + se, y = obs), width = .05) +
ylim(0,1) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Probability of Selecting Reference Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
newdata %>%
mutate(condition = condition_c + 0.5) %>%
ggplot(aes(x = condition, y = est)) +
geom_vline(xintercept = 0.5, linetype = 'dotted') +
geom_line(data = sm, aes(x = condition, y = srd, group = subject), linetype = 'dashed', alpha = .2) +
geom_point(data = sm, aes(x = condition, y = srd, group = subject), alpha = .2) +
#geom_violin(data = d, aes(x = condition, y = srd, group = condition)) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .2) +
geom_line() +
geom_point(data = cm, aes(x = condition, y = obs), size = 2, color = 'blue') +
geom_errorbar(data = cm, aes(x = condition, ymin = obs - se, ymax = obs + se, y = obs), width = .05) +
ylim(0,1) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Probability of Selecting Reference Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
newdata %>%
mutate(condition = condition_c + 0.5) %>%
ggplot(aes(x = condition, y = est)) +
geom_vline(xintercept = 0.5, linetype = 'dotted') +
geom_line(data = sm, aes(x = condition, y = srd, group = subject), linetype = 'dashed', alpha = .2) +
geom_point(data = sm, aes(x = condition, y = srd, group = subject), alpha = .2) +
#geom_violin(data = d, aes(x = condition, y = srd, group = condition)) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .2) +
geom_line() +
geom_point(data = cm, aes(x = condition, y = obs), size = 2, color = 'blue', size = 2) +
geom_errorbar(data = cm, aes(x = condition, ymin = obs - se, ymax = obs + se, y = obs), width = .05) +
ylim(0,1) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Probability of Selecting Reference Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
newdata %>%
mutate(condition = condition_c + 0.5) %>%
ggplot(aes(x = condition, y = est)) +
geom_vline(xintercept = 0.5, linetype = 'dotted') +
geom_line(data = sm, aes(x = condition, y = srd, group = subject), linetype = 'dashed', alpha = .2) +
geom_point(data = sm, aes(x = condition, y = srd, group = subject), alpha = .2) +
#geom_violin(data = d, aes(x = condition, y = srd, group = condition)) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .2) +
geom_line() +
geom_point(data = cm, aes(x = condition, y = obs), size = 4, color = 'blue') +
geom_errorbar(data = cm, aes(x = condition, ymin = obs - se, ymax = obs + se, y = obs), width = .05) +
ylim(0,1) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Probability of Selecting Reference Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
newdata %>%
mutate(condition = condition_c + 0.5) %>%
ggplot(aes(x = condition, y = est)) +
geom_vline(xintercept = 0.5, linetype = 'dotted') +
geom_line(data = sm, aes(x = condition, y = srd, group = subject), linetype = 'dashed', alpha = .2) +
geom_point(data = sm, aes(x = condition, y = srd, group = subject), alpha = .2) +
#geom_violin(data = d, aes(x = condition, y = srd, group = condition)) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .2) +
geom_line() +
geom_errorbar(data = cm, aes(x = condition, ymin = obs - se, ymax = obs + se, y = obs), width = .05) +
geom_point(data = cm, aes(x = condition, y = obs), size = 4, color = 'blue') +
ylim(0,1) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Probability of Selecting Reference Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
nrow(d)
q()
1()
q()
library(tidyverse)
library(ez)
library(data.table)
library(lme4)
library(latex2exp)
library(gridExtra)
d <- read.csv('../../../data/dstClean.csv')
N <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
head(d)
test <- d %>%
group_by(subject, condition) %>%
summarize(srd = mean(srd)) %>%
mutate(condition2 = condition^2)
m1 <- lm(srd ~ condition + condition2, data = test)
newdata <- data.frame(condition = seq(.1,.9,.01))
newdata$condition2 <- newdata$condition^2
newdata <- cbind(newdata, predict(m1, interval = 'predict', newdata = newdata))
newdata %>%
ggplot(aes(x = condition, y = fit)) +
geom_line(data = test, aes(x = condition, y = srd, group = subject), linetype = 'dashed', alpha = .4) +
geom_line(size = 2, color = 'blue') +
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = .2) +
#ylim(-.5,1) +
labs(
x = 'Probability of Switching for Critical Deck',
y = 'Proportion Selection of Reference Deck'
) +
scale_x_continuous(breaks = c(.1,.3,.7,.9), labels = c(.1,.3,.7,.9)) +
theme_bw() +
theme(axis.ticks = element_blank())
summary(m1)
d$condition_c <- d$condition - 0.5
d$condition_c2 <- d$condition_c^2
d$dummy_pos <- ifelse(d$condition_c > 0, 1, 0)
d$dummy_neg <- ifelse(d$condition_c <= 0, 1, 0)
m2 <- lm(srd ~ condition_c + condition_c2:dummy_pos + condition_c2:dummy_neg, data = d)
summary(m2)
newdata <- data.frame(condition_c = seq(-.5,.5,.01))
newdata$condition_c2 <- newdata$condition_c^2
newdata$dummy_pos <- ifelse(newdata$condition_c > .5, 1, 0)
newdata$dummy_neg <- ifelse(newdata$condition_c <= .5, 1, 0)
newdata$condition <- seq(0,1,.01)
newdata$condition2 <- newdata$condition^2
newdata <- cbind(newdata, predict(m2, newdata = newdata, interval = 'predict'))
newdata %>%
ggplot(aes(x = condition, y = fit)) +
#geom_jitter(data = d, aes(x = condition, y = srd), height = 0, alpha = .2) +
geom_violin(data = d, aes(x = condition, y = srd, group = condition)) +
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = .2)+
geom_line() +
labs(
x = 'Probability Switching of Critical Deck',
y = 'Selection of Reference Deck'
) +
scale_x_continuous(breaks = c(.1,.3,.7,.9), labels = c(.1,.3,.7,.9)) +
theme_bw() +
theme(axis.ticks = element_blank())
m3 <- glm(srd ~ condition_c + dummy_pos:condition_c2 + dummy_neg:condition_c2, data = d, family = binomial(link = 'logit'))
newdata <- data.frame(condition_c = seq(-.5,.5,.01))
newdata$condition_c2 <- newdata$condition_c^2
newdata$dummy_pos <- ifelse(newdata$condition_c > .5, 1, 0)
newdata$dummy_neg <- ifelse(newdata$condition_c <= .5, 1, 0)
newdata$condition <- seq(0,1,.01)
newdata$condition2 <- newdata$condition^2
newdata <- cbind(newdata, data.frame(predict(m3, newdata = newdata, type = 'response', se.fit = TRUE)))
summary(m3)
newdata %>%
ggplot(aes(x = condition, y = fit)) +
#geom_jitter(data = d, aes(x = condition, y = srd), height = 0, alpha = .2) +
geom_violin(data = d, aes(x = condition, y = srd, group = condition)) +
geom_ribbon(aes(ymin = fit - se.fit, ymax = fit + se.fit), alpha = .2)+
geom_line() +
labs(
x = 'Probability Switching of Critical Deck',
y = 'Selection of Reference Deck'
) +
scale_x_continuous(breaks = c(.1,.3,.7,.9), labels = c(.1,.3,.7,.9)) +
theme_bw() +
theme(axis.ticks = element_blank())
d %>%
group_by(subject) %>%
summarize(srd = mean(srd)) %>%
ggplot(aes(x = reorder(subject, srd), y = srd)) +
geom_point(shape = 17) +
geom_hline(yintercept = .5, linetype = 'dashed') +
labs(
x = 'Subject',
y = 'Proportion Selection of Reference Deck'
) +
ylim(0,1) +
theme_bw() +
theme(axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.grid = element_blank()) +
coord_flip()
load('glmer_models.RData')
anova(m_1, m_2)
d$resid <- resid(m_1)
d %>%
ggplot(aes(x = factor(condition), y = resid)) +
geom_boxplot() +
labs(
x = 'Probability of Switching for Critical Deck',
y = 'Residual'
) +
scale_x_discrete(breaks = c(.1, .3, .7, .9), labels = c(.1, .3, .7, .9)) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank()) +
coord_flip()
rans <- data.frame(ranef(m_1, condVar = TRUE))
p1 <- rans %>%
filter(term == '(Intercept)') %>%
ggplot(aes(x = reorder(grp, condval), y = condval)) +
geom_errorbar(aes(ymin = condval - condsd, ymax = condval + condsd), width = 0) +
geom_point() +
labs(
x = 'Subject',
y = 'Intercept'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
axis.text.y = element_blank()) +
coord_flip()
p2 <- rans %>%
filter(term == 'condition_c') %>%
ggplot(aes(x = reorder(grp, condval), y = condval)) +
geom_errorbar(aes(ymin = condval - condsd, ymax = condval + condsd), width = 0) +
geom_point() +
labs(
x = '',
y = 'Linear'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
axis.text.y = element_blank()) +
coord_flip()
p3 <- rans %>%
filter(term == 'dummy_pos:condition_c2') %>%
ggplot(aes(x = reorder(grp, condval), y = condval)) +
geom_errorbar(aes(ymin = condval - condsd, ymax = condval + condsd), width = 0) +
geom_point() +
labs(
x = '',
y = 'Quadratic Above Ref'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
axis.text.y = element_blank()) +
coord_flip()
p4 <- rans %>%
filter(term == 'dummy_neg:condition_c2') %>%
ggplot(aes(x = reorder(grp, condval), y = condval)) +
geom_errorbar(aes(ymin = condval - condsd, ymax = condval + condsd), width = 0) +
geom_point() +
labs(
x = '',
y = 'Quadratic Below Ref'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
axis.text.y = element_blank()) +
coord_flip()
grid.arrange(p1,p2,p3,p4, nrow = 1)
## too expensive
#m1_CI_prof <- confint(m_1, maxpts = 8)
m1_CI_quad <- confint(m_1, method = 'Wald')
#m1_CI_boot <- confint(m_1, method = 'boot')
#
# CIs <- data.frame(m1_CI_prof)
# CIs$factor <- row.names(CIs)
# CIs$method <- 'prof'
t1 <- data.frame(m1_CI_quad)
t1$factor <- row.names(t1)
t1$method <- 'Wald'
CIs <- t1
# t2 <- data.frame(m1_CI_boot)
# t2$factor <- row.names(t2)
# t2$method <- 'boot'
#
# CIs <- rbind(CIs, t1, t2)
CIs <- CIs %>%
filter(!grepl('.sig', factor))
colnames(CIs)[1:2] <- c('lower', 'upper')
CIs$estimate <- fixef(m_1)
#save(CIs, file = 'CIs.RData')
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_hline(yintercept = 0, linetype = 'dotted') +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0) +
geom_point() +
coord_flip()+
scale_x_discrete(labels = c(`(Intercept)` = 'Intercept', `condition_c` = 'Linear', `condition_c2:dummy_neg` = 'Quadratic Below Ref', `dummy_pos:condition_c2` = 'Quadratic Above Ref')) +
labs(
y = 'Effect (log odds of choosing safe deck)',
x = ''
) +
theme_bw()
load('lrt_models.Rdata')
## convert estimates to odds ratios
vc <- as.data.frame(VarCorr(m_1))
vc <- vc[is.na(vc$var2),]$sdcor
result <- exp(cbind(est = fixef(m_1), confint(m_1, parm = 'beta_', method = 'Wald')))
result <- cbind(data.frame(estLogOdds = fixef(m_1), sdLogOdds = vc), result)
chisq <- anova(m_1, m_1_noint)$Chisq[2]
p <- anova(m_1, m_1_noint)$`Pr(>Chisq)`[2]
chisq <- append(chisq, anova(m_1, m_1_nolinear)$Chisq[2])
p <- append(p, anova(m_1, m_1_nolinear)$`Pr(>Chisq)`[2])
chisq <- append(chisq, anova(m_1, m_1_noposquad)$Chisq[2])
p <- append(p, anova(m_1, m_1_noposquad)$`Pr(>Chisq)`[2])
chisq <- append(chisq, anova(m_1, m_1_nonegquad)$Chisq[2])
p <- append(p, anova(m_1, m_1_nonegquad)$`Pr(>Chisq)`[2])
waldp <- c(NA, car::Anova(m_1)$`Pr(>Chisq)`)
result <- cbind(result, data.frame(Wald = waldp, chisq = chisq, chisq_p = p))
colnames(result)[4:5] <- c('LwrCI', 'UprCI')
data.frame(result)
easyPredCI <- function(model,newdata=NULL,alpha=0.05) {
## baseline prediction, on the linear predictor (logit) scale:
pred0 <- predict(model,re.form=NA,newdata=newdata)
## fixed-effects model matrix for new data
X <- model.matrix(formula(model,fixed.only=TRUE)[-2],newdata)
beta <- fixef(model) ## fixed-effects coefficients
V <- vcov(model)     ## variance-covariance matrix of beta
pred.se <- sqrt(diag(X %*% V %*% t(X))) ## std errors of predictions
## inverse-link function
linkinv <- family(model)$linkinv
## construct 95% Normal CIs on the link scale and
##  transform back to the response (probability) scale:
crit <- -qnorm(alpha/2)
linkinv(cbind(conf.low=pred0-crit*pred.se,
conf.high=pred0+crit*pred.se))
}
newdata <- data.frame(condition_c = seq(-.5, .5, .01))
newdata$condition_c2 <- newdata$condition_c^2
newdata$dummy_neg <- ifelse(newdata$condition_c <= 0, 1, 0)
newdata$dummy_pos <- ifelse(newdata$condition_c > 0, 1, 0)
pred <- predict(m_1, re.form = NA, newdata = newdata, type = 'response')
pred.CI <- easyPredCI(m_1, newdata)
newdata <- cbind(newdata, data.frame(est = pred), pred.CI)
## get subject cell means
sm <- d %>%
group_by(subject, condition) %>%
summarize(srd = mean(srd))
## get condition means
cm <- d %>%
group_by(condition) %>%
summarize(obs = mean(srd), se = mean(srd) / sqrt(N))
newdata %>%
mutate(condition = condition_c + 0.5) %>%
ggplot(aes(x = condition, y = est)) +
geom_vline(xintercept = 0.5, linetype = 'dotted') +
#geom_line(data = sm, aes(x = condition, y = srd, group = subject), linetype = 'dashed', alpha = .1) +
geom_violin(data = d, aes(x = condition, y = srd, group = condition)) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .2) +
geom_line() +
geom_point(data = cm, aes(x = condition, y = obs), size = 2) +
geom_errorbar(data = cm, aes(x = condition, ymin = obs - se, ymax = obs + se, y = obs), width = .05) +
ylim(0,1) +
labs(
x = 'Critical Deck Probability of Switching',
y = 'Probability of Selecting Reference Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
write.csv(newdata, 'plot_data_full.csv', row.names = FALSE)
q()
