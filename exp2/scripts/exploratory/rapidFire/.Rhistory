mutate(dstChoice = ifelse(selectedDeckLocation == 'right', 1, 0),
subject = as.factor(subject)) %>%
gather(phase, isRight, rfChoice, dstChoice) %>%
mutate(phase = as.factor(phase)) %>%
mutate(phase = recode(phase, 'dstChoice' = 'Demand Selection Phase', 'rfChoice' = 'Rapid Fire Phase')) %>%
group_by(subject, phase) %>%
summarize(right = mean(isRight), sd = sd(isRight)) %>%
ggplot(aes(x = subject, y = right)) +
geom_point(size = 3, shape = 18) +
#geom_errorbar(aes(ymin = right - sd, ymax = right + sd), width = 0.2) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
facet_wrap(~phase) +
theme_bw() +
coord_flip() +
ylim(0, 1) +
labs(
x = 'Subject',
y = 'Proportion Selection of Right Deck',
title = 'Choice location bias across choice phases'
) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid = element_blank(),
strip.background = element_rect(fill = 'white', color = 'black'))
head(d)
d %>%
group_by(subject, phase) %>%
summarize(rt = mean(rt)) %>%
ggplot(aes(x = rt)) %>%
geom_histogram(aes(fill = phase), color = 'black', alpha = 0.5)
d %>%
group_by(subject, phase) %>%
summarize(rt = mean(rt)) %>%
ggplot(aes(x = rt)) +
geom_histogram(aes(fill = phase), color = 'black', alpha = 0.5)
d %>%
group_by(subject, phase) %>%
summarize(rt = mean(rt)) %>%
ggplot(aes(x = rt)) +
geom_histogram(aes(fill = phase), color = 'black', alpha = 0.2)
d %>%
group_by(subject, phase) %>%
summarize(rt = mean(rt)) %>%
ggplot(aes(x = rt)) +
geom_density(aes(fill = phase), color = 'black', alpha = 0.2)
d %>%
group_by(subject, phase) %>%
summarize(rt = mean(rt)) %>%
ggplot(aes(x = rt, y = phase)) +
#geom_density(aes(fill = phase), color = 'black', alpha = 0.2)
geom_density_ridges(aes(fill = phase), alpha = 0.5, scale = 1.3, color = 'white')
d %>%
group_by(subject, phase) %>%
summarize(rt = mean(rt)) %>%
ggplot(aes(x = rt, y = phase)) +
#geom_density(aes(fill = phase), color = 'black', alpha = 0.2)
geom_density_ridges(aes(fill = phase), alpha = 0.5, scale = 0.8, color = 'white')
d %>%
group_by(subject, phase) %>%
summarize(rt = mean(rt)) %>%
ggplot(aes(x = rt, y = phase)) +
#geom_density(aes(fill = phase), color = 'black', alpha = 0.2)
geom_density_ridges(aes(fill = phase), alpha = 0.5, scale = 1.5, color = 'white')
d %>%
group_by(subject, phase) %>%
summarize(rt = mean(rt)) %>%
ggplot(aes(x = rt, y = phase)) +
#geom_density(aes(fill = phase), color = 'black', alpha = 0.2)
geom_density_ridges(aes(fill = phase), alpha = 0.5, scale = 2, color = 'white')
d %>%
group_by(subject, phase) %>%
summarize(rt = mean(rt)) %>%
ggplot(aes(x = rt, y = phase)) +
#geom_density(aes(fill = phase), color = 'black', alpha = 0.2)
geom_density_ridges(aes(fill = phase), alpha = 0.7, scale = 2, color = 'white')
d %>%
group_by(subject, phase) %>%
summarize(rt = mean(rt)) %>%
ggplot(aes(x = rt, y = phase)) +
#geom_density(aes(fill = phase), color = 'black', alpha = 0.2)
geom_density_ridges(aes(fill = phase), alpha = 0.7, scale = 2, color = 'white') +
scale_fill_manual(name = 'Phase', values = c(dstChoiceRt = 'red', rfChoiceRt = 'blue'), labels = c(dstChoiceRt = 'Demand Selection Phase', rfChoiceRt = 'Rapid Fire Phase'))
d %>%
group_by(subject, phase) %>%
summarize(rt = mean(rt)) %>%
ggplot(aes(x = rt, y = phase)) +
#geom_density(aes(fill = phase), color = 'black', alpha = 0.2)
geom_density_ridges(aes(fill = phase), alpha = 0.7, scale = 2, color = 'white') +
scale_fill_manual(name = 'Phase', values = c(dstChoiceRt = 'red', rfChoiceRt = 'blue'), labels = c(dstChoiceRt = 'Demand Selection Phase', rfChoiceRt = 'Rapid Fire Phase')) +
labs(x = 'Response Time (ms)') +
theme_bw() +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
d %>%
group_by(subject, phase) %>%
summarize(rt = mean(rt)) %>%
ggplot(aes(x = rt, y = phase)) +
#geom_density(aes(fill = phase), color = 'black', alpha = 0.2)
geom_density_ridges(aes(fill = phase), alpha = 0.7, scale = 2, color = 'white') +
scale_fill_manual(name = 'Phase', values = c(dstChoiceRt = 'red', rfChoiceRt = 'blue'), labels = c(dstChoiceRt = 'Demand Selection Phase', rfChoiceRt = 'Rapid Fire Phase')) +
labs(x = 'Response Time (ms)') +
theme_bw() +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = 'bottom')
d %>%
group_by(subject, phase) %>%
summarize(rt = mean(rt)) %>%
ggplot(aes(x = rt, y = phase)) +
#geom_density(aes(fill = phase), color = 'black', alpha = 0.2)
geom_density_ridges(aes(fill = phase), alpha = 0.7, scale = 2, color = 'white') +
scale_fill_manual(name = 'Phase', values = c(dstChoiceRt = 'red', rfChoiceRt = 'blue'), labels = c(dstChoiceRt = 'Demand Selection Phase', rfChoiceRt = 'Rapid Fire Phase')) +
labs(x = 'Response Time (ms)', caption = 'Histograms represent distribution of subject means') +
theme_bw() +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = 'bottom')
head(dst)
head(rapidFire)
d <- dst %>%
select(subject, difference, difficulty, selectedRiskyDeck) %>%
mutate(phase = 'dst')
d <- rapidFire %>%
select(subject, difference, difficulty, selectedReferenceDeck) %>%
mutate(phase = 'rapidFire') %>%
inner_join(d)
d <- rapidFire %>%
select(subject, difference, difficulty, selectedReferenceDeck) %>%
mutate(phase = 'rapidFire') %>%
d <- rapidFire %>%
select(subject, difference, difficulty, selectedRiskyDeck) %>%
mutate(phase = 'rapidFire') %>%
inner_join(d)
head(d)
d <- rapidFire %>%
select(subject, difference, difficulty, selectedRiskyDeck) %>%
mutate(phase = 'rapidFire')
d1 <- dst %>%
select(subject, difference, difficulty, selectedRiskyDeck) %>%
mutate(phase = 'dst')
d <- rbind(d, d1)
head(d)
library(ez)
ezANOVA(wid = subject, within = .(difference, difficulty, phase), dv = selectedRiskyDeck, detailed = TRUE, data = d)
d %>%
group_by(subject,difference,difficulty,phase) %>%
summarize(srd = mean(selectedRiskyDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(srd)) %>%
summarize(se = sd(srd) / sqrt(70))
d %>%
group_by(subject,difference,difficulty,phase) %>%
summarize(SRD = mean(selectedRiskyDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9))+
geom_errorbar(aes(ymin = srd - se, ymax = srd + se), position = position_dodge(width = 0.9), width = 0.5) +
facet_wrap(~phase) +
theme_bw()
+
d %>%
group_by(subject,difference,difficulty,phase) %>%
summarize(SRD = mean(selectedRiskyDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd   se), position = position_dodge(width = 0.9), width = 0.5)  +
facet_wrap(~phase)+
theme_bw()+
ylim(0,1) +
geom_hline(yintercept = 0.5, linetype = 'dashed')
d %>%
group_by(subject,difference,difficulty,phase) %>%
summarize(SRD = mean(selectedRiskyDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd   se), position = position_dodge(width = 0.9), width = 0.5)  +
geom_hline(yintercept = 0.5, linetype = 'dashed')
d %>%
group_by(subject,difference,difficulty,phase) %>%
summarize(SRD = mean(selectedRiskyDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd   se), position = position_dodge(width = 0.9), width = 0.5)  +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
facet_wrap(~phase)+
theme_bw()+
ylim(0,1)
d %>%
group_by(subject,difference,difficulty,phase) %>%
summarize(SRD = mean(selectedRiskyDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd   se), position = position_dodge(width = 0.9), width = 0.5)  +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
facet_wrap(~phase)+
theme_bw()+
ylim(0,1)
d %>%
group_by(subject,difference,difficulty,phase) %>%
summarize(SRD = mean(selectedRiskyDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd - se), position = position_dodge(width = 0.9), width = 0.5) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
facet_wrap(~phase)+
theme_bw()+
ylim(0,1)
d %>%
group_by(subject,difference,difficulty,phase) %>%
summarize(SRD = mean(selectedRiskyDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se), position = position_dodge(width = 0.9), width = 0.5) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
facet_wrap(~phase)+
theme_bw()+
ylim(0,1)
library(tidyverse)
library(ggExtra)
library(ez)
dst <- read.csv('../../../data/dstClean.csv')
n <- dst %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
dst
dst <- dst %>%
mutate(difference = factor(difference, levels = levels(difference)[c(2,1)]),
selSafeDeck = ifelse(selectedRiskyDeck == 1, 0, 1))
dst %>%
group_by(subject, difference, difficulty) %>%
summarize(selSafeDeck = mean(selSafeDeck)) %>%
group_by(difference, difficulty) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(n)) %>%
ggplot(aes(x = difficulty, y = ssd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se), position = position_dodge(width = 0.9), width = 0.5) +
labs(
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
ylim(0, 1) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
scale_fill_manual(name = 'Difference', values = c(Moderate = 'light grey', Extreme = 'black')) +
theme_bw()
source('~/.active-rstudio-document', echo=TRUE)
d %>%
mutate(selSafeDeck = ifelse(selectedRiskyDeck == 0,1,0)) %>%
group_by(subject,difference,difficulty,phase) %>%
summarize(SRD = mean(selSafeDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se), position = position_dodge(width = 0.9), width = 0.5) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
facet_wrap(~phase)+
theme_bw()+
ylim(0,1)
d %>%
mutate(selSafeDeck = ifelse(selectedRiskyDeck == 0,1,0)) %>%
group_by(subject,difference,difficulty,phase) %>%
summarize(SRD = mean(selSafeDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
mutate(difficulty = factor(difficulty, levels = levels(difficulty)[c(2,1)])) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se), position = position_dodge(width = 0.9), width = 0.5) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
facet_wrap(~phase)+
theme_bw()+
ylim(0,1)
d %>%
mutate(selSafeDeck = ifelse(selectedRiskyDeck == 0,1,0)) %>%
mutate(difficulty = factor(difficulty, levels = levels(difficulty)[c(2,1)])) %>%
group_by(subject,difference,difficulty,phase) %>%
summarize(SRD = mean(selSafeDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se), position = position_dodge(width = 0.9), width = 0.5) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
facet_wrap(~phase)+
theme_bw()+
ylim(0,1)
d %>%
mutate(selSafeDeck = ifelse(selectedRiskyDeck == 0,1,0)) %>%
mutate(difficulty = factor(difficulty, levels = levels(difficulty)[c(2,1)])) %>%
group_by(subject,difference,difficulty,phase) %>%
summarize(SRD = mean(selSafeDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se), position = position_dodge(width = 0.9), width = 0.5) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
facet_wrap(~phase)+
theme_bw()+
ylim(0,1)
d %>%
mutate(selSafeDeck = ifelse(selectedRiskyDeck == 0,1,0)) %>%
mutate(difficulty = factor(difficulty, levels = levels(difficulty))) %>%
group_by(subject,difference,difficulty,phase) %>%
summarize(SRD = mean(selSafeDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se), position = position_dodge(width = 0.9), width = 0.5) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
facet_wrap(~phase)+
theme_bw()+
ylim(0,1)
d %>%
mutate(selSafeDeck = ifelse(selectedRiskyDeck == 0,1,0)) %>%
group_by(subject,difference,difficulty,phase) %>%
summarize(SRD = mean(selSafeDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
mutate(difficulty = factor(difficulty, levels = levels(difficulty)[c(2,1)])) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se), position = position_dodge(width = 0.9), width = 0.5) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
facet_wrap(~phase)+
theme_bw()+
ylim(0,1)
d %>%
mutate(selSafeDeck = ifelse(selectedRiskyDeck == 0,1,0)) %>%
group_by(subject,difference,difficulty,phase) %>%
summarize(SRD = mean(selSafeDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
ungroup() %>%
mutate(difficulty = factor(difficulty, levels = levels(difficulty)[c(2,1)])) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se), position = position_dodge(width = 0.9), width = 0.5) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
facet_wrap(~phase)+
theme_bw()+
ylim(0,1)
d %>%
mutate(selSafeDeck = ifelse(selectedRiskyDeck == 0,1,0),
difficulty = factor(difficulty)) %>%
mutate(difficulty = factor(difficulty, levels = levels(difficulty)[c(2,1)])) %>%
group_by(subject,difference,difficulty,phase) %>%
summarize(SRD = mean(selSafeDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se), position = position_dodge(width = 0.9), width = 0.5) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
facet_wrap(~phase)+
theme_bw()+
ylim(0,1)
d %>%
mutate(selSafeDeck = ifelse(selectedRiskyDeck == 0,1,0)) %>%
mutate(difference = factor(difference, levels = levels(difference)[c(2,1)])) %>%
group_by(subject,difference,difficulty,phase) %>%
summarize(SRD = mean(selSafeDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se), position = position_dodge(width = 0.9), width = 0.5) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
facet_wrap(~phase)+
theme_bw()+
ylim(0,1)
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se), position = position_dodge(width = 0.9), width = 0.5) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
theme_bw()+
ylim(0,1)
d %>%
mutate(selSafeDeck = ifelse(selectedRiskyDeck == 0,1,0)) %>%
mutate(difference = factor(difference, levels = levels(difference)[c(2,1)])) %>%
group_by(subject,difference,difficulty) %>%
summarize(SRD = mean(selSafeDeck)) %>%
group_by(difference, difficulty, phase) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se), position = position_dodge(width = 0.9), width = 0.5) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
theme_bw()+
ylim(0,1)
d %>%
mutate(selSafeDeck = ifelse(selectedRiskyDeck == 0,1,0)) %>%
mutate(difference = factor(difference, levels = levels(difference)[c(2,1)])) %>%
group_by(subject,difference,difficulty) %>%
summarize(SRD = mean(selSafeDeck)) %>%
group_by(difference, difficulty) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se), position = position_dodge(width = 0.9), width = 0.5) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
theme_bw()+
ylim(0,1)
ezANOVA(wid = subject, within = .(difference, difficulty), dv = SRD, data = d, detailed = TRUE)
d <-  d %>%
mutate(selSafeDeck = ifelse(selectedRiskyDeck == 0,1,0)) %>%
mutate(difference = factor(difference, levels = levels(difference)[c(2,1)])) %>%
group_by(subject,difference,difficulty) %>%
summarize(SRD = mean(selSafeDeck))
d %>%
group_by(difference, difficulty) %>%
summarize(srd = mean(SRD), se = sd(SRD) / sqrt(70)) %>%
ggplot(aes(x = difficulty, y = srd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = srd - se, ymax = srd + se), position = position_dodge(width = 0.9), width = 0.5) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
theme_bw()+
ylim(0,1)
ezANOVA(wid = subject, within = .(difference, difficulty), dv = SRD, data = d, detailed = TRUE)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = SRD, data = d, detailed = TRUE)
m1 <- data.frame(m1$ANOVA)
m1$p.value <- round(m1$p.value, 3)
m1$p <- round(m1$p, 3)
m1
ezANOVA(wid = subject, within = .(difference, difficulty), dv = SRD, data = dst, detailed = TRUE)
ezANOVA(wid = subject, within = .(difference, difficulty), dv = selectedRiskyDeck, data = dst, detailed = TRUE)
library(lme4)
head(d)
d$differenceD <- ifelse(d$difference = 'Easier than Reference', -0.5, 0.5)
d$differenceD <- ifelse(d$difference == 'Easier than Reference', -0.5, 0.5)
d$difficulty <- ifelse(d$difficulty == 'Easier than Reference', -0.5, 0.5)
d$differenceD <- ifelse(d$difference == 'Moderate', -0.5, 0.5)
head(d)
glmer(SRD ~ differenceD * difficultyD + (1 + differenceD * difficultyD | subject), data = d, family = binomial, control = glmerControl(optimizer = 'bobyqa'))
glmer(SRD ~ differenceD * difficulty + (1 + differenceD * difficulty | subject), data = d, family = binomial, control = glmerControl(optimizer = 'bobyqa'))
dst$differenceD <- ifelse(dst$difference == 'Easier than Reference', -0.5, 0.5)
dst$difficultyD <- ifelse(dst$difficulty)
dst$difficultyD <- ifelse(dst$difficulty == 'Easier than Reference', -0.5, 0.5)
dst$differenceD <- ifelse(dst$difference == 'Moderate', -0.5, 0.5)
glmer(selectedSafeDeck ~ differenceD * difficultyD + (1 + differenceD * difficultyD | subject), data = dst, family = binomial, control = glmerControl(optimizer = 'bobyqa'))
head(dst)
glmer(selectedRiskyDeck ~ differenceD * difficultyD + (1 + differenceD * difficultyD | subject), data = dst, family = binomial, control = glmerControl(optimizer = 'bobyqa'))
m1 <- glmer(selectedRiskyDeck ~ differenceD * difficultyD + (1 + differenceD * difficultyD | subject), data = dst, family = binomial, control = glmerControl(optimizer = 'bobyqa'))
str(m1)
ranef(m1)
r
r <- ranef(m1)$Subject
head(r)
r <- ranef(m1)$subject
head(r)
r$subject <- 1:(nrow(r))
head(r)
r %>%
gather(term, value, `(Intercept)`:`differenceD:difficultyD`) %>%
head()
r %>%
gather(term, value, `(Intercept)`:`differenceD:difficultyD`) %>%
ranef(m1, condVar = TRUE)
str(ranef(m1, condVar = TRUE))
help(]ranef)
help(ranef)
str(ranef(m1))
str(data.frame(ranef(m1)))
head(data.frame(ranef(m1)))
dotplot(data.frame(ranef(m1)))
help(dotplot)
library(lattice)
dotplot(data.frame(ranef(m1)))
dotplot(ranef(m1))
df.residual
help("df.residual")
df.residual(m1)
residuals(m1)
length(residuals(m1, type='pearson')) == nrow(dst)
overdisp_fun <- function(model) {
rdf <- df.residual(model) ## get the degrees of freedom residual (a scalar)
rp <- residuals(model, type='pearson') ## vector of residuals length of the data
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq / rdf
pval <- pchisq(Pearson.chisq, df = rdf, lower.tail = FALSE)
c(chisq = Pearson.chisq, ratio = prat, rdf = rdf, p = pval)
}
overdisp_fun(m1)
overdisp_fun <- function(model) {
rdf <- df.residual(model)
rp <- residuals(model,type="pearson")
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq/rdf
pval <- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)
c(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)
}
overdisp_fun(m1)
q()
