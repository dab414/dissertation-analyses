ggplot(aes(x = reorder(grp, condval), y = condval)) +
geom_point() +
geom_errorbar(aes(ymin = condval - condsd, ymax = condval + condsd), width = 0) +
coord_flip() +
labs(
x = '',
y = 'Difference Slope'
) +
theme_bw() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
grid.arrange(p1, p2, p3, nrow = 1)
fixef(m1)
m1_CI_prof <- confint(m1)
m1_CI_quad <- confint(m1, method = 'Wald')
m1_CI_boot <- confint(m1, method = 'boot')
m1_CI_boot
data.frame(m1_CI_boot)
CIs <- data.frame(m1_CI_prof)
CIs$factor <- row.names(CIs)
CIs$method <- 'prof'
t1 <- data.frame(m1_CI_quad)
CIs$factor <- row.names(t1)
CIs$method <- 'Wald'
t2 <- data.frame(m1_CI_boot)
CIs$factor <- row.names(t2)
CIs$method <- 'boot'
CIs <- rbind(CIs, t1, t2
)
ta
t1
t2
CIs
CIs <- data.frame(m1_CI_prof)
CIs$factor <- row.names(CIs)
CIs$method <- 'prof'
t1 <- data.frame(m1_CI_quad)
t1$factor <- row.names(t1)
t1$method <- 'Wald'
t2 <- data.frame(m1_CI_boot)
t2$factor <- row.names(t2)
t2$method <- 'boot'
CIs <- rbind(CIs, t1, t2)
CIs
CIs <- CIs %>%
filter(!contains(.sigh))
CIs <- CIs %>%
filter(!contains(.sig))
CIs <- CIs %>%
filter(!contains(`.sig`))
CIs <- CIs %>%
filter(!contains('.sig'))
CIs <- CIs %>%
filter(!grepl('.sig', factor))
CIs
colnames(CIs)[1:2] <- c('lower', 'upper')
filter(!grepl('.sig', factor))
CIs
save(CIs, file = 'CIs.RData')
load('CIs.RData')
fixef(m1)
names(fixef(m1))
CIs
fe <- data.frame(estimate = fixef(m1), factor = names(fixef(m1))
)
fe
CIs <- fe %>%
inner_join(CIs)
CIs
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_jitter(width = .1, height = 0) +
geom_errorbar(aes(ymin = estimate - lower, ymax = estimate + upper), width = 0)
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_point(width = .1, height = 0, position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = estimate - lower, ymax = estimate + upper), width = 0)
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_point(width = .1, height = 0, position = position_dodge(width = 4)) +
geom_errorbar(aes(ymin = estimate - lower, ymax = estimate + upper), width = 0)
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_point(width = .1, height = 0, position = position_dodge(width = .5)) +
geom_errorbar(aes(ymin = estimate - lower, ymax = estimate + upper), width = 0)
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_point(width = .1, aes(color = method), height = 0, position = position_dodge(width = .5)) +
geom_errorbar(aes(ymin = estimate - lower, ymax = estimate + upper), width = 0)
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_point(width = .1, aes(color = method), height = 0, position = position_dodge(width = .5)) +
geom_errorbar(aes(ymin = estimate - lower, ymax = estimate + upper, group = method), width = 0)
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_point(width = .1, aes(color = method), height = 0, position = position_dodge(width = .5)) +
geom_errorbar(aes(ymin = estimate - lower, ymax = estimate + upper, group = method), position = position_dodge(width = .5), width = 0)
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_point(aes(color = method), position = position_dodge(width = .5)) +
geom_errorbar(aes(ymin = estimate - lower, ymax = estimate + upper, group = method), position = position_dodge(width = .5), width = 0)
CIs
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_point(aes(color = method), position = position_dodge(width = .5)) +
geom_errorbar(aes(ymin = estimate + lower, ymax = estimate + upper, group = method), position = position_dodge(width = .5), width = 0)
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_point(aes(color = method), position = position_dodge(width = .5)) +
geom_errorbar(aes(ymin = lower, ymax = upper, group = method), position = position_dodge(width = .5), width = 0)
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, group = method), position = position_dodge(width = .5), width = 0)
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, group = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5))
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, color = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5))
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, color = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5)) +
coord_flip()
CIs$factor <- factor(CIs$factor, levels = levels(CIs$factor)[c(4, 1, 2, 3)])
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, color = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5)) +
coord_flip()
CIs$factor <- factor(CIs$factor)
CIs$factor <- factor(CIs$factor, levels = levels(CIs$factor)[c(4, 1, 2, 3)])
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, color = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5)) +
coord_flip()
load('CIs.RData')
fe <- data.frame(estimate = fixef(m1), factor = names(fixef(m1)))
CIs <- fe %>%
inner_join(CIs)
CIs$factor <- factor(CIs$factor)
CIs$factor <- factor(CIs$factor, levels = levels(CIs$factor)[c(4, 1, 2, 3)])
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, color = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5)) +
coord_flip()
load('CIs.RData')
fe <- data.frame(estimate = fixef(m1), factor = names(fixef(m1)))
CIs <- fe %>%
inner_join(CIs)
CIs$factor <- factor(CIs$factor)
#CIs$factor <- factor(CIs$factor, levels = levels(CIs$factor)[c(4, 1, 2, 3)])
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, color = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5)) +
coord_flip()
load('CIs.RData')
fe <- data.frame(estimate = fixef(m1), factor = names(fixef(m1)))
CIs <- fe %>%
inner_join(CIs)
CIs$factor <- factor(CIs$factor)
#CIs$factor <- factor(CIs$factor, levels = levels(CIs$factor)[c(4, 1, 2, 3)])
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, color = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5)) #+
#coord_flip()
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, color = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5)) +
coord_flip()
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, color = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5)) #+
load('CIs.RData')
fe <- data.frame(estimate = fixef(m1), factor = names(fixef(m1)))
CIs <- fe %>%
inner_join(CIs)
CIs$factor <- factor(CIs$factor)
CIs$factor <- factor(CIs$factor, levels = levels(CIs$factor)[c(3,2,4,1)])
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, color = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5)) +
coord_flip()
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, color = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5)) +
coord_flip()+
scale_x_discrete(labels = c(`(Intercept)` = 'Intercept', `difficultyE` = 'Difficulty', `differenceE` = 'Difference', `differenceE:difficultyE` = 'Interaction'))
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, color = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5)) +
coord_flip()+
scale_x_discrete(labels = c(`(Intercept)` = 'Intercept', `difficultyE` = 'Difficulty', `differenceE` = 'Difference', `differenceE:difficultyE` = 'Interaction')) +
labs(
x = 'Effect (log odds of choosing safe deck)',
y = ''
)
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, color = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5)) +
coord_flip()+
scale_x_discrete(labels = c(`(Intercept)` = 'Intercept', `difficultyE` = 'Difficulty', `differenceE` = 'Difference', `differenceE:difficultyE` = 'Interaction')) +
labs(
y = 'Effect (log odds of choosing safe deck)',
x = ''
)
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, color = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5)) +
coord_flip()+
scale_x_discrete(labels = c(`(Intercept)` = 'Intercept', `difficultyE` = 'Difficulty', `differenceE` = 'Difference', `differenceE:difficultyE` = 'Interaction')) +
labs(
y = 'Effect (log odds of choosing safe deck)',
x = ''
) +
scale_fill_discrete(name = 'Method')
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, color = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5)) +
coord_flip()+
scale_x_discrete(labels = c(`(Intercept)` = 'Intercept', `difficultyE` = 'Difficulty', `differenceE` = 'Difference', `differenceE:difficultyE` = 'Interaction')) +
labs(
y = 'Effect (log odds of choosing safe deck)',
x = ''
) +
scale_color_discrete(name = 'Method')
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, color = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5)) +
coord_flip()+
scale_x_discrete(labels = c(`(Intercept)` = 'Intercept', `difficultyE` = 'Difficulty', `differenceE` = 'Difference', `differenceE:difficultyE` = 'Interaction')) +
labs(
y = 'Effect (log odds of choosing safe deck)',
x = ''
) +
scale_color_discrete(name = 'Method') +
theme_bw() +
theme(legend.position = c(.9, .5))
CIs %>%
ggplot(aes(x = factor, y = estimate)) +
geom_errorbar(aes(ymin = lower, ymax = upper, color = method), position = position_dodge(width = .5), width = 0) +
geom_point(aes(color = method), position = position_dodge(width = .5)) +
coord_flip()+
scale_x_discrete(labels = c(`(Intercept)` = 'Intercept', `difficultyE` = 'Difficulty', `differenceE` = 'Difference', `differenceE:difficultyE` = 'Interaction')) +
labs(
y = 'Effect (log odds of choosing safe deck)',
x = '',
caption = 'Lines represent 95% confidence intervals according to Method'
) +
scale_color_discrete(name = 'Method') +
theme_bw() +
theme(legend.position = c(.9, .5))
coef(summary(m1))
m1_noDiff <- update(m1, .~.-differenceE)
anova(m1, m1_noDiff)
m1_noDifference <- update(m1, .~.-differenceE)
anova(m1, m1_noDifference)
m1_noDifficulty <- update(m1, .~.-difficultyE)
anova(m1, m1_noDifficulty)
m1_noInt <- update(m1, .~.-`differenceE:difficultyE`)
anova(m1, m1_noInt)
m1_noInt <- update(m1, .~.-`differenceE:difficultyE`)
anova(m1, m1_noInt)
m1_noInt <- glmer(selSafeDeck ~ differenceE + difficultyE + (1 | subject) + (0 + difficultyE | subject) + (0 + differenceE | subject), data = d, family = binomial, control = glmerControl(optimzer = 'bobyqa'))
m1_noInt <- glmer(selSafeDeck ~ differenceE + difficultyE + (1 | subject) + (0 + difficultyE | subject) + (0 + differenceE | subject), data = d, family = binomial, control = glmerControl(optimizer = 'bobyqa'))
summary(m1_noInt)
anova(m1, m1_noInt)
PBsimfun <- function(m0,m1,x=NULL) {
if (is.null(x)) x <- simulate(m0)
m0r <- try(refit(m0,x[[1]]),silent=TRUE)
if (inherits(m0r,"try-error")) return(NA)
m1r <- try(refit(m1,x[[1]]),silent=TRUE)
if (inherits(m1r,"try-error")) return(NA)
c(-2*(logLik(m0r)-logLik(m1r)))
}
set.seed(101)
PBrefdsit <- replicate(400, pbsimfun(m1_noDifficulty, m1))
PBrefdsit <- replicate(400, PBsimfun(m1_noDifficulty, m1))
PBrefdsit
PBrefdist <- PBrefdsit
save(PBrefdist, 'PBrefdist.RData')
save(PBrefdist, file = 'PBrefdist.RData')
load('PBrefdist.RData')
difficulty <- data.frame(refDist = PBrefdist, density = dchisq(PBrefdist, 1))
difficulty %>%
ggplot(aes(x = PBrefDist)) +
geom_histogram(color = 'black', aes(y = ..density..)) +
geom_density(stat = 'identity', aes(y = density), fill = NA, color = 'red')
difficulty %>%
ggplot(aes(x = refDist)) +
geom_histogram(color = 'black', aes(y = ..density..)) +
geom_density(stat = 'identity', aes(y = density), fill = NA, color = 'red')
difficulty %>%
ggplot(aes(x = refDist)) +
geom_histogram(color = 'black', aes(y = ..density..)) +
geom_density(stat = 'identity', aes(y = ..density..), fill = NA, color = 'red')
difficulty %>%
ggplot(aes(x = refDist)) +
geom_histogram(color = 'black', aes(y = ..density..)) #+
geom_density(aes(y = density), fill = NA, color = 'red')
difficulty %>%
ggplot(aes(x = refDist)) +
geom_histogram(color = 'black', aes(y = ..density..)) +
geom_density(aes(y = density), fill = NA, color = 'red')
difficulty %>%
ggplot(aes(x = refDist)) +
geom_histogram(color = 'black', aes(y = ..density..)) +
geom_density(stat = 'identity', aes(y = density), fill = NA, color = 'red')
head(difficulty)
max(difficulty$density)
difficulty %>%
ggplot(aes(x = refDist)) +
geom_histogram(color = 'black', aes(y = ..density..)) +
geom_density(aes(y = density), fill = NA, color = 'red')
geom_density(fill = NA, color = 'red')
geom_histogram(color = 'black', aes(y = ..density..)) +
difficulty %>%
ggplot(aes(x = refDist, y = density)) +
geom_histogram(color = 'black', aes(y = ..density..)) +
geom_density(fill = NA, color = 'red')
difficulty %>%
ggplot(aes(x = refDist, y = density)) +
geom_histogram(color = 'black', aes(y = ..density..)) +
geom_density(fill = NA, color = 'red')
difficulty %>%
ggplot(aes(x = refDist)) +
geom_histogram(color = 'black', aes(y = ..density..)) +
geom_density(fill = NA, color = 'red')
difficulty %>%
ggplot(aes(x = refDist)) +
geom_histogram(color = 'black', aes(y = ..density..)) +
geom_density(aes(x = density),fill = NA, color = 'red')
hist(difficulty$density)
difficulty %>%
ggplot(aes(x = refDist)) +
geom_density(color = 'black') +
geom_density(aes(x = density),fill = NA, color = 'red')
difficulty %>%
ggplot(aes(x = refDist)) +
geom_density(color = 'black') +
geom_density(aes(x = density),fill = NA, color = 'red')
difficulty %>%
ggplot(aes(x = refDist)) +
geom_density(color = 'black')# +
difficulty %>%
ggplot(aes(x = refDist)) +
geom_histogram(aes(y = ..density..))
difficulty %>%
ggplot(aes(x = refDist)) +
geom_histogram(aes(x = ..density..))
difficulty %>%
ggplot(aes(x = refDist)) +
geom_histogram(aes(y = ..density..))
difficulty %>%
ggplot(aes(x = refDist)) +
geom_histogram(aes(y = ..density..))+
geom_density(color = 'black')# +
difficulty %>%
ggplot(aes(x = refDist)) +
geom_histogram(aes(y = ..density..))+
geom_density(aes(x = density), color = 'black')# +
difficulty %>%
ggplot(aes(x = refDist)) +
geom_histogram(aes(y = ..density..))#+
hist(difficulty$refDist)
difficulty %>%
ggplot() +
geom_histogram(aes(x = refDist, y = ..density..))#+
difficulty %>%
ggplot() +
geom_histogram(aes(x = refDist, y = ..density..))#+
difficulty %>%
ggplot() +
geom_histogram(aes(x = refDist, y = ..density..))+
geom_density(aes(x = density), color = 'black')# +
difficulty %>%
ggplot() +
geom_density(aes(x = density), color = 'black') +
geom_histogram(aes(x = refDist, y = ..density..))
difficulty %>%
ggplot() +
geom_density(aes(x = density), color = 'black') +
geom_histogram(aes(x = refDist, y = ..density..))
difficulty %>%
ggplot() +
geom_density(aes(x = density), color = 'black') +
geom_histogram(aes(x = refDist, y = ..density..))
difficulty %>%
ggplot() +
geom_density(aes(x = density), color = 'black') #+
difficulty %>%
ggplot() +
#  geom_density(aes(x = density), color = 'black') #+
geom_histogram(aes(x = refDist, y = ..density..))
difficulty$refDistDensity <- difficulty$refDist / (sum(difficulty$refDist))
hist(difficulty$refDistDensity)
hist(x = difficulty$refDist, y = difficulty$refDistDensity)
difficulty %>%
ggplot() +
#  geom_density(aes(x = density), color = 'black') #+
geom_histogram(aes(x = refDist, y = refDistDensity))
difficulty %>%
ggplot() +
#  geom_density(aes(x = density), color = 'black') #+
geom_histogram(stat = 'identity', aes(x = refDist, y = refDistDensity))
difficulty %>%
ggplot() +
#  geom_density(aes(x = density), color = 'black') #+
geom_histogram(stat = 'identity', aes(x = refDist))
difficulty %>%
ggplot() +
#  geom_density(aes(x = density), color = 'black') #+
geom_histogram(stat = 'identity', aes(x = refDist, y = ..density..))
difficulty %>%
ggplot() +
#  geom_density(aes(x = density), color = 'black') #+
geom_histogram(stat = 'identity', aes(x = refDist, y = ..density..))
difficulty %>%
ggplot() +
#  geom_density(aes(x = density), color = 'black') #+
geom_histogram(aes(x = refDist, y = ..density..))
difficulty %>%
ggplot() +
geom_density(aes(x = density), color = 'black') +
geom_histogram(aes(x = refDist, y = ..density..))
difficulty %>%
ggplot() +
#  geom_density(aes(x = density), color = 'black') +
geom_histogram(aes(x = refDist, y = ..density..))
difficulty %>%
ggplot() +
geom_density(aes(x = density), color = 'black') +
geom_histogram(aes(x = refDist, y = ..density..))
difficulty %>%
ggplot() +
geom_density(aes(x = density), color = 'red') +
geom_histogram(aes(x = refDist, y = ..density..))
hist(difficulty$refDist)
hist(difficulty$refDist, freq = FALSE)
curve(dchisq(x, 1), col = 2, add = TRUE)
;
head(difficulty)
hist(dchisq(refDist,1))
hist(dchisq(difficulty$refDist,1))
help(dchisq)
hist(pchisq(difficulty$refDist,1))
plot(difficulty$refDist, pchisq(difficulty$refDist,1))
plot(difficulty$refDist, dchisq(difficulty$refDist,1))
plot(difficulty$refDist, (dchisq(difficulty$refDist,1)) / sum(dchisq(difficulty$refDist,1)))
plot(difficulty$refDist, difficulty$refDistDensity)
difficulty %>%
ggplot() +
#geom_density(aes(x = density), color = 'red') +
geom_histogram(aes(x = refDist, y = ..density..))
difficulty %>%
ggplot() +
#geom_density(aes(x = density), color = 'red') +
geom_histogram(aes(x = refDist, y = ..density..))
difficulty %>%
ggplot() +
#geom_density(aes(x = density), color = 'red') +
geom_histogram(aes(x = refDist, y = ..density..), bins = .5, fill = 'light grey', color = 'black')
difficulty %>%
ggplot() +
#geom_density(aes(x = density), color = 'red') +
geom_histogram(aes(x = refDist, y = ..density..), bins = 5, fill = 'light grey', color = 'black')
difficulty %>%
ggplot() +
#geom_density(aes(x = density), color = 'red') +
geom_histogram(aes(x = refDist, y = ..density..), bins = 20, fill = 'light grey', color = 'black')
difficulty %>%
ggplot() +
#geom_density(aes(x = density), color = 'red') +
geom_histogram(aes(x = refDist, y = ..density..), bins = 20, fill = 'light grey', color = 'black') +
labs(
x = 'Reference Distribution',
y = 'Density'
) +
theme_bw()
obs <- -2 * (loglik(m1_noDifficulty) - loglik(m10))
obs <- -2 * (logLik(m1_noDifficulty) - logLik(m10))
obs <- -2 * (logLik(m1_noDifficulty) - logLik(m1))
obs
anova(m1, m1_noDifficulty)
PBrefdist
obs <- -2 * (logLik(m1_noDifficulty) - logLik(m1))
sum(PBrefdist > obs)
mean(PBrefdist >= obs)
summarY(m1)
summary(m1)
paste('Difficulty p value: ', mean(PBrefdist >= obs))
library(devtools)
install.packages('devtools')
devtools::install_github('hadley/emo')
emo::ji('crying')
emo::ji('loudly crying face')
q()
