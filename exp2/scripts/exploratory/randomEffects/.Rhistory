intercept <- fixef(m3)['(Intercept)']
difficultyB <- fixef(m3)['difficultyE']
switchCostB <- fixef(m3)['switchCostC']
interaction <- fixef(m3)['difficultyE:switchCostC']
newdata$probb <- with(newdata, intercept + difficultyE * difficultyB + switchCostC * switchCostB + difficultyE * switchCostB * interaction)
newdata$probb <- exp(newdata$probb) / (1 + newdata$probb)
newdata %>%
ggplot(aes(x = switchCostC, y = probb, group = factor(difficultyE))) +
geom_line(aes(color = factor(difficultyE))) +
ylim(0,1)
newdata$probb <- exp(newdata$probb) / (1 + epx(newdata$probb))
newdata$probb <- exp(newdata$probb) / (1 + exp(newdata$probb))
newdata %>%
ggplot(aes(x = switchCostC, y = probb, group = factor(difficultyE))) +
geom_line(aes(color = factor(difficultyE))) +
ylim(0,1)
newdata$proba <- predict(m3, newdata = newdata, allow.new.levels = TRUE)
newdata$proba <- exp(newdata$proba) / (1 + exp(newdata$proba))
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_line(aes(color = factor(difficultyE))) +
ylim(0,1)
newdata$proba <- predict(m3, newdata = newdata, allow.new.levels = TRUE, type = 'response')
summary(newdata$proba)
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_line(aes(color = factor(difficultyE))) +
ylim(0,1)
newdata$proba <- predict(m3, newdata = newdata, allow.new.levels = TRUE, type = 'response', re.form = NA)
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_line(aes(color = factor(difficultyE))) +
ylim(0,1)
easyPredCi
easyPredCI
newdata_ci <- easyPredCI(m3, newdata = newdata)
### bolker's compute CI function
easyPredCI <- function(model,newdata=NULL,alpha=0.05) {
## baseline prediction, on the linear predictor (logit) scale:
pred0 <- predict(model,re.form=NA,newdata=newdata)
## fixed-effects model matrix for new data
X <- model.matrix(formula(model,fixed.only=TRUE)[-2],newdata)
beta <- fixef(model) ## fixed-effects coefficients
V <- vcov(model)     ## variance-covariance matrix of beta
pred.se <- sqrt(diag(X %*% V %*% t(X))) ## std errors of predictions
## inverse-link function
linkinv <- family(model)$linkinv
## construct 95% Normal CIs on the link scale and
##  transform back to the response (probability) scale:
crit <- -qnorm(alpha/2)
linkinv(cbind(conf.low=pred0-crit*pred.se,
conf.high=pred0+crit*pred.se))
}
newdata_ci <- easyPredCI(m3, newdata = newdata)
model.matrix(formula(m3,fixed.only=TRUE)[-2],newdata)
newdata <- expand.grid(difficultyE = c(-0.5,0.5), switchCostC = seq(-2,2,by = .01))
intercept <- fixef(m3)['(Intercept)']
difficultyB <- fixef(m3)['difficultyE']
switchCostB <- fixef(m3)['switchCostC']
interaction <- fixef(m3)['difficultyE:switchCostC']
newdata$probb <- with(newdata, intercept + difficultyE * difficultyB + switchCostC * switchCostB + difficultyE * switchCostB * interaction)
newdata$probb <- exp(newdata$probb) / (1 + exp(newdata$probb))
newdata %>%
ggplot(aes(x = switchCostC, y = probb, group = factor(difficultyE))) +
geom_line(aes(color = factor(difficultyE))) +
ylim(0,1)
newdata$proba <- predict(m3, newdata = newdata, allow.new.levels = TRUE, type = 'response', re.form = NA)
newdata <- expand.grid(subject = 1:70,difficultyE = c(-0.5,0.5), switchCostC = seq(-2,2,by = .01), differenceE = c(-0.5,0.5))
newdata_ci <- easyPredCI(m3, newdata = newdata)
newdatapredboot.ci <- t(sapply(1:(nrow(newdata)),
function(i)
boot.ci(m3, type='perc', index = i)$percent[4:5]))
bootMer
newdata <- expand.grid(subject = 1:70,difficultyE = c(-0.5,0.5), switchCostC = seq(-2,2,by = .01), differenceE = c(-0.5,0.5))
bb <- bootMer(m3,
FUN = function(x)
predict(x, re.form=NA, newdata = newdata,
type = 'response'),
nsim = 400)
newdata <- expand.grid(difficultyE = c(-0.5,0.5), switchCostC = seq(-2,2,by = .01))
predict(m3, newdata = newdata, re.form = NA, type = 'response')
newdata <- expand.grid(difficultyE = c(-0.5,0.5), switchCostC = seq(-2,2,by = .01), differenceE = c(-0.5,0.5))
predict(m3, newdata = newdata, re.form = NA, type = 'response')
head(predict(m3, newdata = newdata, re.form = NA, type = 'response'))
head(newdata)
z <- easyPredCI(m3, newdata)
head(z)
newdata$proba <- predict(m3, newdata = newdata, allow.new.levels = TRUE, type = 'response', re.form = NA)
newdata <- cbind(newdata, easyPredCI(m3, newdata))
head(newdata)
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_line(aes(color = factor(difficultyE))) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.4)
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_line(aes(color = factor(difficultyE))) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.4) +
ylim(0,1)
d$switchCostC_h <- d$switchCostC - 1
m3_highSwitch <- m3 <- glmer(selSafeDeck ~ differenceE * difficultyE * switchCostC_h + (1 | subject) + (0 + differenceE | subject) + (0 + difficultyE | subject), data = d, family = binomial,  control = glmerControl(optimizer = 'bobyqa'))
m3_noSwitch <- update(m3_highSwitch, .~.-switchCostC_h:difficultyE)
anova(m3, m3_noSwitch)
d$switchCostC_h <- d$switchCostC + 1
m3_lowSwitch <- m3 <- glmer(selSafeDeck ~ differenceE * difficultyE * switchCostC_l + (1 | subject) + (0 + differenceE | subject) + (0 + difficultyE | subject), data = d, family = binomial,  control = glmerControl(optimizer = 'bobyqa'))
d$switchCostC_h <- d$switchCostC - 1
m3_highSwitch <- m3 <- glmer(selSafeDeck ~ differenceE * difficultyE * switchCostC_h + (1 | subject) + (0 + differenceE | subject) + (0 + difficultyE | subject), data = d, family = binomial,  control = glmerControl(optimizer = 'bobyqa'))
m3_noDifficulty <- update(m3_highSwitch, .~.-difficultyE)
anova(m3, m3_noSwitch)
anova(m3, m3_noDifficulty)
summary(m3_highSwitch)
d$switchCostC <- scale(d$switchCost, center = TRUE)
m3 <- glmer(selSafeDeck ~ differenceE * difficultyE * switchCostC + (1 | subject) + (0 + differenceE | subject) + (0 + difficultyE | subject), data = d, family = binomial,  control = glmerControl(optimizer = 'bobyqa'))
summary(m3)
m3_noSwitch <- update(m3, .~.-switchCostC:difficultyE)
anova(m3, m3_noSwitch)
d$switchCostC_h <- d$switchCostC - 1
m3_highSwitch <- glmer(selSafeDeck ~ differenceE * difficultyE * switchCostC_h + (1 | subject) + (0 + differenceE | subject) + (0 + difficultyE | subject), data = d, family = binomial,  control = glmerControl(optimizer = 'bobyqa'))
summary(m3_highSwitch)
m3_noDifficulty <- update(m3_highSwitch, .~.-difficultyE)
anova(m3, m3_noDifficulty)
d$switchCostC_l <- d$switchCostC + 1
m3_lowSwitch <- glmer(selSafeDeck ~ differenceE * difficultyE * switchCostC_l + (1 | subject) + (0 + differenceE | subject) + (0 + difficultyE | subject), data = d, family = binomial,  control = glmerControl(optimizer = 'bobyqa'))
m3_noDifficulty <- update(m3_lowSwitch, .~.-difficultyE)
anova(m3, m3_noSwitch)
anova(m3, m3_noDifficulty)
summary(m3_lowSwitch)
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_line(aes(color = factor(difficultyE))) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ylim(0,1) +
labs(
x = 'Individual Switch Cost (z-score)',
y = 'Estimated Probability of Choosing Safe Deck'
) +
scale_color_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red'))
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_line(aes(color = factor(difficultyE))) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ylim(0,1) +
labs(
x = 'Individual Switch Cost (z-score)',
y = 'Estimated Probability of Choosing Safe Deck'
) +
scale_color_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
scale_fill_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red'))
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_line(aes(color = factor(difficultyE))) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ylim(0,1) +
labs(
x = 'Individual Switch Cost (Z-Score)',
y = 'Estimated Probability of Choosing Safe Deck'
) +
scale_color_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
scale_fill_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
theme_bw() +
theme(legend.position = c(0.1,0.9))
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_line(aes(color = factor(difficultyE))) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ylim(0,1) +
labs(
x = 'Individual Switch Cost (Z-Score)',
y = 'Estimated Probability of Choosing Safe Deck'
) +
scale_color_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
scale_fill_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
theme_bw() +
theme(legend.position = c(0.5,0.8))
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_line(aes(color = factor(difficultyE))) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ylim(0,1) +
labs(
x = 'Individual Switch Cost (Z-Score)',
y = 'Estimated Probability of Choosing Safe Deck'
) +
scale_color_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
scale_fill_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
theme_bw() +
theme(legend.position = c(0.5,0.85))
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_line(aes(color = factor(difficultyE)), size = 2) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ylim(0,1) +
labs(
x = 'Individual Switch Cost (Z-Score)',
y = 'Estimated Probability of Choosing Safe Deck'
) +
scale_color_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
scale_fill_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
theme_bw() +
theme(legend.position = c(0.5,0.85))
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_hline(yintercept = 0.5, linetype = 'dashed', color = 'light grey') +
geom_line(aes(color = factor(difficultyE)), size = 2) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ylim(0,1) +
labs(
x = 'Individual Switch Cost (Z-Score)',
y = 'Estimated Probability of Choosing Safe Deck'
) +
scale_color_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
scale_fill_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
theme_bw() +
theme(legend.position = c(0.5,0.85))
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_line(aes(color = factor(difficultyE)), size = 2) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ylim(0,1) +
labs(
x = 'Individual Switch Cost (Z-Score)',
y = 'Estimated Probability of Choosing Safe Deck'
) +
scale_color_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
scale_fill_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
theme_bw() +
theme(legend.position = c(0.5,0.85))
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_line(aes(color = factor(difficultyE)), size = 2) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ylim(0,1) +
labs(
x = 'Individual Switch Cost (Z-Score)',
y = 'Estimated Probability of Choosing Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
scale_color_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
scale_fill_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
theme_bw() +
theme(legend.position = c(0.5,0.85))
colnames(d)
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_point(data = sData, aes(x = sc, y = selSafeDeck, color = difficulty)) +
geom_line(aes(color = factor(difficultyE)), size = 2) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ylim(0,1) +
labs(
x = 'Individual Switch Cost (Z-Score)',
y = 'Estimated Probability of Choosing Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
scale_color_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
scale_fill_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
theme_bw() +
theme(legend.position = c(0.5,0.85))
sData <- d %>%
group_by(subject, difficulty) %>%
summarize(selSafeDeck = mean(selSafeDeck), switchCost = mean(switchCost)) %>%
mutate(sc = scale(switchCost, center = TRUE))
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_point(data = sData, aes(x = sc, y = selSafeDeck, color = difficulty)) +
geom_line(aes(color = factor(difficultyE)), size = 2) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ylim(0,1) +
labs(
x = 'Individual Switch Cost (Z-Score)',
y = 'Estimated Probability of Choosing Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
scale_color_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
scale_fill_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
theme_bw() +
theme(legend.position = c(0.5,0.85))
sData <- d %>%
group_by(subject, difficulty) %>%
summarize(selSafeDeck = mean(selSafeDeck), switchCost = mean(switchCost)) %>%
mutate(sc = scale(switchCost, center = TRUE))
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_point(data = sData, aes(x = sc, y = selSafeDeck, color = difficulty, group = difficulty)) +
geom_line(aes(color = factor(difficultyE)), size = 2) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ylim(0,1) +
labs(
x = 'Individual Switch Cost (Z-Score)',
y = 'Estimated Probability of Choosing Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
scale_color_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
scale_fill_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
theme_bw() +
theme(legend.position = c(0.5,0.85))
sData <- d %>%
group_by(subject, difficultyE) %>%
summarize(selSafeDeck = mean(selSafeDeck), switchCost = mean(switchCost)) %>%
mutate(sc = scale(switchCost, center = TRUE))
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_point(data = sData, aes(x = sc, y = selSafeDeck, color = difficultyE)) +
geom_line(aes(color = factor(difficultyE)), size = 2) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ylim(0,1) +
labs(
x = 'Individual Switch Cost (Z-Score)',
y = 'Estimated Probability of Choosing Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
scale_color_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
scale_fill_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
theme_bw() +
theme(legend.position = c(0.5,0.85))
sData <- d %>%
group_by(subject, difficultyE) %>%
summarize(selSafeDeck = mean(selSafeDeck), switchCost = mean(switchCost)) %>%
mutate(sc = scale(switchCost, center = TRUE), differenceE = factor(differenceE))
sData <- d %>%
group_by(subject, difficultyE) %>%
summarize(selSafeDeck = mean(selSafeDeck), switchCost = mean(switchCost)) %>%
mutate(sc = scale(switchCost, center = TRUE), difficultyE = factor(difficultyE))
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_point(data = sData, aes(x = sc, y = selSafeDeck, color = difficultyE)) +
geom_line(aes(color = factor(difficultyE)), size = 2) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ylim(0,1) +
labs(
x = 'Individual Switch Cost (Z-Score)',
y = 'Estimated Probability of Choosing Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
scale_color_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
scale_fill_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
theme_bw() +
theme(legend.position = c(0.5,0.85))
head(sData)
d %>%
group_by(subject, difficultyE) %>%
summarize(selSafeDeck = mean(selSafeDeck), switchCost = mean(switchCost))
sData <- d %>%
group_by(subject, difficultyE) %>%
summarize(selSafeDeck = mean(selSafeDeck), switchCost = mean(switchCost))
head(scale(d$switchCost, center = TRUE))
d %>%
group_by(subject, difficultyE) %>%
summarize(selSafeDeck = mean(selSafeDeck), switchCost = mean(switchCost)) %>%
mutate(sc = scale(switchCost, center = TRUE), difficultyE = factor(difficultyE))
sData <- d %>%
group_by(subject, difficultyE) %>%
summarize(selSafeDeck = mean(selSafeDeck), switchCost = mean(switchCost))
sData$sc <- scale(sData$switchCost, center = TRUE)
head(sData)
scale(sData$switchCost, center = TRUE)
head(scale(sData$switchCost, center = TRUE))
head(scale(sData$switchCost, center = TRUE)[,1])
sData <- d %>%
group_by(subject, difficultyE) %>%
summarize(selSafeDeck = mean(selSafeDeck), switchCost = mean(switchCost)) %>%
mutate(sc = scale(switchCost, center = TRUE)[,1], difficultyE = factor(difficultyE))
head(sData)
sData <- d %>%
group_by(subject, difficultyE) %>%
summarize(selSafeDeck = mean(selSafeDeck), switchCost = mean(switchCost))
sData <- d %>%
group_by(subject, difficultyE) %>%
summarize(selSafeDeck = mean(selSafeDeck), switchCost = mean(switchCost)) %>%
mutate(difficultyE = factor(difficultyE))
sData$sc <- scale(sData$switchCost, center = TRUE)[,1]
head(sData)
sData <- d %>%
group_by(subject, difficultyE) %>%
summarize(selSafeDeck = mean(selSafeDeck), switchCost = mean(switchCost)) %>%
mutate(difficultyE = factor(difficultyE))
sData$sc <- scale(sData$switchCost, center = TRUE)[,1]
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_point(data = sData, aes(x = sc, y = selSafeDeck, color = difficultyE)) +
geom_line(aes(color = factor(difficultyE)), size = 2) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ylim(0,1) +
labs(
x = 'Individual Switch Cost (Z-Score)',
y = 'Estimated Probability of Choosing Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
scale_color_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
scale_fill_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
theme_bw() +
theme(legend.position = c(0.5,0.85))
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_point(data = sData, aes(x = sc, y = selSafeDeck, color = difficultyE), alpha = .4) +
geom_line(aes(color = factor(difficultyE)), size = 2) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ylim(0,1) +
labs(
x = 'Individual Switch Cost (Z-Score)',
y = 'Estimated Probability of Choosing Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
scale_color_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
scale_fill_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
theme_bw() +
theme(legend.position = c(0.5,0.85))
newdata %>%
group_by(difficultyE, switchCostC) %>%
summarize(proba = mean(proba), conf.low = mean(conf.low), conf.high = mean(conf.high)) %>%
ggplot(aes(x = switchCostC, y = proba, group = factor(difficultyE))) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_point(data = sData, aes(x = sc, y = selSafeDeck, color = difficultyE), alpha = .4) +
geom_line(aes(color = factor(difficultyE)), size = 2) +
geom_ribbon(aes(fill = factor(difficultyE), ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ylim(0,1) +
labs(
x = 'Individual Switch Cost (Z-Score)',
y = 'Estimated Probability of Choosing Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
scale_color_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
scale_fill_manual(name = 'Difficulty', labels = c(`-0.5` = 'Easier than Reference', `0.5` = 'Harder than Reference'), values = c(`-0.5` = 'Green', `0.5` = 'Red')) +
theme_bw() +
theme(legend.position = 'bottom')
install.packages('emo')
devtools
install.packages('devtools')
devtools::install_github('hadley/emo')
d$difficultyEasy <- d$difficultyE + 0.5
m3_difficultyEasy <- glmer(selSafeDeck ~ differenceE * difficultyEasy * switchCostC + (1 | subject) + (0 + differenceEasy | subject) + (0 + difficultyE | subject), data = d, family = binomial,  control = glmerControl(optimizer = 'bobyqa'))
d$difficultyEasy <- d$difficultyE + 0.5
m3_difficultyEasy <- glmer(selSafeDeck ~ differenceE * difficultyEasy * switchCostC + (1 | subject) + (0 + difference | subject) + (0 + difficultyEasy | subject), data = d, family = binomial,  control = glmerControl(optimizer = 'bobyqa'))
summary(m3_difficultyEasy)
m3_noSwitch <- update(m3_difficultyEasy, .~.-switchCostC)
anova(m3, m3_noSwitch)
d$difficultyHard <- d$difficultyE + 0.5
m3_difficultyHard <- glmer(selSafeDeck ~ differenceE * difficultyHard * switchCostC + (1 | subject) + (0 + difference | subject) + (0 + difficultyHard | subject), data = d, family = binomial,  control = glmerControl(optimizer = 'bobyqa'))
summary(m3_difficultyHard)
m3_noSwitch <- update(m3_difficultyHard, .~.-switchCostC)
anova(m3, m3_noSwitch)
d$difficultyEasy <- d$difficultyE + 0.5
m3_difficultyEasy <- glmer(selSafeDeck ~ differenceE * difficultyEasy * switchCostC + (1 | subject) + (0 + difference | subject) + (0 + difficultyEasy | subject), data = d, family = binomial,  control = glmerControl(optimizer = 'bobyqa'))
summary(m3_difficultyEasy)
m3_noSwitch <- update(m3_difficultyEasy, .~.-switchCostC)
anova(m3_difficultyEasy, m3_noSwitch)
d$difficultyHard <- d$difficultyE + 0.5
m3_difficultyHard <- glmer(selSafeDeck ~ differenceE * difficultyHard * switchCostC + (1 | subject) + (0 + difference | subject) + (0 + difficultyHard | subject), data = d, family = binomial,  control = glmerControl(optimizer = 'bobyqa'))
summary(m3_difficultyHard)
m3_noSwitch <- update(m3_difficultyHard, .~.-switchCostC)
anova(m3_difficultyHard, m3_noSwitch)
d$difficultyHard <- d$difficultyE - 0.5
m3_difficultyHard <- glmer(selSafeDeck ~ differenceE * difficultyHard * switchCostC + (1 | subject) + (0 + difference | subject) + (0 + difficultyHard | subject), data = d, family = binomial,  control = glmerControl(optimizer = 'bobyqa'))
summary(m3_difficultyHard)
m3_noSwitch <- update(m3_difficultyHard, .~.-switchCostC)
anova(m3_difficultyHard, m3_noSwitch)
CIs
temp <- CIs[CIs$factor == 'difficultyE' & CIs$method == 'boot',]
difficultyPrint <- data.frame(parameter = c('Difficulty Slope', 'CI Upper', 'CI Lower'), value = c(exp(temp$estimate), exp(temp$upper), exp(temp$lower)))
difficultyPrint
q()
q()
