summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N)) %>%
ggplot(aes(x = condition, y = ssd)) +
geom_point(size = 4, shape = 23, fill = 'red', color = 'black') +
geom_jitter(data = sMeans, aes(x = condition, y = selSafeDeck), width = .1, height = 0, alpha = 0.3) +
geom_line(data = sMeans, aes(x = condition, y = selSafeDeck, group = subject), linetype = 'dashed', alpha = 0.3) +
geom_boxplot(data = sMeans, aes(x = condition, y = selSafeDeck), fill = NA) +
geom_label(data = condMeans, 'text', aes(x = condition, y = ssd), hjust = 3, vjust = 3)
sMeans %>%
group_by(condition) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N)) %>%
ggplot(aes(x = condition, y = ssd)) +
geom_point(size = 4, shape = 23, fill = 'red', color = 'black') +
geom_jitter(data = sMeans, aes(x = condition, y = selSafeDeck), width = .1, height = 0, alpha = 0.3) +
geom_line(data = sMeans, aes(x = condition, y = selSafeDeck, group = subject), linetype = 'dashed', alpha = 0.3) +
geom_boxplot(data = sMeans, aes(x = condition, y = selSafeDeck), fill = NA) +
geom_label(data = condMeans, mapping = aes(x = condition, y = ssd), hjust = 3, vjust = 3)
sMeans %>%
group_by(condition) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N)) %>%
ggplot(aes(x = condition, y = ssd)) +
geom_point(size = 4, shape = 23, fill = 'red', color = 'black') +
geom_jitter(data = sMeans, aes(x = condition, y = selSafeDeck), width = .1, height = 0, alpha = 0.3) +
geom_line(data = sMeans, aes(x = condition, y = selSafeDeck, group = subject), linetype = 'dashed', alpha = 0.3) +
geom_boxplot(data = sMeans, aes(x = condition, y = selSafeDeck), fill = NA) +
geom_label(data = condMeans, mapping = aes(x = condition, y = ssd, label = ssd), hjust = 3, vjust = 3)
sMeans %>%
group_by(condition) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N)) %>%
ggplot(aes(x = condition, y = ssd)) +
geom_point(size = 4, shape = 23, fill = 'red', color = 'black') +
geom_jitter(data = sMeans, aes(x = condition, y = selSafeDeck), width = .1, height = 0, alpha = 0.3) +
geom_line(data = sMeans, aes(x = condition, y = selSafeDeck, group = subject), linetype = 'dashed', alpha = 0.3) +
geom_boxplot(data = sMeans, aes(x = condition, y = selSafeDeck), fill = NA) +
geom_label(data = condMeans, mapping = aes(x = condition, y = ssd, label = ssd), hjust = 1, vjust = 1)
sMeans %>%
group_by(condition) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N)) %>%
ggplot(aes(x = condition, y = ssd)) +
geom_point(size = 4, shape = 23, fill = 'red', color = 'black') +
geom_jitter(data = sMeans, aes(x = condition, y = selSafeDeck), width = .1, height = 0, alpha = 0.3) +
geom_line(data = sMeans, aes(x = condition, y = selSafeDeck, group = subject), linetype = 'dashed', alpha = 0.3) +
geom_boxplot(data = sMeans, aes(x = condition, y = selSafeDeck), fill = NA) +
geom_label(data = condMeans, mapping = aes(x = condition, y = ssd, label = round(ssd, 2)), hjust = 1, vjust = 1)
sMeans %>%
group_by(condition) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N)) %>%
ggplot(aes(x = condition, y = ssd)) +
geom_point(size = 4, shape = 23, fill = 'red', color = 'black') +
geom_jitter(data = sMeans, aes(x = condition, y = selSafeDeck), width = .1, height = 0, alpha = 0.3) +
geom_line(data = sMeans, aes(x = condition, y = selSafeDeck, group = subject), linetype = 'dashed', alpha = 0.3) +
geom_boxplot(data = sMeans, aes(x = condition, y = selSafeDeck), fill = NA) +
geom_label(data = condMeans, mapping = aes(x = condition, y = ssd, label = round(ssd, 2)), hjust = 2, vjust = 2)
sMeans %>%
group_by(condition) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N)) %>%
ggplot(aes(x = condition, y = ssd)) +
geom_point(size = 4, shape = 23, fill = 'red', color = 'black') +
geom_jitter(data = sMeans, aes(x = condition, y = selSafeDeck), width = .1, height = 0, alpha = 0.3) +
geom_line(data = sMeans, aes(x = condition, y = selSafeDeck, group = subject), linetype = 'dashed', alpha = 0.3) +
geom_boxplot(data = sMeans, aes(x = condition, y = selSafeDeck), fill = NA) +
geom_label(data = condMeans, mapping = aes(x = condition, y = ssd, label = round(ssd, 2)), hjust = 1.5, vjust = 1.5)
sMeans %>%
group_by(condition) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N)) %>%
ggplot(aes(x = condition, y = ssd)) +
geom_point(size = 4, shape = 23, fill = 'red', color = 'black') +
geom_jitter(data = sMeans, aes(x = condition, y = selSafeDeck), width = .05, height = 0, alpha = 0.3) +
geom_line(data = sMeans, aes(x = condition, y = selSafeDeck, group = subject), linetype = 'dashed', alpha = 0.3) +
geom_boxplot(data = sMeans, aes(x = condition, y = selSafeDeck), fill = NA) +
geom_label(data = condMeans, mapping = aes(x = condition, y = ssd, label = round(ssd, 2)), hjust = 1.5, vjust = 1.5)
q()
library(tidyverse)
library(data.table)
library(lme4)
d <- read.csv('../../../data/dstCleanChoice.csv')
d$selSafeDeck <- ifelse(d$selectedRiskyDeck == 1, 0, 1)
N <- nrow(data.table(d)[,.(count = .N), by = subject])
sMeans <- d %>%
mutate(condition = factor(condition)) %>%
group_by(subject, condition) %>%
summarize(selSafeDeck = mean(selSafeDeck))
condMeans <- sMeans %>%
group_by(condition) %>%
summarize(ssd = mean(selSafeDeck))
sMeans %>%
group_by(condition) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N)) %>%
ggplot(aes(x = condition, y = ssd)) +
geom_point(size = 4, shape = 23, fill = 'red', color = 'black') +
geom_jitter(data = sMeans, aes(x = condition, y = selSafeDeck), width = .05, height = 0, alpha = 0.3) +
geom_line(data = sMeans, aes(x = condition, y = selSafeDeck, group = subject), linetype = 'dashed', alpha = 0.3) +
geom_boxplot(data = sMeans, aes(x = condition, y = selSafeDeck), fill = NA) +
geom_label(data = condMeans, mapping = aes(x = condition, y = ssd, label = round(ssd, 2)), hjust = 1.5, vjust = 1.5)
sMeans %>%
group_by(condition) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N)) %>%
ggplot(aes(x = condition, y = ssd)) +
geom_point(size = 4, shape = 23, fill = 'red', color = 'black') +
geom_jitter(data = sMeans, aes(x = condition, y = selSafeDeck), width = .05, height = 0, alpha = 0.3) +
geom_line(data = sMeans, aes(x = condition, y = selSafeDeck, group = subject), linetype = 'dashed', alpha = 0.3) +
geom_boxplot(data = sMeans, aes(x = condition, y = selSafeDeck), fill = NA) +
geom_label(data = condMeans, mapping = aes(x = condition, y = ssd, label = round(ssd, 2)), hjust = 1.5, vjust = 1.5) +
labs(
x = 'Critical Deck Intensity',
y = 'Proportion Selections of Safe Deck',
caption = 'Red diamonds reflect condition means; Horizontal bars in box plots reflect medians.'
) +
theme_bw()
d <- read.csv('../../../data/dstCleanChoice.csv')
d$selSafeDeck <- ifelse(d$selectedRiskyDeck == 1, 0, 1)
N <- nrow(data.table(d)[,.(count = .N), by = subject])
sMeans <- d %>%
mutate(condition = factor(condition)) %>%
mutate(condition = factor(condition, levels = levels(condition)[c(2,1,4,3)]))
group_by(subject, condition) %>%
summarize(selSafeDeck = mean(selSafeDeck))
d <- read.csv('../../../data/dstCleanChoice.csv')
d$selSafeDeck <- ifelse(d$selectedRiskyDeck == 1, 0, 1)
N <- nrow(data.table(d)[,.(count = .N), by = subject])
sMeans <- d %>%
mutate(condition = factor(condition)) %>%
mutate(condition = factor(condition, levels = levels(condition)[c(2,1,4,3)])) %>%
group_by(subject, condition) %>%
summarize(selSafeDeck = mean(selSafeDeck))
condMeans <- sMeans %>%
group_by(condition) %>%
summarize(ssd = mean(selSafeDeck))
sMeans %>%
group_by(condition) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N)) %>%
ggplot(aes(x = condition, y = ssd)) +
geom_point(size = 4, shape = 23, fill = 'red', color = 'black') +
geom_jitter(data = sMeans, aes(x = condition, y = selSafeDeck), width = .05, height = 0, alpha = 0.3) +
geom_line(data = sMeans, aes(x = condition, y = selSafeDeck, group = subject), linetype = 'dashed', alpha = 0.3) +
geom_boxplot(data = sMeans, aes(x = condition, y = selSafeDeck), fill = NA) +
geom_label(data = condMeans, mapping = aes(x = condition, y = ssd, label = round(ssd, 2)), hjust = 1.5, vjust = 1.5) +
labs(
x = 'Critical Deck Intensity',
y = 'Proportion Selections of Safe Deck',
caption = 'Red diamonds reflect condition means; Horizontal bars in box plots reflect medians.'
) +
theme_bw()
sMeans %>%
group_by(condition) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N)) %>%
ggplot(aes(x = condition, y = ssd)) +
geom_point(size = 4, shape = 23, fill = 'red', color = 'black') +
geom_jitter(data = sMeans, aes(x = condition, y = selSafeDeck), width = .05, height = 0, alpha = 0.3) +
geom_line(data = sMeans, aes(x = condition, y = selSafeDeck, group = subject), linetype = 'dashed', alpha = 0.3) +
geom_boxplot(data = sMeans, aes(x = condition, y = selSafeDeck), fill = NA) +
geom_label(data = condMeans, mapping = aes(x = condition, y = ssd, label = round(ssd, 2)), hjust = 1.5, vjust = 1.5) +
labs(
x = 'Critical Deck Intensity',
y = 'Proportion Selections of Safe Deck',
caption = 'Red diamonds reflect condition means; Horizontal bars in box plots reflect medians.'
) +
scale_x_discrete(labels = c('Easy Moderate', 'Easy Extreme', 'Hard Moderate', 'Hard Extreme'))
sMeans %>%
group_by(condition) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N)) %>%
ggplot(aes(x = condition, y = ssd)) +
geom_point(size = 4, shape = 23, fill = 'red', color = 'black') +
geom_jitter(data = sMeans, aes(x = condition, y = selSafeDeck), width = .05, height = 0, alpha = 0.3) +
geom_line(data = sMeans, aes(x = condition, y = selSafeDeck, group = subject), linetype = 'dashed', alpha = 0.3) +
geom_boxplot(data = sMeans, aes(x = condition, y = selSafeDeck), fill = NA) +
geom_label(data = condMeans, mapping = aes(x = condition, y = ssd, label = round(ssd, 2)), hjust = 1.5, vjust = 1.5) +
labs(
x = 'Critical Deck Intensity',
y = 'Proportion Selections of Safe Deck',
caption = 'Red diamonds reflect condition means; Horizontal bars in box plots reflect medians.'
) +
scale_x_discrete(labels = c('Easy Moderate', 'Easy Extreme', 'Hard Moderate', 'Hard Extreme')) +
theme_bw()
d %>%
group_by(subject) %>%
summarize(ssd = mean(selSafeDeck)) %>%
ggplot(aes(x = subject, y = ssd)) +
geom_point(shape = 17) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
coord_flip() +
theme_bw()
d %>%
group_by(subject) %>%
summarize(ssd = mean(selSafeDeck)) %>%
ggplot(aes(x = subject, y = ssd)) +
geom_point(shape = 17) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
coord_flip() +
labs(
x = 'Proportion Selection of Safe Deck',
y = 'Subject'
) +
theme_bw() +
theme(axis.text.x = element_blank())
d %>%
group_by(subject) %>%
summarize(ssd = mean(selSafeDeck)) %>%
ggplot(aes(x = subject, y = ssd)) +
geom_point(shape = 17) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
coord_flip() +
labs(
x = 'Subject',
y = 'Proportion Selection of Safe Deck'
) +
theme_bw() +
theme(axis.text.x = element_blank())
d %>%
group_by(subject) %>%
summarize(ssd = mean(selSafeDeck)) %>%
ggplot(aes(x = subject, y = ssd)) +
geom_point(shape = 17) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
coord_flip() +
labs(
x = 'Subject',
y = 'Proportion Selection of Safe Deck'
) +
theme_bw() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid = element_blank())
condMeans <- d %>%
group_by(subject, difficulty) %>%
summarize(ssd = mean(selSafeDeck)) %>%
group_by(difficulty) %>%
summarize(ssd = mean(ssd))
uSubjects <- unique(d$subject)
subjectCode <- data.frame(subject = uSubjects)
subjectCode$subjectLabel <- factor('', levels = c('Supports prospect theory', 'Opposite prospect theory', 'No difference'))
for (i in uSubjects) {
t <- d[d$subject == i, c('difficulty', 'selSafeDeck')]
mns <- c(e = mean(t[t$difficulty == 'Easier than Reference',]$selSafeDeck), h = mean(t[t$difficulty == 'Harder than Reference',]$selSafeDeck))
if (mns[1] != mns[2]) {
m1 <- t.test(t[t$difficulty == 'Easier than Reference',]$selSafeDeck, t[t$difficulty == 'Harder than Reference',]$selSafeDeck, within = TRUE)
} else {
subjectCode[subjectCode$subject == i,]$subjectLabel <- 'No difference'
next
}
if (mns['e'] > mns['h'] & m1$p.value < .05) {
subjectCode[subjectCode$subject == i,]$subjectLabel <- 'Supports prospect theory'
} else if (mns['e'] < mns['h'] & m1$p.value < .05) {
subjectCode[subjectCode$subject == i,]$subjectLabel <- 'Opposite prospect theory'
} else {
subjectCode[subjectCode$subject == i,]$subjectLabel <- 'No difference'
}
}
d <- subjectCode %>%
inner_join(d)
d %>%
group_by(subject, subjectLabel) %>%
summarize(count = n()) %>%
group_by(subjectLabel) %>%
summarize(count = n())
d %>%
group_by(subject, difficulty) %>%
summarize(ssd = mean(selSafeDeck), subjectLabel = unique(subjectLabel)) %>%
ggplot(aes(x = difficulty, y = ssd)) +
geom_violin(fill = NA, alpha = 0.2) +
geom_boxplot(fill = NA, alpha = 0.3) +
geom_jitter(alpha = 0.4, width = .05, height = 0) +
geom_line(aes(group = subject, color = subjectLabel), linetype = 'dashed', alpha = .3) +
geom_point(data = condMeans, aes(x = difficulty, y = ssd), size = 4, shape = 23, color = 'black', fill = 'red') +
geom_hline(yintercept = 0.5, linetype = 'dotted') +
geom_label(data = condMeans, aes(x = difficulty, y = ssd, label = round(ssd, 2)), hjust = 1.5, vjust = 1.5) +
scale_color_manual(name = 'Subject Label', values = c(`Supports prospect theory` = 'dark green', `Opposite prospect theory` = 'red', `No difference` = 'black')) +
ylim(0,1) +
theme_bw() +
labs(
title = 'Selection of safe deck by difficulty and subject',
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Red diamond reflects condition means. Horizontal, black, solid lines reflect medians.'
) +
theme(legend.position = 'bottom')
subjectCode
condMeans <- d %>%
group_by(subject, difficulty) %>%
summarize(ssd = mean(selSafeDeck)) %>%
group_by(difficulty) %>%
summarize(ssd = mean(ssd))
# uSubjects <- unique(d$subject)
#
# subjectCode <- data.frame(subject = uSubjects)
# subjectCode$subjectLabel <- factor('', levels = c('Supports prospect theory', 'Opposite prospect theory', 'No difference'))
#
# for (i in uSubjects) {
#   t <- d[d$subject == i, c('difficulty', 'selSafeDeck')]
#   mns <- c(e = mean(t[t$difficulty == 'Easier than Reference',]$selSafeDeck), h = mean(t[t$difficulty == 'Harder than Reference',]$selSafeDeck))
#
#
#   if (mns[1] != mns[2]) {
#     m1 <- t.test(t[t$difficulty == 'Easier than Reference',]$selSafeDeck, t[t$difficulty == 'Harder than Reference',]$selSafeDeck, within = TRUE)
#   } else {
#     subjectCode[subjectCode$subject == i,]$subjectLabel <- 'No difference'
#     next
#   }
#
#   if (mns['e'] > mns['h'] & m1$p.value < .05) {
#     subjectCode[subjectCode$subject == i,]$subjectLabel <- 'Supports prospect theory'
#   } else if (mns['e'] < mns['h'] & m1$p.value < .05) {
#     subjectCode[subjectCode$subject == i,]$subjectLabel <- 'Opposite prospect theory'
#   } else {
#     subjectCode[subjectCode$subject == i,]$subjectLabel <- 'No difference'
#   }
# }
#
# d <- subjectCode %>%
#   inner_join(d)
#
# d %>%
#   group_by(subject, subjectLabel) %>%
#   summarize(count = n()) %>%
#   group_by(subjectLabel) %>%
#   summarize(count = n())
d %>%
group_by(subject, difficulty) %>%
summarize(ssd = mean(selSafeDeck)) %>%
ggplot(aes(x = difficulty, y = ssd)) +
geom_violin(fill = NA, alpha = 0.2) +
geom_boxplot(fill = NA, alpha = 0.3) +
geom_jitter(alpha = 0.4, width = .05, height = 0) +
geom_line(aes(group = subject), linetype = 'dashed', alpha = .3) +
geom_point(data = condMeans, aes(x = difficulty, y = ssd), size = 4, shape = 23, color = 'black', fill = 'red') +
geom_hline(yintercept = 0.5, linetype = 'dotted') +
geom_label(data = condMeans, aes(x = difficulty, y = ssd, label = round(ssd, 2)), hjust = 1.5, vjust = 1.5) +
scale_color_manual(name = 'Subject Label', values = c(`Supports prospect theory` = 'dark green', `Opposite prospect theory` = 'red', `No difference` = 'black')) +
ylim(0,1) +
theme_bw() +
labs(
title = 'Selection of safe deck by difficulty and subject',
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Red diamond reflects condition means. Horizontal, black, solid lines reflect medians.'
) +
theme(legend.position = 'bottom')
ls()
summary(d$difference)
d$differenceE <- ifelse(d$difference == 'Moderate', -0.5, 0.5)
d$difficultyE <- ifelse(d$difference == 'Easier than Reference', -0.5, 0.5)
m1_maximal <- glmer(selSafeDeck ~ differenceE * difficultyE + (1 + difficultyE * differenceE | subject), data = d, family = binomial, control = glmerControl(optimizer = 'bobyqa'))
summary(m1_maximal)
summary(d$difficulty)
summary(d$difficultyE)
d$differenceE <- ifelse(d$difference == 'Moderate', -0.5, 0.5)
d$difficultyE <- ifelse(d$difficulty == 'Easier than Reference', -0.5, 0.5)
m1_maximal <- glmer(selSafeDeck ~ differenceE * difficultyE + (1 + difficultyE * differenceE | subject), data = d, family = binomial, control = glmerControl(optimizer = 'bobyqa'))
summary(m1_maximal)
VarCorr(m1_maximal)
VarCorr(m1_maximal, full = TRUE)
sqrt(3.03853)
AICtab
help(AICtab)
??AICtab
library(bblme)
library('bblme')
install.packages('bblme')
library(dotwhisker)
library(coda)
library(bbmle)
AICtab <- (m1_maximal, m1_mainEffects, nobs = nrow(d))
AICtab(m1_maximal, m1_mainEffects, nobs = nrow(d))
m1_mainEffects <- glmer(selSafeDeck ~ differenceE * difficultyE + (1 + difficultyE + differenceE | subject), data = d, family = binomial, control = glmerControl(optimizer = 'bobyqa'))
AICtab(m1_maximal, m1_mainEffects, nobs = nrow(d))
library(car)
Anova(m1_mainEffects, m1_maximal)
anova(m1_mainEffects, m1_maximal)
m1_noCov <- glmer(selSafeDeck ~ differenceE * difficultyE + (1| subject) + (0 + difficultyE | subject) + (0 + differenceE) , data = d, family = binomial, control = glmerControl(optimizer = 'bobyqa'))
AICtab(m1_noCov, m1_mainEffects, nobs = nrow(d))
anova(m1_noCov, m1_mainEffects)
varCov(m1_noCov)
VarCov(m1_noCov)
varcov(m1_noCov)
VarCorr(m1_noCov)
m1_noDiff <- glmer(selSafeDeck ~ differenceE * difficultyE + (1| subject) + (0 + differenceE) , data = d, family = binomial, control = glmerControl(optimizer = 'bobyqa'))
AICtab(m1_noCov, m1_noDiff, nobs = nrow(d))
anova(m1_noCov, m1_noDiff)
update(m1_noCov, nAGQ = 2)
update(m1_noCov, glmerAGQ = 2)
test <- glmer(selSafeDeck ~ differenceE * difficultyE + (1| subject)  , data = d, family = binomial, control = glmerControl(optimizer = 'bobyqa'), nAGQ = 10)
summary(test)
head(d)
m1_intercept <- glmer(selSafeDeck ~ differenceE * difficultyE + (1 | subject), data = d, family = binomial, control = glmerControl(optimizer = 'bobyqa'))
agqfun <- function(i) {
f <- update(m1_intercept, nAGQ = i)
c(fixef(f), sqrt(unlist(VarCorr(f))))
}
agqvec <- 1:25
agqres <- sapply(agqvec, agqfun)
agqres
data.frame(agqres)
colnames(data.frame(agqres)) <- 1:25
t <- data.frame(agqres)
colnames(t) <- 1:25
t
t %>%
tarNames <- row.names(t)
tarNames
t %>%
mutate(term = tarNames) %>%
gather(agq, estimate, `1`:`25`)
t <- data.frame(agqres)
tarNames <- row.names(t)
tarNames[length(tarNames)] <- 'subjectVar'
t %>%
mutate(term = tarNames) %>%
gather(agq, estimate, `1`:`25`)
t
t <- data.frame(agqres)
tarNames <- row.names(t)
tarNames[length(tarNames)] <- 'subjectVar'
colnames(t) <- 1:25
t %>%
mutate(term = tarNames) %>%
gather(agq, estimate, `1`:`25`)
t <- data.frame(agqres)
tarNames <- c('Intercept', 'Difference', 'Difficulty', 'Interaction', 'RandomIntercept')
colnames(t) <- 1:25
t %>%
mutate(term = tarNames) %>%
gather(agq, estimate, `1`:`25`)
t <- data.frame(agqres)
tarNames <- c('Intercept', 'Difference', 'Difficulty', 'Interaction', 'RandomIntercept')
colnames(t) <- 1:25
t %>%
mutate(term = tarNames) %>%
gather(agq, estimate, `1`:`25`) %>%
ggplot(aes(x = agq, y = estimate)) %>%
geom_line() +
facet_wrap(~term) +
labs(
x = 'Number of adaptive Gauss-Hermite quadrature points',
y = 'Estimate'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
t <- data.frame(agqres)
tarNames <- c('Intercept', 'Difference', 'Difficulty', 'Interaction', 'RandomIntercept')
colnames(t) <- 1:25
t %>%
mutate(term = tarNames) %>%
gather(agq, estimate, `1`:`25`) %>%
ggplot(aes(x = agq, y = estimate)) +
geom_line() +
facet_wrap(~term) +
labs(
x = 'Number of adaptive Gauss-Hermite quadrature points',
y = 'Estimate'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
t <- data.frame(agqres)
tarNames <- c('Intercept', 'Difference', 'Difficulty', 'Interaction', 'RandomIntercept')
colnames(t) <- 1:25
t %>%
mutate(term = tarNames) %>%
gather(agq, estimate, `1`:`25`) %>%
ggplot(aes(x = agq, y = estimate, group = 1)) +
geom_line() +
facet_wrap(~term) +
labs(
x = 'Number of adaptive Gauss-Hermite quadrature points',
y = 'Estimate'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
t %>%
mutate(term = tarNames) %>%
gather(agq, estimate, `1`:`25`) %>%
ggplot(aes(x = agq, y = estimate, group = 1)) +
geom_line() +
facet_wrap(~term, scales = 'free') +
labs(
x = 'Number of adaptive Gauss-Hermite quadrature points',
y = 'Estimate'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
t
agqres
t
t %>%
mutate(term = tarNames) %>%
gather(agq, estimate, `1`:`25`)
t %>%
mutate(term = tarNames) %>%
gather(agq, estimate, `1`:`25`) %>%
ggplot(aes(x = as.numeric(agq), y = estimate, group = 1)) +
geom_line() +
facet_wrap(~term, scales = 'free') +
labs(
x = 'Number of adaptive Gauss-Hermite quadrature points',
y = 'Estimate'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
m1_intercept <- glmer(selSafeDeck ~ differenceE * difficultyE + (1 | subject), data = d, family = binomial, control = glmerControl(optimizer = 'bobyqa'), nAGQ = 25)
summary(m1_intercept)
t
m1_intercept <- glmer(selSafeDeck ~ differenceE * difficultyE + (1 | subject), data = d, family = binomial, control = glmerControl(optimizer = 'bobyqa'), nAGQ = 5)
summary(m1_intercept)
dimnames(agqres) <- list(c("intercept","difference","difficulty",
"both","sd.subject"),agqvec)
agqres
## melt and restore order of parameter labels
m <- transform(melt(agqres),
Var1=factor(Var1,levels=rownames(agqres)))
m
ggplot(m,aes(x=Var2,y=value))+
geom_line()+facet_wrap(~Var1,scale="free",nrow=1)+
labs(x="Number of adaptive Gauss-Hermite\nquadrature points")
q()
