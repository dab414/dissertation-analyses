library(tidyverse)
library(ggExtra)
library(ez)
dst <- read.csv('../../../data/aggregatedChoice.csv')
n <- dst %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
dst
dst <- dst %>%
mutate(difference = factor(difference, levels = levels(difference)[c(2,1)]),
selSafeDeck = ifelse(selectedRiskyDeck == 1, 0, 1))
dst %>%
group_by(subject, difference, difficulty) %>%
summarize(selSafeDeck = mean(selSafeDeck)) %>%
group_by(difference, difficulty) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(n)) %>%
ggplot(aes(x = difficulty, y = ssd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se), position = position_dodge(width = 0.9), width = 0.5) +
labs(
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
ylim(0, 1) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
scale_fill_manual(name = 'Difference', values = c(Moderate = 'light grey', Extreme = 'black')) +
theme_bw()
dst %>%
group_by(subject, difficulty) %>%
summarize(selSafeDeck = mean(selSafeDeck)) %>%
group_by(difficulty) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(n)) %>%
ggplot(aes(x = difficulty, y = ssd)) +
geom_bar(stat = 'identity') +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se), width = 0.5) +
labs(
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
ylim(0,1) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
theme_bw()
condMeans <- dst %>%
group_by(subject, difficulty) %>%
summarize(ssd = mean(selSafeDeck)) %>%
group_by(difficulty) %>%
summarize(ssd = mean(ssd))
uSubjects <- unique(dst$subject)
subjectCode <- data.frame(subject = uSubjects)
subjectCode$subjectLabel <- factor('', levels = c('Supports prospect theory', 'Opposite prospect theory', 'No difference'))
for (i in uSubjects) {
t <- dst[dst$subject == i, c('difficulty', 'selSafeDeck')]
mns <- c(e = mean(t[t$difficulty == 'Easier than Reference',]$selSafeDeck), h = mean(t[t$difficulty == 'Harder than Reference',]$selSafeDeck))
if (mns[1] != mns[2]) {
m1 <- t.test(t[t$difficulty == 'Easier than Reference',]$selSafeDeck, t[t$difficulty == 'Harder than Reference',]$selSafeDeck, within = TRUE)
} else {
subjectCode[subjectCode$subject == i,]$subjectLabel <- 'No difference'
next
}
if (mns['e'] > mns['h'] & m1$p.value < .05) {
subjectCode[subjectCode$subject == i,]$subjectLabel <- 'Supports prospect theory'
} else if (mns['e'] < mns['h'] & m1$p.value < .05) {
subjectCode[subjectCode$subject == i,]$subjectLabel <- 'Opposite prospect theory'
} else {
subjectCode[subjectCode$subject == i,]$subjectLabel <- 'No difference'
}
}
dst <- subjectCode %>%
inner_join(dst)
dst %>%
group_by(subject, subjectLabel) %>%
summarize(count = n()) %>%
group_by(subjectLabel) %>%
summarize(count = n())
dst %>%
group_by(subject, difficulty) %>%
summarize(ssd = mean(selSafeDeck), subjectLabel = unique(subjectLabel)) %>%
ggplot(aes(x = difficulty, y = ssd)) +
geom_violin(fill = NA, alpha = 0.2) +
geom_boxplot(fill = NA, alpha = 0.2) +
geom_point(alpha = 0.4) +
geom_line(aes(group = subject, color = subjectLabel), linetype = 'dashed', alpha = .3) +
geom_point(data = condMeans, aes(x = difficulty, y = ssd), size = 4, shape = 23, color = 'black', fill = 'red') +
geom_hline(yintercept = 0.5, linetype = 'dotted') +
geom_label(data = condMeans, aes(x = difficulty, y = ssd, label = round(ssd, 2)), hjust = 1.5, vjust = 1.5) +
scale_color_manual(name = 'Subject Label', values = c(`Supports prospect theory` = 'dark green', `Opposite prospect theory` = 'red', `No difference` = 'black')) +
ylim(0,1) +
theme_bw() +
labs(
title = 'Selection of safe deck by difficulty and subject',
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Red diamond reflects condition means. Horizontal, black, solid lines reflect medians.'
) +
theme(legend.position = 'bottom')
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = selSafeDeck, data = dst, detailed = TRUE)
data.frame(m1$ANOVA)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = selSafeDeck, data = dst, detailed = TRUE)
m1$ANOVA$n2p <- m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)
m1$ANOVA$p <- round(m1$ANOVA$p, 3)
data.frame(m1$ANOVA)
head(dst)
dfd <- m1$ANOVA$DFd[4]
ssd <- m1$ANOVA$SSd[4]
mse <- ssd / dfd
m2 <- ezANOVA(wid = subject, within = difficulty, dv = selSafeDeck, data = dst[dst$difference == 'Extreme',], detailed = TRUE)
dfn <- m2$ANOVA$DFn[2]
ssn <- m2$ANOVA$SSn[2]
msn <- ssn / dfn
f_value <- msn / msd
dfd <- m1$ANOVA$DFd[4]
ssd <- m1$ANOVA$SSd[4]
mse <- ssd / dfd
m2 <- ezANOVA(wid = subject, within = difficulty, dv = selSafeDeck, data = dst[dst$difference == 'Extreme',], detailed = TRUE)
dfn <- m2$ANOVA$DFn[2]
ssn <- m2$ANOVA$SSn[2]
msn <- ssn / dfn
f_value <- msn / mse
p_value <- pf(f_value, dfn, dfd, lower.tail = FALSE)
n2p <- ssn / (ssn + ssd)
print('Simple effect of difficulty within the "Extreme" Difference condition')
print('F(', dfn, ', ', dfd, ') = ', round(f_value, 2), ', p = ', round(p_value, 2), ', n2p = ', round(n2p, 2), '.', sep = '')
print(paste('F(', dfn, ', ', dfd, ') = ', round(f_value, 2), ', p = ', round(p_value, 2), ', n2p = ', round(n2p, 2), '.', sep = ''))
dfd <- m1$ANOVA$DFd[4]
ssd <- m1$ANOVA$SSd[4]
mse <- ssd / dfd
m2 <- ezANOVA(wid = subject, within = difficulty, dv = selSafeDeck, data = dst[dst$difference == 'Extreme',], detailed = TRUE)
dfn <- m2$ANOVA$DFn[2]
ssn <- m2$ANOVA$SSn[2]
msn <- ssn / dfn
f_value <- msn / mse
p_value <- pf(f_value, dfn, dfd, lower.tail = FALSE)
n2p <- ssn / (ssn + ssd)
print('Simple effect of difficulty within the "Extreme" Difference condition')
print(paste('F(', dfn, ', ', dfd, ') = ', round(f_value, 2), ', p = ', round(p_value, 2), ', n2p = ', round(n2p, 2), '.', sep = ''))
dstReduce <- dst %>%
filter(difference == 'Extreme')
condMeans <- dstReduce %>%
filter(difference == 'Extreme') %>%
group_by(subject, difficulty) %>%
summarize(selSafeDeck = mean(selSafeDeck)) %>%
group_by(difficulty) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N))
dstReduce <- dst %>%
filter(difference == 'Extreme')
condMeans <- dstReduce %>%
filter(difference == 'Extreme') %>%
group_by(subject, difficulty) %>%
summarize(selSafeDeck = mean(selSafeDeck)) %>%
group_by(difficulty) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N))
library(tidyverse)
library(ggExtra)
library(ez)
dst <- read.csv('../../../data/aggregatedChoice.csv')
N <- dst %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
dst
dst <- dst %>%
mutate(difference = factor(difference, levels = levels(difference)[c(2,1)]),
selSafeDeck = ifelse(selectedRiskyDeck == 1, 0, 1))
dst %>%
group_by(subject, difference, difficulty) %>%
summarize(selSafeDeck = mean(selSafeDeck)) %>%
group_by(difference, difficulty) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N)) %>%
ggplot(aes(x = difficulty, y = ssd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se), position = position_dodge(width = 0.9), width = 0.5) +
labs(
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
ylim(0, 1) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
scale_fill_manual(name = 'Difference', values = c(Moderate = 'light grey', Extreme = 'black')) +
theme_bw()
dst %>%
group_by(subject, difficulty) %>%
summarize(selSafeDeck = mean(selSafeDeck)) %>%
group_by(difficulty) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N)) %>%
ggplot(aes(x = difficulty, y = ssd)) +
geom_bar(stat = 'identity') +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se), width = 0.5) +
labs(
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
ylim(0,1) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
theme_bw()
condMeans <- dst %>%
group_by(subject, difficulty) %>%
summarize(ssd = mean(selSafeDeck)) %>%
group_by(difficulty) %>%
summarize(ssd = mean(ssd))
uSubjects <- unique(dst$subject)
subjectCode <- data.frame(subject = uSubjects)
subjectCode$subjectLabel <- factor('', levels = c('Supports prospect theory', 'Opposite prospect theory', 'No difference'))
for (i in uSubjects) {
t <- dst[dst$subject == i, c('difficulty', 'selSafeDeck')]
mns <- c(e = mean(t[t$difficulty == 'Easier than Reference',]$selSafeDeck), h = mean(t[t$difficulty == 'Harder than Reference',]$selSafeDeck))
if (mns[1] != mns[2]) {
m1 <- t.test(t[t$difficulty == 'Easier than Reference',]$selSafeDeck, t[t$difficulty == 'Harder than Reference',]$selSafeDeck, within = TRUE)
} else {
subjectCode[subjectCode$subject == i,]$subjectLabel <- 'No difference'
next
}
if (mns['e'] > mns['h'] & m1$p.value < .05) {
subjectCode[subjectCode$subject == i,]$subjectLabel <- 'Supports prospect theory'
} else if (mns['e'] < mns['h'] & m1$p.value < .05) {
subjectCode[subjectCode$subject == i,]$subjectLabel <- 'Opposite prospect theory'
} else {
subjectCode[subjectCode$subject == i,]$subjectLabel <- 'No difference'
}
}
dst <- subjectCode %>%
inner_join(dst)
dst %>%
group_by(subject, subjectLabel) %>%
summarize(count = n()) %>%
group_by(subjectLabel) %>%
summarize(count = n())
dst %>%
group_by(subject, difficulty) %>%
summarize(ssd = mean(selSafeDeck), subjectLabel = unique(subjectLabel)) %>%
ggplot(aes(x = difficulty, y = ssd)) +
geom_violin(fill = NA, alpha = 0.2) +
geom_boxplot(fill = NA, alpha = 0.2) +
geom_point(alpha = 0.4) +
geom_line(aes(group = subject, color = subjectLabel), linetype = 'dashed', alpha = .3) +
geom_point(data = condMeans, aes(x = difficulty, y = ssd), size = 4, shape = 23, color = 'black', fill = 'red') +
geom_hline(yintercept = 0.5, linetype = 'dotted') +
geom_label(data = condMeans, aes(x = difficulty, y = ssd, label = round(ssd, 2)), hjust = 1.5, vjust = 1.5) +
scale_color_manual(name = 'Subject Label', values = c(`Supports prospect theory` = 'dark green', `Opposite prospect theory` = 'red', `No difference` = 'black')) +
ylim(0,1) +
theme_bw() +
labs(
title = 'Selection of safe deck by difficulty and subject',
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Red diamond reflects condition means. Horizontal, black, solid lines reflect medians.'
) +
theme(legend.position = 'bottom')
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = selSafeDeck, data = dst, detailed = TRUE)
m1$ANOVA$n2p <- m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)
m1$ANOVA$p <- round(m1$ANOVA$p, 3)
data.frame(m1$ANOVA)
dfd <- m1$ANOVA$DFd[4]
ssd <- m1$ANOVA$SSd[4]
mse <- ssd / dfd
m2 <- ezANOVA(wid = subject, within = difficulty, dv = selSafeDeck, data = dst[dst$difference == 'Extreme',], detailed = TRUE)
dfn <- m2$ANOVA$DFn[2]
ssn <- m2$ANOVA$SSn[2]
msn <- ssn / dfn
f_value <- msn / mse
p_value <- pf(f_value, dfn, dfd, lower.tail = FALSE)
n2p <- ssn / (ssn + ssd)
print('Simple effect of difficulty within the "Extreme" Difference condition')
print(paste('F(', dfn, ', ', dfd, ') = ', round(f_value, 2), ', p = ', round(p_value, 2), ', n2p = ', round(n2p, 2), '.', sep = ''))
dstReduce <- dst %>%
filter(difference == 'Extreme')
condMeans <- dstReduce %>%
filter(difference == 'Extreme') %>%
group_by(subject, difficulty) %>%
summarize(selSafeDeck = mean(selSafeDeck)) %>%
group_by(difficulty) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N))
uSubjects <- unique(dstReduce$subject)
subjectCode <- data.frame(subject = uSubjects)
subjectCode$subjectLabel <- factor('', levels = c('Supports prospect theory', 'Opposite prospect theory', 'No difference'))
for (i in uSubjects) {
t <- dstReduce[dstReduce$subject == i, c('difficulty', 'selSafeDeck')]
mns <- c(e = mean(t[t$difficulty == 'Easier than Reference',]$selSafeDeck), h = mean(t[t$difficulty == 'Harder than Reference',]$selSafeDeck))
if (mns[1] != mns[2]) {
m1 <- t.test(t[t$difficulty == 'Easier than Reference',]$selSafeDeck, t[t$difficulty == 'Harder than Reference',]$selSafeDeck, within = TRUE)
} else {
subjectCode[subjectCode$subject == i,]$subjectLabel <- 'No difference'
next
}
if (mns['e'] > mns['h'] & m1$p.value < .05) {
subjectCode[subjectCode$subject == i,]$subjectLabel <- 'Supports prospect theory'
} else if (mns['e'] < mns['h'] & m1$p.value < .05) {
subjectCode[subjectCode$subject == i,]$subjectLabel <- 'Opposite prospect theory'
} else {
subjectCode[subjectCode$subject == i,]$subjectLabel <- 'No difference'
}
}
dstReduce <- subjectCode %>%
inner_join(dstReduce)
dstReduce %>%
group_by(subject, difficulty) %>%
summarize(ssd = mean(selSafeDeck), subjectLabel = unique(subjectLabel)) %>%
ggplot(aes(x = difficulty, y = ssd)) +
geom_violin(fill = NA, alpha = 0.2) +
geom_boxplot(fill = NA, alpha = 0.2) +
geom_point(alpha = 0.4) +
geom_line(aes(group = subject, color = subjectLabel), linetype = 'dashed', alpha = .3) +
geom_point(data = condMeans, aes(x = difficulty, y = ssd), size = 4, shape = 23, color = 'black', fill = 'red') +
geom_hline(yintercept = 0.5, linetype = 'dotted') +
geom_label(data = condMeans, aes(x = difficulty, y = ssd, label = round(ssd, 2)), hjust = 1.5, vjust = 1.5) +
scale_color_manual(name = 'Subject Label', values = c(`Supports prospect theory` = 'dark green', `Opposite prospect theory` = 'red', `No difference` = 'black')) +
ylim(0,1) +
theme_bw() +
labs(
title = 'Selection of safe deck by difficulty and subject',
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Red diamond reflects condition means. Horizontal, black, solid lines reflect medians.'
) +
theme(legend.position = 'bottom')
dstReduce %>%
group_by(subject, difficulty) %>%
summarize(ssd = mean(selSafeDeck), subjectLabel = unique(subjectLabel)) %>%
ggplot(aes(x = difficulty, y = ssd)) +
geom_violin(fill = NA, alpha = 0.2) +
geom_boxplot(fill = NA, alpha = 0.2) +
geom_point(alpha = 0.4) +
geom_line(aes(group = subject, color = subjectLabel), linetype = 'dashed', alpha = .3) +
geom_point(data = condMeans, aes(x = difficulty, y = ssd), size = 4, shape = 23, color = 'black', fill = 'red') +
geom_hline(yintercept = 0.5, linetype = 'dotted') +
geom_label(data = condMeans, aes(x = difficulty, y = ssd, label = round(ssd, 2)), hjust = 1.5, vjust = 1.5) +
scale_color_manual(name = 'Subject Label', values = c(`Supports prospect theory` = 'dark green', `Opposite prospect theory` = 'red', `No difference` = 'black')) +
ylim(0,1) +
theme_bw() +
labs(
title = 'Selection of safe deck by difficulty and subject for Extreme difference only',
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Red diamond reflects condition means. Horizontal, black, solid lines reflect medians.'
) +
theme(legend.position = 'bottom')
library(tidyverse)
library(ggExtra)
library(ez)
dst <- read.csv('../../../data/aggregatedChoice.csv')
N <- dst %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
dst
dst <- dst %>%
mutate(difference = factor(difference, levels = levels(difference)[c(2,1)]),
selSafeDeck = ifelse(selectedRiskyDeck == 1, 0, 1))
dst %>%
group_by(subject, difference, difficulty) %>%
summarize(selSafeDeck = mean(selSafeDeck)) %>%
group_by(difference, difficulty) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(N))
q()
