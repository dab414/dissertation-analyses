x = 'Trial',
y = 'Response Time (ms)',
caption = 'Each line represents a different subject'
) +
theme_bw()
rapidFire %>%
select(subject, choiceRt, choiceTrial) %>%
rename(rfChoice = choiceRt) %>%
inner_join(dst) %>%
select(subject, rfChoice, choiceRt, choiceTrial) %>%
rename(dstChoice = choiceRt) %>%
gather(phase, rt, dstChoice, rfChoice) %>%
mutate(subject = factor(subject)) %>%
ggplot(aes(x = choiceTrial, y = rt, group = subject)) +
geom_line() +
xlim(0, 40)+
facet_wrap(~phase) +
labs(
title = 'Choice response time over trial across the two phases',
subtitle = 'Are people starting off slower and getting faster?',
x = 'Trial',
y = 'Response Time (ms)',
caption = 'Each line represents a different subject'
) +
theme_bw()
rapidFire %>%
select(subject, choiceRt, choiceTrial) %>%
rename(rfChoice = choiceRt) %>%
inner_join(dst, by = subject) %>%
select(subject, rfChoice, choiceRt, choiceTrial) %>%
rename(dstChoice = choiceRt) %>%
gather(phase, rt, dstChoice, rfChoice) %>%
mutate(subject = factor(subject)) %>%
ggplot(aes(x = choiceTrial, y = rt, group = subject)) +
geom_line() +
xlim(0, 40)+
facet_wrap(~phase) +
labs(
title = 'Choice response time over trial across the two phases',
subtitle = 'Are people starting off slower and getting faster?',
x = 'Trial',
y = 'Response Time (ms)',
caption = 'Each line represents a different subject'
) +
theme_bw()
rapidFire %>%
select(subject, choiceRt, choiceTrial) %>%
rename(rfChoice = choiceRt) %>%
inner_join(dst, by = 'subject') %>%
select(subject, rfChoice, choiceRt, choiceTrial) %>%
rename(dstChoice = choiceRt) %>%
gather(phase, rt, dstChoice, rfChoice) %>%
mutate(subject = factor(subject)) %>%
ggplot(aes(x = choiceTrial, y = rt, group = subject)) +
geom_line() +
xlim(0, 40)+
facet_wrap(~phase) +
labs(
title = 'Choice response time over trial across the two phases',
subtitle = 'Are people starting off slower and getting faster?',
x = 'Trial',
y = 'Response Time (ms)',
caption = 'Each line represents a different subject'
) +
theme_bw()
rapidFire %>%
select(subject, choiceRt, choiceTrial) %>%
rename(rfChoice = choiceRt, trial = choiceTrial) %>%
inner_join(dst) %>%
select(subject, rfChoice, choiceRt, choiceTrial, trial) %>%
rename(dstChoice = choiceRt) %>%
gather(phase, rt, dstChoice, rfChoice) %>%
mutate(subject = factor(subject)) %>%
ggplot(aes(x = choiceTrial, y = rt, group = subject)) +
geom_line() +
xlim(0, 40)+
facet_wrap(~phase) +
labs(
title = 'Choice response time over trial across the two phases',
subtitle = 'Are people starting off slower and getting faster?',
x = 'Trial',
y = 'Response Time (ms)',
caption = 'Each line represents a different subject'
) +
theme_bw()
rapidFire %>%
select(subject, choiceRt, choiceTrial) %>%
rename(rfChoice = choiceRt, trial = choiceTrial) %>%
inner_join(dst) %>%
select(subject, rfChoice, choiceRt, choiceTrial, trial) %>%
rename(dstChoice = choiceRt) %>%
gather(phase, rt, dstChoice, rfChoice) %>%
mutate(subject = factor(subject)) %>%
ggplot(aes(x = trial, y = rt, group = subject)) +
geom_line() +
xlim(0, 40)+
facet_wrap(~phase) +
labs(
title = 'Choice response time over trial across the two phases',
subtitle = 'Are people starting off slower and getting faster?',
x = 'Trial',
y = 'Response Time (ms)',
caption = 'Each line represents a different subject'
) +
theme_bw()
rapidFire %>%
select(subject, choiceRt, choiceTrial) %>%
mutate(phase = 'rapidFire')
dst %>%
select(subject, choiceRt, choiceTrial) %>%
mutate(phase = 'rapidFire')
plotData <- rbind(rapidFire, dst)
a <- rapidFire %>%
select(subject, choiceRt, choiceTrial) %>%
mutate(phase = 'rapidFire')
b <- dst %>%
select(subject, choiceRt, choiceTrial) %>%
mutate(phase = 'dst')
plotData <- rbind(a, b)
plotData %>%
ggplot(aes(x = choiceTrial, y = choiceRt, group = subject)) +
geom_line() +
xlim(0, 40)+
facet_wrap(~phase) +
labs(
title = 'Choice response time over trial across the two phases',
subtitle = 'Are people starting off slower and getting faster?',
x = 'Trial',
y = 'Response Time (ms)',
caption = 'Each line represents a different subject'
) +
theme_bw()
a <- rapidFire %>%
select(subject, choiceRt, choiceTrial) %>%
mutate(phase = 'Rapid Fire Phase')
b <- dst %>%
select(subject, choiceRt, choiceTrial) %>%
mutate(phase = 'Demand Selection Phase')
plotData <- rbind(a, b)
plotData %>%
ggplot(aes(x = choiceTrial, y = choiceRt, group = subject)) +
geom_line() +
xlim(0, 40)+
facet_wrap(~phase) +
labs(
title = 'Choice response time over trial across the two phases',
subtitle = 'Are people starting off slower and getting faster?',
x = 'Trial',
y = 'Response Time (ms)',
caption = 'Each line represents a different subject'
) +
theme_bw() +
theme(srip.background = element_rect(fill = 'white', color = 'black'))
plotData %>%
ggplot(aes(x = choiceTrial, y = choiceRt, group = subject)) +
geom_line() +
xlim(0, 40)+
facet_wrap(~phase) +
labs(
title = 'Choice response time over trial across the two phases',
subtitle = 'Are people starting off slower and getting faster?',
x = 'Trial',
y = 'Response Time (ms)',
caption = 'Each line represents a different subject'
) +
theme_bw() +
theme(strip.background = element_rect(fill = 'white', color = 'black'))
a <- rapidFire %>%
select(subject, choiceRt, choiceTrial) %>%
mutate(phase = 'Rapid Fire Phase')
b <- dst %>%
select(subject, choiceRt, choiceTrial) %>%
mutate(phase = 'Demand Selection Phase')
plotData <- rbind(a, b)
plotData %>%
ggplot(aes(x = choiceTrial, y = choiceRt, group = subject)) +
geom_line() +
xlim(0, 40)+
facet_wrap(~phase) +
labs(
title = 'Choice response time over trial across the two choice phases',
subtitle = 'Are people starting off slower and getting faster?',
x = 'Trial',
y = 'Response Time (ms)',
caption = 'Each line represents a different subject'
) +
theme_bw() +
theme(strip.background = element_rect(fill = 'white', color = 'black'))
demo
q()
library(tidyverse)
library(data.table)
library(ggridges)
dst <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
rapidFire <- read.csv('../../data/rapidFire.csv')
n <- nrow(demo)
dst
head(dst)
pracCued <- read.csv('../../data/pracCued.csv')
head(demo)
demo
head(dst)
dstTrim <- dst %>%
group_by(subject) %>%
summarize(phaseRunTimeMins = max(phaseRunTimeMins),
cycleThreshold = max(choiceTrial))
dstTrim
demo
dstTrim <- dst %>%
group_by(subject) %>%
summarize(dstRunTimeMins = max(phaseRunTimeMins),
cycleThreshold = max(choiceTrial))
rapidFireTrim <- rapidFire %>%
group_by(subject) %>%
summarize(rapidFireRunTimeMins = max(phaseRunTimeMins))
pracCuedTrim <- pracCued %>%
group_by(subject) %>%
summarize(pracCuedRunTimeMins = max(phaseRunTimeMins))
dstTrim <- dst %>%
group_by(subject) %>%
summarize(dstRunTimeMins = max(phaseRunTimeMins),
cycleThreshold = max(choiceTrial))
rapidFireTrim <- rapidFire %>%
group_by(subject) %>%
summarize(rapidFireRunTimeMins = max(phaseRunTimeMins))
pracCuedTrim <- pracCued %>%
group_by(subject) %>%
summarize(pracCuedRunTimeMins = max(phaseRunTimeMins))
head(pracCued)
dstTrim <- dst %>%
group_by(subject) %>%
summarize(dstRunTimeMins = max(phaseRunTimeMins),
cycleThreshold = max(choiceTrial))
rapidFireTrim <- rapidFire %>%
group_by(subject) %>%
summarize(rapidFireRunTimeMins = max(phaseRunTimeMins))
pracCuedTrim <- pracCued %>%
group_by(subject) %>%
summarize(pracCuedRunTimeMins = max(runTimeMins))
demoTrim <- demo %>%
select(subject, totalTime_mins)
d <- dst %>%
inner_join(rapidFireTrim) %>%
inner_join(pracCuedTrim) %>%
inner_joind(demoTrim)
dstTrim <- dst %>%
group_by(subject) %>%
summarize(dstRunTimeMins = max(phaseRunTimeMins),
cycleThreshold = max(choiceTrial))
rapidFireTrim <- rapidFire %>%
group_by(subject) %>%
summarize(rapidFireRunTimeMins = max(phaseRunTimeMins))
pracCuedTrim <- pracCued %>%
group_by(subject) %>%
summarize(pracCuedRunTimeMins = max(runTimeMins))
demoTrim <- demo %>%
select(subject, totalTime_mins)
d <- dst %>%
inner_join(rapidFireTrim) %>%
inner_join(pracCuedTrim) %>%
inner_join(demoTrim)
d
dstTrim <- dst %>%
group_by(subject) %>%
summarize(dstRunTimeMins = max(phaseRunTimeMins),
cycleThreshold = max(choiceTrial))
rapidFireTrim <- rapidFire %>%
group_by(subject) %>%
summarize(rapidFireRunTimeMins = max(phaseRunTimeMins))
pracCuedTrim <- pracCued %>%
group_by(subject) %>%
summarize(pracCuedRunTimeMins = max(runTimeMins))
demoTrim <- demo %>%
select(subject, totalTime_mins)
d <- dstTrim %>%
inner_join(rapidFireTrim) %>%
inner_join(pracCuedTrim) %>%
inner_join(demoTrim)
d
dstTrim <- dst %>%
group_by(subject) %>%
summarize(dstRunTimeMins = max(phaseRunTimeMins),
cycleThreshold = max(choiceTrial))
rapidFireTrim <- rapidFire %>%
group_by(subject) %>%
summarize(rapidFireRunTimeMins = max(phaseRunTimeMins))
pracCuedTrim <- pracCued %>%
group_by(subject) %>%
summarize(pracCuedRunTimeMins = max(runTimeMins))
demoTrim <- demo %>%
select(subject, totalTime_mins)
d <- dstTrim %>%
inner_join(rapidFireTrim) %>%
inner_join(pracCuedTrim) %>%
inner_join(demoTrim)
d
library(tidyverse)
library(data.table)
library(ggridges)
dst <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
rapidFire <- read.csv('../../data/rapidFire.csv')
pracCued <- read.csv('../../data/pracCued.csv')
n <- nrow(demo)
dst
dstTrim <- dst %>%
group_by(subject) %>%
summarize(dstRunTimeMins = max(phaseRunTimeMins),
cycleThreshold = max(choiceTrial))
rapidFireTrim <- rapidFire %>%
group_by(subject) %>%
summarize(rapidFireRunTimeMins = max(phaseRunTimeMins))
pracCuedTrim <- pracCued %>%
group_by(subject) %>%
summarize(pracCuedRunTimeMins = max(runTimeMins))
demoTrim <- demo %>%
select(subject, totalTime_mins)
d <- dstTrim %>%
inner_join(rapidFireTrim) %>%
inner_join(pracCuedTrim) %>%
inner_join(demoTrim)
d
badSubjectsList <- demo[demo$vision == 'impaired',]$subject
badSubjects <- data.frame(subject = badSubjectsList, reason = rep('Vision impaired', length(badSubjectsList)))
badSubjectsList <- dst %>%
group_by(subject) %>%
summarize(error = mean(error))
badSubjectsList %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey', bins = 10) +
theme_bw() +
xlab('Mean Error Rates')
badSubjectsList <- demo[demo$vision == 'impaired',]$subject
badSubjects <- data.frame(subject = badSubjectsList, reason = rep('Vision impaired', length(badSubjectsList)))
badSubjectsList <- dst %>%
group_by(subject) %>%
summarize(error = mean(error))
bins <- 30
if (n < 10) {
bins <- 10
}
badSubjectsList %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey', bins = bins) +
theme_bw() +
xlab('Mean Error Rates')
badSubjectsList <- demo[demo$vision == 'impaired',]$subject
badSubjects <- data.frame(subject = badSubjectsList, reason = rep('Vision impaired', length(badSubjectsList)))
badSubjectsList <- dst %>%
group_by(subject) %>%
summarize(error = mean(error))
badSubjectsList %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey', bins = ifelse(n < 10, 10, 30)) +
theme_bw() +
xlab('Mean Error Rates')
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
dst %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
labs(caption = 'Red dashed lines represent the HIT rejection criteria') +
theme_bw() +
theme(legend.position = 'bottom') +
geom_vline(xintercept = 0.35, linetype = 'dashed', color = 'red') +
geom_hline(yintercept = 400, linetype = 'dashed', color = 'red')
library(tidyverse)
library(data.table)
library(ggridges)
dst <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
rapidFire <- read.csv('../../data/rapidFire.csv')
pracCued <- read.csv('../../data/pracCued.csv')
n <- nrow(demo)
dst
dstTrim <- dst %>%
group_by(subject) %>%
summarize(dstRunTimeMins = max(phaseRunTimeMins),
cycleThreshold = max(choiceTrial))
rapidFireTrim <- rapidFire %>%
group_by(subject) %>%
summarize(rapidFireRunTimeMins = max(phaseRunTimeMins))
pracCuedTrim <- pracCued %>%
group_by(subject) %>%
summarize(pracCuedRunTimeMins = max(runTimeMins))
demoTrim <- demo %>%
select(subject, totalTime_mins)
d <- dstTrim %>%
inner_join(rapidFireTrim) %>%
inner_join(pracCuedTrim) %>%
inner_join(demoTrim)
d
badSubjectsList <- demo[demo$vision == 'impaired',]$subject
badSubjects <- data.frame(subject = badSubjectsList, reason = rep('Vision impaired', length(badSubjectsList)))
badSubjectsList <- dst %>%
group_by(subject) %>%
summarize(error = mean(error))
badSubjectsList %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey', bins = ifelse(n < 10, 10, 30)) +
theme_bw() +
xlab('Mean Error Rates')
badSubjectsList <- badSubjectsList[badSubjectsList$error > .15,]$subject
badSubjects <- rbind(badSubjects, data.frame(subject = badSubjectsList, reason = rep('Error rate higher than 15%', length(badSubjectsList))))
badSubjects
good <- dst %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error < .35)
bad <- dst %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error > .35)
good
bad
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
dst %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
labs(caption = 'Red dashed lines represent the HIT rejection criteria') +d
head(rejectList)
if (rejectList) {}
if (rejectList) {
print('yes')
}
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
rejectList <- ifelse(nrow(rejectList > 0, rejectList, -99))
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
rejectList <- ifelse(nrow(rejectList > 0), rejectList, -99)
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
rejectList <- ifelse(nrow(rejectList) > 0, rejectList, -99)
dst %>%
mutate(isBot = ifelse(subject %in% rejectList$subject, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
labs(caption = 'Red dashed lines represent the HIT rejection criteria') +d
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
rejectList <- ifelse(nrow(rejectList) > 0, rejectList$subject, -99)
dst %>%
mutate(isBot = ifelse(subject %in% rejectList, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
labs(caption = 'Red dashed lines represent the HIT rejection criteria') +d
rejectList
summary(dst$subject)
dst$subject %in% rejectList
dst %>%
mutate(isBot = ifelse(subject %in% rejectList, 'Bot', 'Human'))
dst %>%
mutate(isBot = ifelse(subject %in% rejectList, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot))
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
rejectList <- ifelse(nrow(rejectList) > 0, rejectList$subject, -99)
dst %>%
mutate(isBot = ifelse(subject %in% rejectList, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
labs(caption = 'Red dashed lines represent the HIT rejection criteria') +d
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
rejectList <- ifelse(nrow(rejectList) > 0, rejectList$subject, -99)
dst %>%
mutate(isBot = ifelse(subject %in% rejectList, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
labs(caption = 'Red dashed lines represent the HIT rejection criteria') +
theme_bw() +
theme(legend.position = 'bottom') +
geom_vline(xintercept = 0.35, linetype = 'dashed', color = 'red') +
geom_hline(yintercept = 400, linetype = 'dashed', color = 'red')
q()
