ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
labs(caption = 'Red dashed lines represent the HIT rejection criteria') +
theme_bw() +
theme(legend.position = 'bottom') +
geom_vline(xintercept = 0.35, linetype = 'dashed', color = 'red') +
geom_hline(yintercept = 400, linetype = 'dashed', color = 'red')
print(paste('Number of rows before dropping bad subjects:', nrow(dst)))
dst <- dst[!(dst$subject %in% badSubjects$subject),]
print(paste('Number of rows after dropping bad subjects:', nrow(dst)))
demo <- demo[!(demo$subject %in% badSubjects$subject),]
rapidFire <- rapidFire[!(rapidFire$subject %in% badSubjects$subject),]
dst %>%
group_by(subject) %>%
summarize(error = mean(error)) %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey') +
theme_bw() +
xlab('Error Rate')
initialRows <- nrow(dst)
print(paste('Number of rows before removing trials with RTs longer than 10 s:', initialRows))
dst <- dst %>%
filter(cuedRt < 10000, choiceRt < 10000)
print(paste('Number of rows after removing trials with RTs longer than 10 s:', nrow(dst)))
rapidFire <- rapidFire %>%
filter(choiceRt < 10000)
badTrials <- data.frame('Data Dropped' = round(1 - (nrow(dst) / initialRows), 2), Reason = 'Trials longer than 10 s')
badTrials
## choice first
initialRows <- nrow(dst)
print(paste('Number of rows before removing trials where choices exceeded participant-wise choice RT cutoffs:', initialRows))
dst <- dst %>%
group_by(subject) %>%
summarize(meanChoiceRt = mean(choiceRt), sdChoiceRt = sd(choiceRt)) %>%
inner_join(dst) %>%
mutate(badChoice = ifelse(choiceRt <= meanChoiceRt - 2 * sdChoiceRt | choiceRt > meanChoiceRt + 2 * sdChoiceRt, 1, 0)) %>%
filter(badChoice == 0) %>%
select(-badChoice, meanChoiceRt, sdChoiceRt)
rapidFire <- rapidFire %>%
group_by(subject) %>%
summarize(meanChoiceRt = mean(choiceRt), sdChoiceRt = sd(choiceRt)) %>%
inner_join(rapidFire) %>%
mutate(badChoice = ifelse(choiceRt <= meanChoiceRt - 2 * sdChoiceRt | choiceRt > meanChoiceRt + 2 * sdChoiceRt, 1, 0)) %>%
filter(badChoice == 0) %>%
select(-badChoice, meanChoiceRt, sdChoiceRt)
print(paste('Number of rows before removing trials where choices exceeded participant-wise choice RT cutoffs:', nrow(dst)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(dst) / initialRows), 2), Reason = 'Choice trials with RTs more extreme than two SDs beyond participant-wise means'))
badTrials
## now for cued responses
initialRows <- nrow(dst)
print(paste('Number of rows before removing trials where cued responses exceeded participant-wise cued RT cutoffs:', initialRows))
dst <- dst %>%
group_by(subject) %>%
summarize(meancuedRt = mean(cuedRt), sdcuedRt = sd(cuedRt)) %>%
inner_join(dst) %>%
mutate(badcued = ifelse(cuedRt <= meancuedRt - 2 * sdcuedRt | cuedRt > meancuedRt + 2 * sdcuedRt, 1, 0)) %>%
filter(badcued == 0) %>%
select(-badcued)
print(paste('Number of rows before removing trials where cued responses exceeded participant-wise cued RT cutoffs:', nrow(dst)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(dst) / initialRows), 2), Reason = 'Cued trials with RTs more extreme than two SDs beyond participant-wise means'))
badTrials
write.csv(dst, '../../data/dstCleanErrors.csv', row.names = FALSE)
initialRows <- nrow(dst)
print(paste('Number of rows before removing error trials and trials following error trials :', initialRows))
dst <- dst %>%
mutate(errorTrim = ifelse(error | shift(error), 1, 0)) %>%
filter(errorTrim == 0)
print(paste('Number of rows before removing error trials and trials following error trials :', nrow(dst)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(dst) / initialRows), 2), Reason = 'Trimming error trials and trials following error trials'))
badTrials
write.csv(dst, '../../data/dstClean.csv', row.names = FALSE)
write.csv(demo, '../../data/demoClean.csv', row.names = FALSE)
write.csv(rapidFire, '../../data/rapidFireClean.csv', row.names = FALSE)
n <- dst %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
m1 <- glmer(selSafeDeck ~ difficulty + (1 + difficulty | subject), data = dst, family = binomial(link = 'logit'), control = glmerControl(optimizer = 'bobyqa', nAGQ = 1))
colnames(dst)
library(tidyverse)
library(ggExtra)
library(ez)
dst <- read.csv('../../../data/dstClean.csv')
n <- dst %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
dst
dst <- dst %>%
mutate(difference = factor(difference, levels = levels(difference)[c(2,1)]),
selSafeDeck = ifelse(selectedRiskyDeck == 1, 0, 1))
dst %>%
group_by(subject, difference, difficulty) %>%
summarize(selSafeDeck = mean(selSafeDeck)) %>%
group_by(difference, difficulty) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(n)) %>%
ggplot(aes(x = difficulty, y = ssd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se), position = position_dodge(width = 0.9), width = 0.5) +
labs(
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
ylim(0, 1) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
scale_fill_manual(name = 'Difference', values = c(Moderate = 'light grey', Extreme = 'black')) +
theme_bw()
dst %>%
group_by(subject, difficulty) %>%
summarize(selSafeDeck = mean(selSafeDeck)) %>%
group_by(difficulty) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(n)) %>%
ggplot(aes(x = difficulty, y = ssd)) +
geom_bar(stat = 'identity') +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se), width = 0.5) +
labs(
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
ylim(0,1) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
theme_bw()
condMeans <- dst %>%
group_by(subject, difficulty) %>%
summarize(ssd = mean(selSafeDeck)) %>%
group_by(difficulty) %>%
summarize(ssd = mean(ssd))
dst %>%
group_by(subject, difficulty) %>%
summarize(ssd = mean(selSafeDeck)) %>%
ggplot(aes(x = difficulty, y = ssd)) +
geom_violin(fill = NA, alpha = 0.2) +
geom_boxplot(fill = NA, alpha = 0.2) +
geom_point(alpha = 0.4) +
geom_line(aes(group = subject), alpha = 0.4, linetype = 'dotted') +
geom_point(data = condMeans, aes(x = difficulty, y = ssd), size = 4, shape = 23, color = 'black', fill = 'red') +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_label(data = condMeans, aes(x = difficulty, y = ssd, label = round(ssd, 2)), hjsut = 1.5, vjust = 1.5) +
ylim(0,1) +
theme_bw() +
labs(
title = 'Selection of safe deck by difficulty and subject',
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Red diamond reflects condition means. Horizontal, black, solid lines reflect medians.'
)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = selSafeDeck, data = dst, detailed = TRUE)
data.frame(m1$ANOVA)
head(dst)
m1 <- glmer(selSafeDeck ~ difficulty + (1 + difficulty | subject), data = dst, family = binomial(link = 'logit'), control = glmerControl(optimizer = 'bobyqa', nAGQ = 1))
summary(m1)
dst$difficultyD <- ifelse(dst$difficulty == 'Harder than Reference', 1, 0)
m1 <- glmer(selSafeDeck ~ difficultyD + (1 + difficultyD | subject), data = dst, family = binomial(link = 'logit'), control = glmerControl(optimizer = 'bobyqa', nAGQ = 1))
summary(m1)
head(pracCued)
dst <- pracCued %>%
group_by(subject, transition) %>%
summarize(rt = mean(rt)) %>%
spread(transition, rt) %>%
dst <- pracCued %>%
filter(transition != 'startBlock') %>%
group_by(subject, transition) %>%
summarize(rt = mean(rt)) %>%
spread(transition, rt) %>%
mutate(switchCost = switch - repeat) %>%
source('~/.active-rstudio-document', echo=TRUE)
dst <- pracCued %>%
filter(transition != 'startBlock') %>%
group_by(subject, transition) %>%
summarize(rt = mean(rt)) %>%
spread(transition, rt) %>%
mutate(switchCost = switch - `repeat``)
dst <- pracCued %>%
filter(transition != 'startBlock') %>%
group_by(subject, transition) %>%
summarize(rt = mean(rt)) %>%
spread(transition, rt) %>%
mutate(switchCost = switch - `repeat`)
dst <- pracCued %>%
filter(transition != 'startBlock') %>%
group_by(subject, transition) %>%
summarize(rt = mean(rt)) %>%
spread(transition, rt) %>%
rename(rep = `repeat`) %>%
mutate(switchCost = switch - `repeat`)
source('~/.active-rstudio-document', echo=TRUE)
library(tidyverse)
library(data.table)
library(ggridges)
dst <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
rapidFire <- read.csv('../../data/rapidFire.csv')
pracCued <- read.csv('../../data/pracCued.csv')
n <- nrow(demo)
dst
dstTrim <- dst %>%
group_by(subject) %>%
summarize(dstRunTimeMins = max(phaseRunTimeMins),
cycleThreshold = max(choiceTrial))
rapidFireTrim <- rapidFire %>%
group_by(subject) %>%
summarize(rapidFireRunTimeMins = max(phaseRunTimeMins))
pracCuedTrim <- pracCued %>%
group_by(subject) %>%
summarize(pracCuedRunTimeMins = max(runTimeMins))
demoTrim <- demo %>%
select(subject, totalTime_mins)
d <- dstTrim %>%
inner_join(rapidFireTrim) %>%
inner_join(pracCuedTrim) %>%
inner_join(demoTrim)
d
d %>%
ggplot(aes(x = totalTime_mins)) +
geom_histogram(color = 'black', fill = 'light grey') +
labs(
x = 'Total Run Time in Experiment (mins)',
caption = 'Extreme long times usually suggest participant left and came back at some point'
) +
theme_bw()
badSubjectsList <- demo[demo$vision == 'impaired',]$subject
badSubjects <- data.frame(subject = badSubjectsList, reason = rep('Vision impaired', length(badSubjectsList)))
badSubjectsList <- dst %>%
group_by(subject) %>%
summarize(error = mean(error))
badSubjectsList %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey', bins = ifelse(n < 10, 10, 30)) +
theme_bw() +
xlab('Mean Error Rates')
badSubjectsList <- badSubjectsList[badSubjectsList$error > .15,]$subject
badSubjects <- rbind(badSubjects, data.frame(subject = badSubjectsList, reason = rep('Error rate higher than 15%', length(badSubjectsList))))
badSubjects
good <- dst %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error < .35)
bad <- dst %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error > .35)
good
bad
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
rejectList <- ifelse(nrow(rejectList) > 0, rejectList$subject, -99)
dst %>%
mutate(isBot = ifelse(subject %in% rejectList, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
labs(caption = 'Red dashed lines represent the HIT rejection criteria') +
theme_bw() +
theme(legend.position = 'bottom') +
geom_vline(xintercept = 0.35, linetype = 'dashed', color = 'red') +
geom_hline(yintercept = 400, linetype = 'dashed', color = 'red')
print(paste('Number of rows before dropping bad subjects:', nrow(dst)))
dst <- dst[!(dst$subject %in% badSubjects$subject),]
print(paste('Number of rows after dropping bad subjects:', nrow(dst)))
demo <- demo[!(demo$subject %in% badSubjects$subject),]
rapidFire <- rapidFire[!(rapidFire$subject %in% badSubjects$subject),]
dst %>%
group_by(subject) %>%
summarize(error = mean(error)) %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey') +
theme_bw() +
xlab('Error Rate')
initialRows <- nrow(dst)
print(paste('Number of rows before removing trials with RTs longer than 10 s:', initialRows))
dst <- dst %>%
filter(cuedRt < 10000, choiceRt < 10000)
print(paste('Number of rows after removing trials with RTs longer than 10 s:', nrow(dst)))
rapidFire <- rapidFire %>%
filter(choiceRt < 10000)
badTrials <- data.frame('Data Dropped' = round(1 - (nrow(dst) / initialRows), 2), Reason = 'Trials longer than 10 s')
badTrials
## choice first
initialRows <- nrow(dst)
print(paste('Number of rows before removing trials where choices exceeded participant-wise choice RT cutoffs:', initialRows))
dst <- dst %>%
group_by(subject) %>%
summarize(meanChoiceRt = mean(choiceRt), sdChoiceRt = sd(choiceRt)) %>%
inner_join(dst) %>%
mutate(badChoice = ifelse(choiceRt <= meanChoiceRt - 2 * sdChoiceRt | choiceRt > meanChoiceRt + 2 * sdChoiceRt, 1, 0)) %>%
filter(badChoice == 0) %>%
select(-badChoice, meanChoiceRt, sdChoiceRt)
rapidFire <- rapidFire %>%
group_by(subject) %>%
summarize(meanChoiceRt = mean(choiceRt), sdChoiceRt = sd(choiceRt)) %>%
inner_join(rapidFire) %>%
mutate(badChoice = ifelse(choiceRt <= meanChoiceRt - 2 * sdChoiceRt | choiceRt > meanChoiceRt + 2 * sdChoiceRt, 1, 0)) %>%
filter(badChoice == 0) %>%
select(-badChoice, meanChoiceRt, sdChoiceRt)
print(paste('Number of rows before removing trials where choices exceeded participant-wise choice RT cutoffs:', nrow(dst)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(dst) / initialRows), 2), Reason = 'Choice trials with RTs more extreme than two SDs beyond participant-wise means'))
badTrials
## now for cued responses
initialRows <- nrow(dst)
print(paste('Number of rows before removing trials where cued responses exceeded participant-wise cued RT cutoffs:', initialRows))
dst <- dst %>%
group_by(subject) %>%
summarize(meancuedRt = mean(cuedRt), sdcuedRt = sd(cuedRt)) %>%
inner_join(dst) %>%
mutate(badcued = ifelse(cuedRt <= meancuedRt - 2 * sdcuedRt | cuedRt > meancuedRt + 2 * sdcuedRt, 1, 0)) %>%
filter(badcued == 0) %>%
select(-badcued)
print(paste('Number of rows before removing trials where cued responses exceeded participant-wise cued RT cutoffs:', nrow(dst)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(dst) / initialRows), 2), Reason = 'Cued trials with RTs more extreme than two SDs beyond participant-wise means'))
badTrials
write.csv(dst, '../../data/dstCleanErrors.csv', row.names = FALSE)
initialRows <- nrow(dst)
print(paste('Number of rows before removing error trials and trials following error trials :', initialRows))
dst <- dst %>%
mutate(errorTrim = ifelse(error | shift(error), 1, 0)) %>%
filter(errorTrim == 0)
print(paste('Number of rows before removing error trials and trials following error trials :', nrow(dst)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(dst) / initialRows), 2), Reason = 'Trimming error trials and trials following error trials'))
badTrials
write.csv(dst, '../../data/dstClean.csv', row.names = FALSE)
write.csv(demo, '../../data/demoClean.csv', row.names = FALSE)
write.csv(rapidFire, '../../data/rapidFireClean.csv', row.names = FALSE)
n <- dst %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
library(tidyverse)
library(ggExtra)
library(ez)
dst <- read.csv('../../../data/dstClean.csv')
n <- dst %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
dst
dst <- dst %>%
mutate(difference = factor(difference, levels = levels(difference)[c(2,1)]),
selSafeDeck = ifelse(selectedRiskyDeck == 1, 0, 1))
dst %>%
group_by(subject, difference, difficulty) %>%
summarize(selSafeDeck = mean(selSafeDeck)) %>%
group_by(difference, difficulty) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(n)) %>%
ggplot(aes(x = difficulty, y = ssd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se), position = position_dodge(width = 0.9), width = 0.5) +
labs(
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
ylim(0, 1) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
scale_fill_manual(name = 'Difference', values = c(Moderate = 'light grey', Extreme = 'black')) +
theme_bw()
dst %>%
group_by(subject, difficulty) %>%
summarize(selSafeDeck = mean(selSafeDeck)) %>%
group_by(difficulty) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(n)) %>%
ggplot(aes(x = difficulty, y = ssd)) +
geom_bar(stat = 'identity') +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se), width = 0.5) +
labs(
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
ylim(0,1) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
theme_bw()
condMeans <- dst %>%
group_by(subject, difficulty) %>%
summarize(ssd = mean(selSafeDeck)) %>%
group_by(difficulty) %>%
summarize(ssd = mean(ssd))
dst %>%
group_by(subject, difficulty) %>%
summarize(ssd = mean(selSafeDeck)) %>%
ggplot(aes(x = difficulty, y = ssd)) +
geom_violin(fill = NA, alpha = 0.2) +
geom_boxplot(fill = NA, alpha = 0.2) +
geom_point(alpha = 0.4) +
geom_line(aes(group = subject), alpha = 0.4, linetype = 'dotted') +
geom_point(data = condMeans, aes(x = difficulty, y = ssd), size = 4, shape = 23, color = 'black', fill = 'red') +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_label(data = condMeans, aes(x = difficulty, y = ssd, label = round(ssd, 2)), hjsut = 1.5, vjust = 1.5) +
ylim(0,1) +
theme_bw() +
labs(
title = 'Selection of safe deck by difficulty and subject',
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Red diamond reflects condition means. Horizontal, black, solid lines reflect medians.'
)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = selSafeDeck, data = dst, detailed = TRUE)
data.frame(m1$ANOVA)
pracCued %>%
filter(transition != 'startBlock') %>%
group_by(subject, transition) %>%
summarize(rt = mean(rt)) %>%
spread(transition, rt) %>%
rename(rep = `repeat`) %>%
mutate(switchCost = switch - rep)
switchCosts <- pracCued %>%
filter(transition != 'startBlock') %>%
group_by(subject, transition) %>%
summarize(rt = mean(rt)) %>%
spread(transition, rt) %>%
rename(rep = `repeat`) %>%
mutate(switchCost = switch - rep) %>%
select(subject, switchCost)
hist(switchCosts$switchCost)
switchCosts <- pracCued %>%
filter(transition != 'startBlock') %>%
group_by(subject, transition) %>%
summarize(rt = mean(rt)) %>%
spread(transition, rt) %>%
rename(rep = `repeat`) %>%
mutate(switchCost = switch - rep) %>%
select(subject, switchCost)
hist(switchCosts$switchCost)
dst <- switchCosts %>%
inner_join(dst)
head(dst)
m1 <- glmer(selSafeDeck ~ difficulty * switchCost + (1 + difficulty | subject), data = dst, family = binomial(link = 'logit'), control = glmerControl(optimizer = 'bobyqa', nAGQ = 1))
m1 <- glmer(selSafeDeck ~ difficulty * scale(switchCost, center = TRUE) + (1 + difficulty | subject), data = dst, family = binomial(link = 'logit'), control = glmerControl(optimizer = 'bobyqa', nAGQ = 1))
summary(m1)
q()
library(tidyverse)
library(ggExtra)
library(ez)
dst <- read.csv('../../../data/dstClean.csv')
n <- dst %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
dst
dst <- dst %>%
mutate(difference = factor(difference, levels = levels(difference)[c(2,1)]),
selSafeDeck = ifelse(selectedRiskyDeck == 1, 0, 1))
dst %>%
group_by(subject, difference, difficulty) %>%
summarize(selSafeDeck = mean(selSafeDeck)) %>%
group_by(difference, difficulty) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(n)) %>%
ggplot(aes(x = difficulty, y = ssd, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), color = 'black', position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se), position = position_dodge(width = 0.9), width = 0.5) +
labs(
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
ylim(0, 1) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
scale_fill_manual(name = 'Difference', values = c(Moderate = 'light grey', Extreme = 'black')) +
theme_bw()
dst %>%
group_by(subject, difficulty) %>%
summarize(selSafeDeck = mean(selSafeDeck)) %>%
group_by(difficulty) %>%
summarize(ssd = mean(selSafeDeck), se = sd(selSafeDeck) / sqrt(n)) %>%
ggplot(aes(x = difficulty, y = ssd)) +
geom_bar(stat = 'identity') +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se), width = 0.5) +
labs(
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Dashed line represents selecting at chance'
) +
ylim(0,1) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
theme_bw()
condMeans <- dst %>%
group_by(subject, difficulty) %>%
summarize(ssd = mean(selSafeDeck)) %>%
group_by(difficulty) %>%
summarize(ssd = mean(ssd))
dst %>%
group_by(subject, difficulty) %>%
summarize(ssd = mean(selSafeDeck)) %>%
ggplot(aes(x = difficulty, y = ssd)) +
geom_violin(fill = NA, alpha = 0.2) +
geom_boxplot(fill = NA, alpha = 0.2) +
geom_point(alpha = 0.4) +
geom_line(aes(group = subject), alpha = 0.4, linetype = 'dotted') +
geom_point(data = condMeans, aes(x = difficulty, y = ssd), size = 4, shape = 23, color = 'black', fill = 'red') +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
geom_label(data = condMeans, aes(x = difficulty, y = ssd, label = round(ssd, 2)), hjust = 1.5, vjust = 1.5) +
ylim(0,1) +
theme_bw() +
labs(
title = 'Selection of safe deck by difficulty and subject',
x = 'Difficulty',
y = 'Proportion Selection of Safe Deck',
caption = 'Red diamond reflects condition means. Horizontal, black, solid lines reflect medians.'
)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = selSafeDeck, data = dst, detailed = TRUE)
data.frame(m1$ANOVA)
q()
