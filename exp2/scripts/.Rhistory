dst <- dst[!(dst$subject %in% badSubjects$subject),]
print(paste('Number of rows after dropping bad subjects:', nrow(dst)))
demo <- demo[!(demo$subject %in% badSubjects$subject),]
dst %>%
group_by(subject) %>%
summarize(error = mean(error)) %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey') +
theme_bw() +
xlab('Error Rate')
initialRows <- nrow(dst)
print(paste('Number of rows before removing trials with RTs longer than 10 s:', initialRows))
dst <- dst %>%
filter(cuedRt < 10000, choiceRt < 10000)
print(paste('Number of rows after removing trials with RTs longer than 10 s:', nrow(dst)))
rapidFire <- rapidFire %>%
filter(choiceRt < 10000)
badTrials <- data.frame('Data Dropped' = round(1 - (nrow(dst) / initialRows), 2), Reason = 'Trials longer than 10 s')
badTrials
rapidFire %>%
group_by(subject) %>%
summarize(meanChoiceRt = mean(choiceRt), sdChoiceRt = sd(choiceRt)) %>%
inner_join(dst)
View(rapidFire)
rapidFire %>%
group_by(subject) %>%
summarize(meanChoiceRt = mean(choiceRt), sdChoiceRt = sd(choiceRt)) %>%
inner_join(rapidFire)
rapidFire <- rapidFire %>%
group_by(subject) %>%
summarize(meanChoiceRt = mean(choiceRt), sdChoiceRt = sd(choiceRt)) %>%
inner_join(rapidFire) %>%
mutate(badChoice = ifelse(choiceRt <= meanChoiceRt - 2 * sdChoiceRt | choiceRt > meanChoiceRt + 2 * sdChoiceRt, 1, 0)) %>%
filter(badChoice == 0) %>%
select(-badChoice, meanChoiceRt, sdChoiceRt)
head(rapidFire)
library(tidyverse)
library(ggridges)
dst <- read.csv('../../../data/dstClean.csv')
rapidFire <- read.csv('../../../data/rapidFireClean.csv')
rapidFire
dst %>%
select(subject, choiceRt) %>%
rename(dstChoiceRt = choiceRt) %>%
inner_join(rapidFire) %>%
rename(rfChoiceRt = choiceRt) %>%
select(subject, rfChoiceRt, dstChoiceRt) %>%
gather(phase, rt, rfChoiceRt, dstChoiceRt) %>%
filter(rt < 5000) %>%
mutate(subject = as.factor(subject)) %>%
ggplot(aes(x = rt, y = subject)) +
## scale controls how much the densities overlap -- higher numbers = more overlap
geom_density_ridges(aes(fill = phase), alpha = 0.8, color = 'white', scale = 1.3) +
scale_fill_cyclical(name = 'Phase',
labels = c(`dstChoiceRt` = 'Demand Selection Task', `rfChoiceRt` = 'Rapid Fire'),
values = c('#ff0000', '#0000ff', '#ff8080', '#8080ff'), guide = 'legend') +
theme_ridges(grid = FALSE) +
labs(
x = 'Response Time (ms)',
y = 'Subject',
title = 'Response times across the two choice phases of the experiment',
subtitle = 'Are people just spamming their way through the rapid fire choices?'
) +
theme(legend.position = 'bottom')
rapidFire %>%
mutate(rfChoice = ifelse(selectedDeckLocation == 'right', 1, 0)) %>%
select(subject, rfChoice) %>%
inner_join(dst) %>%
mutate(dstChoice = ifelse(selectedDeckLocation == 'right', 1, 0),
subject = as.factor(subject)) %>%
gather(phase, isRight, rfChoice, dstChoice) %>%
mutate(phase = as.factor(phase)) %>%
mutate(phase = recode(phase, 'dstChoice' = 'Demand Selection Phase', 'rfChoice' = 'Rapid Fire Phase')) %>%
group_by(subject, phase) %>%
summarize(right = mean(isRight), sd = sd(isRight)) %>%
ggplot(aes(x = subject, y = right)) +
geom_point(size = 3, shape = 18) +
#geom_errorbar(aes(ymin = right - sd, ymax = right + sd), width = 0.2) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
facet_wrap(~phase) +
theme_bw() +
coord_flip() +
ylim(0, 1) +
labs(
x = 'Subject',
y = 'Proportion Selection of Right Deck',
title = 'Choice location bias across choice phases'
)
rapidFire %>%
mutate(isRight = ifelse(selectedDeckLocation == 'right', 1, 0)) %>%
group_by(subject) %>%
summarize(right = mean(isRight), se = sd(isRight) / sqrt(n()), n = n())
a <- rapidFire %>%
select(subject, choiceRt, choiceTrial) %>%
mutate(phase = 'Rapid Fire Phase')
b <- dst %>%
select(subject, choiceRt, choiceTrial) %>%
mutate(phase = 'Demand Selection Phase')
plotData <- rbind(a, b)
plotData %>%
ggplot(aes(x = choiceTrial, y = choiceRt, group = subject)) +
geom_line() +
xlim(0, 40)+
facet_wrap(~phase) +
labs(
title = 'Choice response time over trial across the two choice phases',
subtitle = 'Are people starting off slower and getting faster?',
x = 'Trial',
y = 'Response Time (ms)',
caption = 'Each line represents a different subject'
) +
theme_bw() +
theme(strip.background = element_rect(fill = 'white', color = 'black'))
dst <- read.csv('../../../data/dstClean.csv')
library(tidyverse)
d <- read.csv('../../data/demoClean.csv')
n <- nrow(d)
d
d <- d %>%
filter(!(is.na(age)))
mAge <- mean(d$age)
sdAge <- sd(d$age)
d %>%
ggplot(aes(x = age)) +
geom_histogram(color = 'black', fill = 'light grey') +
geom_vline(xintercept = mAge, linetype = 'dashed') +
annotate('text', x = mAge + 5, y = 13, label = paste('Mean:', round(mAge, 2))) +
annotate('text', x = mAge + 5, y = 12, label = paste('SD:', round(sdAge, 2))) +
theme_bw() +
xlab('Age (In years)') +
ylab('Frequency')
d %>%
group_by(gender) %>%
summarize(count = n()) %>%
ggplot(aes(x = gender, y = count)) +
geom_bar(stat = 'identity', color = 'black', fill = 'light grey') +
theme_bw() +
xlab('Gender Identity') +
ylab('Count')
d %>%
group_by(race) %>%
summarize(count = n()) %>%
ggplot(aes(x = race, y = count)) +
geom_bar(stat = 'identity', color = 'black', fill = 'light grey') +
theme_bw() +
xlab('Racial Identity') +
ylab('Count')
d %>%
group_by(ethnicity) %>%
summarize(count = n()) %>%
ggplot(aes(x = ethnicity, y = count)) +
geom_bar(stat = 'identity', color = 'black', fill = 'light grey') +
theme_bw() +
xlab('Ethnicity') +
ylab('Count')
d %>%
group_by(vision) %>%
summarize(count = n()) %>%
ggplot(aes(x = vision, y = count)) +
geom_bar(stat = 'identity', color = 'black', fill = 'light grey') +
theme_bw() +
xlab('Vision') +
ylab('Count')
for (i in 1:(nrow(d))) {
print('')
print(paste('Subject:', d[i,]$subject))
print(as.character(d[i,]$comments))
}
library(tidyverse)
library(ggridges)
dst <- read.csv('../../../data/dstClean.csv')
rapidFire <- read.csv('../../../data/rapidFireClean.csv')
rapidFire
dst %>%
select(subject, choiceRt) %>%
rename(dstChoiceRt = choiceRt) %>%
inner_join(rapidFire) %>%
rename(rfChoiceRt = choiceRt) %>%
select(subject, rfChoiceRt, dstChoiceRt) %>%
gather(phase, rt, rfChoiceRt, dstChoiceRt) %>%
filter(rt < 5000) %>%
mutate(subject = as.factor(subject)) %>%
ggplot(aes(x = rt, y = subject)) +
## scale controls how much the densities overlap -- higher numbers = more overlap
geom_density_ridges(aes(fill = phase), alpha = 0.8, color = 'white', scale = 1.3) +
scale_fill_cyclical(name = 'Phase',
labels = c(`dstChoiceRt` = 'Demand Selection Task', `rfChoiceRt` = 'Rapid Fire'),
values = c('#ff0000', '#0000ff', '#ff8080', '#8080ff'), guide = 'legend') +
theme_ridges(grid = FALSE) +
labs(
x = 'Response Time (ms)',
y = 'Subject',
title = 'Response times across the two choice phases of the experiment',
subtitle = 'Are people just spamming their way through the rapid fire choices?'
) +
theme(legend.position = 'bottom')
rapidFire %>%
mutate(rfChoice = ifelse(selectedDeckLocation == 'right', 1, 0)) %>%
select(subject, rfChoice) %>%
inner_join(dst) %>%
mutate(dstChoice = ifelse(selectedDeckLocation == 'right', 1, 0),
subject = as.factor(subject)) %>%
gather(phase, isRight, rfChoice, dstChoice) %>%
mutate(phase = as.factor(phase)) %>%
mutate(phase = recode(phase, 'dstChoice' = 'Demand Selection Phase', 'rfChoice' = 'Rapid Fire Phase')) %>%
group_by(subject, phase) %>%
summarize(right = mean(isRight), sd = sd(isRight)) %>%
ggplot(aes(x = subject, y = right)) +
geom_point(size = 3, shape = 18) +
#geom_errorbar(aes(ymin = right - sd, ymax = right + sd), width = 0.2) +
geom_hline(yintercept = 0.5, linetype = 'dashed') +
facet_wrap(~phase) +
theme_bw() +
coord_flip() +
ylim(0, 1) +
labs(
x = 'Subject',
y = 'Proportion Selection of Right Deck',
title = 'Choice location bias across choice phases'
)
rapidFire %>%
mutate(isRight = ifelse(selectedDeckLocation == 'right', 1, 0)) %>%
group_by(subject) %>%
summarize(right = mean(isRight), se = sd(isRight) / sqrt(n()), n = n())
a <- rapidFire %>%
select(subject, choiceRt, choiceTrial) %>%
mutate(phase = 'Rapid Fire Phase')
b <- dst %>%
select(subject, choiceRt, choiceTrial) %>%
mutate(phase = 'Demand Selection Phase')
plotData <- rbind(a, b)
plotData %>%
ggplot(aes(x = choiceTrial, y = choiceRt, group = subject)) +
geom_line() +
xlim(0, 40)+
facet_wrap(~phase) +
labs(
title = 'Choice response time over trial across the two choice phases',
subtitle = 'Are people starting off slower and getting faster?',
x = 'Trial',
y = 'Response Time (ms)',
caption = 'Each line represents a different subject'
) +
theme_bw() +
theme(strip.background = element_rect(fill = 'white', color = 'black'))
library(tidyverse)
library(ggridges)
dst <- read.csv('../../../data/dstClean.csv')
rapidFire <- read.csv('../../../data/rapidFireClean.csv')
rapidFire
summary(rapidFire$subject)
dst %>%
group_by(subject) %>%
summarize(n()) %>%
n()
dst %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
library(tidyverse)
library(data.table)
library(ggridges)
dst <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
rapidFire <- read.csv('../../data/rapidFire.csv')
pracCued <- read.csv('../../data/pracCued.csv')
n <- nrow(demo)
dst
dstTrim <- dst %>%
group_by(subject) %>%
summarize(dstRunTimeMins = max(phaseRunTimeMins),
cycleThreshold = max(choiceTrial))
rapidFireTrim <- rapidFire %>%
group_by(subject) %>%
summarize(rapidFireRunTimeMins = max(phaseRunTimeMins))
pracCuedTrim <- pracCued %>%
group_by(subject) %>%
summarize(pracCuedRunTimeMins = max(runTimeMins))
demoTrim <- demo %>%
select(subject, totalTime_mins)
d <- dstTrim %>%
inner_join(rapidFireTrim) %>%
inner_join(pracCuedTrim) %>%
inner_join(demoTrim)
d
badSubjectsList <- demo[demo$vision == 'impaired',]$subject
badSubjects <- data.frame(subject = badSubjectsList, reason = rep('Vision impaired', length(badSubjectsList)))
badSubjectsList <- dst %>%
group_by(subject) %>%
summarize(error = mean(error))
badSubjectsList %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey', bins = ifelse(n < 10, 10, 30)) +
theme_bw() +
xlab('Mean Error Rates')
badSubjectsList <- badSubjectsList[badSubjectsList$error > .15,]$subject
badSubjects <- rbind(badSubjects, data.frame(subject = badSubjectsList, reason = rep('Error rate higher than 15%', length(badSubjectsList))))
badSubjects
good <- dst %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error < .35)
bad <- dst %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error > .35)
good
bad
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
rejectList <- ifelse(nrow(rejectList) > 0, rejectList$subject, -99)
dst %>%
mutate(isBot = ifelse(subject %in% rejectList, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
labs(caption = 'Red dashed lines represent the HIT rejection criteria') +
theme_bw() +
theme(legend.position = 'bottom') +
geom_vline(xintercept = 0.35, linetype = 'dashed', color = 'red') +
geom_hline(yintercept = 400, linetype = 'dashed', color = 'red')
print(paste('Number of rows before dropping bad subjects:', nrow(dst)))
dst <- dst[!(dst$subject %in% badSubjects$subject),]
print(paste('Number of rows after dropping bad subjects:', nrow(dst)))
demo <- demo[!(demo$subject %in% badSubjects$subject),]
rapidFire <- rapidFire[!(rapidFire$subject %in% badSubjects$subject),]
summary(rapidFire$subject)
dst <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
rapidFire <- read.csv('../../data/rapidFire.csv')
pracCued <- read.csv('../../data/pracCued.csv')
n <- nrow(demo)
dst
summary
summary(rapidFire$subject)
summary(dst$subject)
dst <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
rapidFire <- read.csv('../../data/rapidFire.csv')
pracCued <- read.csv('../../data/pracCued.csv')
n <- nrow(demo)
dst
summary(rapidFire$subject)
dst <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
rapidFire <- read.csv('../../data/rapidFire.csv')
pracCued <- read.csv('../../data/pracCued.csv')
n <- nrow(demo)
dst
summary(rapidFire$subject)
rapidFire
length(summary(factor(rapidFire$workerId)))
source('../../identitiesAndRejections/idCleansing.r')
dst <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
rapidFire <- read.csv('../../data/rapidFire.csv')
pracCued <- read.csv('../../data/pracCued.csv')
n <- nrow(demo)
dst
summary(rapidFire$subject)
library(tidyverse)
library(data.table)
library(ggridges)
library(tidyverse)
library(data.table)
library(ggridges)
dst <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
rapidFire <- read.csv('../../data/rapidFire.csv')
pracCued <- read.csv('../../data/pracCued.csv')
n <- nrow(demo)
dst
dstTrim <- dst %>%
group_by(subject) %>%
summarize(dstRunTimeMins = max(phaseRunTimeMins),
cycleThreshold = max(choiceTrial))
rapidFireTrim <- rapidFire %>%
group_by(subject) %>%
summarize(rapidFireRunTimeMins = max(phaseRunTimeMins))
pracCuedTrim <- pracCued %>%
group_by(subject) %>%
summarize(pracCuedRunTimeMins = max(runTimeMins))
demoTrim <- demo %>%
select(subject, totalTime_mins)
d <- dstTrim %>%
inner_join(rapidFireTrim) %>%
inner_join(pracCuedTrim) %>%
inner_join(demoTrim)
d
badSubjectsList <- demo[demo$vision == 'impaired',]$subject
badSubjects <- data.frame(subject = badSubjectsList, reason = rep('Vision impaired', length(badSubjectsList)))
badSubjectsList <- dst %>%
group_by(subject) %>%
summarize(error = mean(error))
badSubjectsList %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey', bins = ifelse(n < 10, 10, 30)) +
theme_bw() +
xlab('Mean Error Rates')
badSubjectsList <- badSubjectsList[badSubjectsList$error > .15,]$subject
badSubjects <- rbind(badSubjects, data.frame(subject = badSubjectsList, reason = rep('Error rate higher than 15%', length(badSubjectsList))))
badSubjects
good <- dst %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error < .35)
bad <- dst %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error > .35)
good
bad
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
rejectList <- ifelse(nrow(rejectList) > 0, rejectList$subject, -99)
dst %>%
mutate(isBot = ifelse(subject %in% rejectList, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
labs(caption = 'Red dashed lines represent the HIT rejection criteria') +
theme_bw() +
theme(legend.position = 'bottom') +
geom_vline(xintercept = 0.35, linetype = 'dashed', color = 'red') +
geom_hline(yintercept = 400, linetype = 'dashed', color = 'red')
print(paste('Number of rows before dropping bad subjects:', nrow(dst)))
dst <- dst[!(dst$subject %in% badSubjects$subject),]
print(paste('Number of rows after dropping bad subjects:', nrow(dst)))
demo <- demo[!(demo$subject %in% badSubjects$subject),]
rapidFire <- rapidFire[!(rapidFire$subject %in% badSubjects$subject),]
dst %>%
group_by(subject) %>%
summarize(error = mean(error)) %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey') +
theme_bw() +
xlab('Error Rate')
initialRows <- nrow(dst)
print(paste('Number of rows before removing trials with RTs longer than 10 s:', initialRows))
dst <- dst %>%
filter(cuedRt < 10000, choiceRt < 10000)
print(paste('Number of rows after removing trials with RTs longer than 10 s:', nrow(dst)))
rapidFire <- rapidFire %>%
filter(choiceRt < 10000)
badTrials <- data.frame('Data Dropped' = round(1 - (nrow(dst) / initialRows), 2), Reason = 'Trials longer than 10 s')
badTrials
## choice first
initialRows <- nrow(dst)
print(paste('Number of rows before removing trials where choices exceeded participant-wise choice RT cutoffs:', initialRows))
dst <- dst %>%
group_by(subject) %>%
summarize(meanChoiceRt = mean(choiceRt), sdChoiceRt = sd(choiceRt)) %>%
inner_join(dst) %>%
mutate(badChoice = ifelse(choiceRt <= meanChoiceRt - 2 * sdChoiceRt | choiceRt > meanChoiceRt + 2 * sdChoiceRt, 1, 0)) %>%
filter(badChoice == 0) %>%
select(-badChoice, meanChoiceRt, sdChoiceRt)
rapidFire <- rapidFire %>%
group_by(subject) %>%
summarize(meanChoiceRt = mean(choiceRt), sdChoiceRt = sd(choiceRt)) %>%
inner_join(rapidFire) %>%
mutate(badChoice = ifelse(choiceRt <= meanChoiceRt - 2 * sdChoiceRt | choiceRt > meanChoiceRt + 2 * sdChoiceRt, 1, 0)) %>%
filter(badChoice == 0) %>%
select(-badChoice, meanChoiceRt, sdChoiceRt)
print(paste('Number of rows before removing trials where choices exceeded participant-wise choice RT cutoffs:', nrow(dst)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(dst) / initialRows), 2), Reason = 'Choice trials with RTs more extreme than two SDs beyond participant-wise means'))
badTrials
## now for cued responses
initialRows <- nrow(dst)
print(paste('Number of rows before removing trials where cued responses exceeded participant-wise cued RT cutoffs:', initialRows))
dst <- dst %>%
group_by(subject) %>%
summarize(meancuedRt = mean(cuedRt), sdcuedRt = sd(cuedRt)) %>%
inner_join(dst) %>%
mutate(badcued = ifelse(cuedRt <= meancuedRt - 2 * sdcuedRt | cuedRt > meancuedRt + 2 * sdcuedRt, 1, 0)) %>%
filter(badcued == 0) %>%
select(-badcued)
print(paste('Number of rows before removing trials where cued responses exceeded participant-wise cued RT cutoffs:', nrow(dst)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(dst) / initialRows), 2), Reason = 'Cued trials with RTs more extreme than two SDs beyond participant-wise means'))
badTrials
write.csv(dst, '../../data/dstCleanErrors.csv', row.names = FALSE)
initialRows <- nrow(dst)
print(paste('Number of rows before removing error trials and trials following error trials :', initialRows))
dst <- dst %>%
mutate(errorTrim = ifelse(error | shift(error), 1, 0)) %>%
filter(errorTrim == 0)
print(paste('Number of rows before removing error trials and trials following error trials :', nrow(dst)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(dst) / initialRows), 2), Reason = 'Trimming error trials and trials following error trials'))
badTrials
write.csv(dst, '../../data/dstClean.csv', row.names = FALSE)
write.csv(demo, '../../data/demoClean.csv', row.names = FALSE)
write.csv(rapidFire, '../../data/rapidFireClean.csv', row.names = FALSE)
n <- dst %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
summary(rapidFire$subject)
summary(dst$subject)
length(summary(factor(dst$subject)))
length(summary(factor(rapidFire$subject)))
q()
