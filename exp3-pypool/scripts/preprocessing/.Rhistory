theme_bw() +
xlab('Mean Error Rates')
badSubjectsList <- badSubjectsList[badSubjectsList$error > .15,]$subject
badSubjects <- rbind(badSubjects, data.frame(subject = badSubjectsList, reason = rep('Error rate higher than 15%', length(badSubjectsList))))
write.csv(badSubjects, '../../data/badSubjects.csv', row.names = FALSE)
badSubjects
good <- dst %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error < .35)
bad <- dst %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error > .35)
library(tidyverse)
library(data.table)
library(ggridges)
dst <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
rapidFire <- read.csv('../../data/rapidFire.csv')
pracCued <- read.csv('../../data/pracCued.csv')
n <- nrow(demo)
head(pracCued)
dstTrim <- dst %>%
group_by(subject) %>%
summarize(dstRunTimeMins = max(phaseRunTimeMins),
cycleThreshold = max(choiceTrial))
rapidFireTrim <- rapidFire %>%
group_by(subject) %>%
summarize(rapidFireRunTimeMins = max(phaseRunTimeMins))
pracCuedTrim <- pracCued %>%
group_by(subject) %>%
summarize(pracCuedRunTimeMins = max(runTimeMins))
demoTrim <- demo %>%
select(subject, totalTime_mins)
d <- dstTrim %>%
inner_join(rapidFireTrim) %>%
inner_join(pracCuedTrim) %>%
inner_join(demoTrim)
d
d %>%
ggplot(aes(x = totalTime_mins)) +
geom_histogram(color = 'black', fill = 'light grey') +
labs(
x = 'Total Run Time in Experiment (mins)',
caption = 'Extreme long times usually suggest participant left and came back at some point'
) +
theme_bw()
badSubjectsList <- demo[demo$vision == 'impaired',]$subject
badSubjects <- data.frame(subject = badSubjectsList, reason = rep('Vision impaired', length(badSubjectsList)))
badSubjectsList <- dst %>%
group_by(subject) %>%
summarize(error = mean(error))
badSubjectsList %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey', bins = ifelse(n < 10, 10, 30)) +
theme_bw() +
xlab('Mean Error Rates')
badSubjectsList <- badSubjectsList[badSubjectsList$error > .15,]$subject
badSubjects <- rbind(badSubjects, data.frame(subject = badSubjectsList, reason = rep('Error rate higher than 15%', length(badSubjectsList))))
write.csv(badSubjects, '../../data/badSubjects.csv', row.names = FALSE)
badSubjects
good <- dst %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error < .35)
bad <- dst %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error > .35)
good
bad
source('../identitiesAndRejections/computeRejectList.r')
dst %>%
mutate(isBot = ifelse(subject %in% rejectList, 'Bot', 'Human')) %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt), isBot = unique(isBot)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point(aes(color = isBot)) +
scale_color_manual(name = 'Turing Test', values = c(Bot = 'red', Human = 'dark green')) +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
labs(caption = 'Red dashed lines represent the HIT rejection criteria') +
theme_bw() +
theme(legend.position = 'bottom') +
geom_vline(xintercept = 0.35, linetype = 'dashed', color = 'red') +
geom_hline(yintercept = 400, linetype = 'dashed', color = 'red')
dst %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point() +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
labs(caption = 'Red dashed lines represent the HIT rejection criteria') +
theme_bw() +
theme(legend.position = 'bottom') +
geom_vline(xintercept = 0.35, linetype = 'dashed', color = 'red') +
geom_hline(yintercept = 400, linetype = 'dashed', color = 'red')
print(paste('Number of rows before dropping bad subjects:', nrow(dst)))
dst <- dst[!(dst$subject %in% badSubjects$subject),]
print(paste('Number of rows after dropping bad subjects:', nrow(dst)))
demo <- demo[!(demo$subject %in% badSubjects$subject),]
rapidFire <- rapidFire[!(rapidFire$subject %in% badSubjects$subject),]
dst %>%
group_by(subject) %>%
summarize(error = mean(error)) %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey') +
theme_bw() +
xlab('Error Rate')
## keep only cued < 10 s
initialRows <- nrow(dst)
print(paste('Number of rows before removing trials with RTs longer than 10 s:', initialRows))
dst <- dst %>%
filter(cuedRt < 10000)
print(paste('Number of rows after removing trials with RTs longer than 10 s:', nrow(dst)))
badTrials <- data.frame('Data Dropped' = round(1 - (nrow(dst) / initialRows), 4), Reason = 'Cued trials longer than 10 s')
badTrials
## subject-wise cued rt trimming
initialRows <- nrow(dst)
print(paste('Number of rows before removing trials where cued responses exceeded participant-wise cued RT cutoffs:', initialRows))
dst0 <- dst %>%
group_by(subject) %>%
summarize(meancuedRt = mean(cuedRt), sdcuedRt = sd(cuedRt)) %>%
inner_join(dst) %>%
mutate(badcued = ifelse(cuedRt <= meancuedRt - 2 * sdcuedRt | cuedRt > meancuedRt + 2 * sdcuedRt, 1, 0)) %>%
filter(badcued == 0) %>%
select(-badcued)
print(paste('Number of rows before removing trials where cued responses exceeded participant-wise cued RT cutoffs:', nrow(dst0)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(dst0) / initialRows), 4), Reason = 'Cued trials with RTs more extreme than two SDs beyond participant-wise means'))
badTrials
## choice first
## keep only < 10 s
initialRows <- nrow(dst0)
print(paste('Number of rows before removing trials where choices RTs exceeded 10 s', initialRows))
dst1 <- dst0 %>%
filter(choiceRt < 10000)
print(paste('Number of rows after removing trials where choices RTs exceeded 10 s', nrow(dst1)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(dst1) / initialRows), 4), Reason = 'Choice trials with with RTs  > 10 s'))
print(paste('Number of rows before removing trials where choices exceeded participant-wise choice RT cutoffs:', initialRows))
dst1 <- dst1 %>%
group_by(subject) %>%
summarize(meanChoiceRt = mean(choiceRt), sdChoiceRt = sd(choiceRt)) %>%
inner_join(dst) %>%
mutate(badChoice = ifelse(choiceRt <= meanChoiceRt - 2 * sdChoiceRt | choiceRt > meanChoiceRt + 2 * sdChoiceRt, 1, 0)) %>%
filter(badChoice == 0) %>%
select(-badChoice, meanChoiceRt, sdChoiceRt)
rapidFire <- rapidFire %>%
group_by(subject) %>%
summarize(meanChoiceRt = mean(choiceRt), sdChoiceRt = sd(choiceRt)) %>%
inner_join(rapidFire) %>%
mutate(badChoice = ifelse(choiceRt <= meanChoiceRt - 2 * sdChoiceRt | choiceRt > meanChoiceRt + 2 * sdChoiceRt, 1, 0)) %>%
filter(badChoice == 0) %>%
select(-badChoice, meanChoiceRt, sdChoiceRt)
print(paste('Number of rows after removing trials where choices exceeded participant-wise choice RT cutoffs:', nrow(dst1)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(dst1) / initialRows), 2), Reason = 'Choice trials with RTs more extreme than two SDs beyond participant-wise means'))
badTrials
write.csv(dst, '../../data/dstCleanErrors.csv', row.names = FALSE)
initialRows <- nrow(dst0)
print(paste('Number of rows before removing error trials and trials following error trials :', initialRows))
dst0 <- dst0 %>%
mutate(errorTrim = ifelse(error | shift(error), 1, 0)) %>%
filter(errorTrim == 0)
dst1 <- dst1 %>%
mutate(errorTrim = ifelse(error | shift(error), 1, 0)) %>%
filter(errorTrim == 0)
print(paste('Number of rows before removing error trials and trials following error trials :', nrow(dst0)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(dst0) / initialRows), 2), Reason = 'Trimming error trials and trials following error trials'))
badTrials
write.csv(dst0, '../../data/dstClean.csv', row.names = FALSE)
write.csv(demo, '../../data/demoClean.csv', row.names = FALSE)
write.csv(rapidFire, '../../data/rapidFireClean.csv', row.names = FALSE)
## save out condensed data with choices only
dst0 <- dst0 %>%
group_by(subject, choiceTrial) %>%
summarize(choiceRt = mean(choiceRt),
chosenDeckId = unique(chosenDeckId),
difference = unique(difference),
difficulty = unique(difficulty),
selectedDeckLocation = unique(selectedDeckLocation),
leftDeckId = unique(leftDeckId),
rightDeckId = unique(rightDeckId),
riskyDeckSwitchTop = unique(riskyDeckSwitchTop),
riskyDeckSwitchBottom = unique(riskyDeckSwitchBottom),
safeDeckSwitch = unique(safeDeckSwitch),
outcomeSwitch = unique(outcomeSwitch),
condition = unique(condition),
selectedRiskyDeck = unique(selectedRiskyDeck)) %>%
ungroup()
dst1 <- dst1 %>%
group_by(subject, choiceTrial) %>%
summarize(choiceRt = mean(choiceRt),
chosenDeckId = unique(chosenDeckId),
difference = unique(difference),
difficulty = unique(difficulty),
selectedDeckLocation = unique(selectedDeckLocation),
leftDeckId = unique(leftDeckId),
rightDeckId = unique(rightDeckId),
riskyDeckSwitchTop = unique(riskyDeckSwitchTop),
riskyDeckSwitchBottom = unique(riskyDeckSwitchBottom),
safeDeckSwitch = unique(safeDeckSwitch),
outcomeSwitch = unique(outcomeSwitch),
condition = unique(condition),
selectedRiskyDeck = unique(selectedRiskyDeck)) %>%
ungroup()
write.csv(dst0, '../../data/dstCleanChoice.csv', row.names = FALSE)
write.csv(dst1, '../../data/dstCleanChoice1.csv', row.names = FALSE)
n <- dst %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
library(tidyverse)
library(data.table)
d <- read.csv('../../../data/pracCued.csv')
badSubjects <- read.csv('../../../data/badSubjects.csv')
d <- data.table(d)[!(d$subject %in% badSubjects$subject)]
N <- d %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
initialRows <- nrow(d)
print(paste('Number of rows before trimming RTs > 10 s:', initialRows))
d <- d[d$rt < 10000]
print(paste('Number of rows after trimming RTs > 10 s:', nrow(d)))
trimmingSummary <- data.frame(Data.Dropped = round(1 - (nrow(d) / initialRows), 2), Reason = 'RTs longer than 10 s')
initialRows <- nrow(d)
d <- d %>%
group_by(subject) %>%
summarize(mRt = mean(rt), sRt = sd(rt)) %>%
inner_join(d, by = 'subject') %>%
mutate(goodTrial = ifelse(rt > mRt + 2 * sRt | rt < mRt - 2 * sRt, 0, 1)) %>%
filter(goodTrial == 1, transition != 'startBlock') %>%
select(-goodTrial, -mRt, -sRt)
print(paste('Number of rows before trimming based on +/- 2 SDs on subject-wise means:', initialRows))
print(paste('Number of rows after trimming based on +/- 2 SDs on subject-wise means:', nrow(d)))
trimmingSummary <- rbind(trimmingSummary, data.frame(Data.Dropped = round(1 - (nrow(d) / initialRows), 2), Reason = 'RTs more extreme than +/- 2 SDs beyond subject-wise means.'))
trimmingSummary
sMeans <- d %>%
group_by(subject, transition) %>%
summarize(error = mean(error))
sMeans %>%
group_by(transition) %>%
summarize(Err = mean(error), se = sd(error) / sqrt(N))
t1 <- t.test(sMeans[sMeans$transition == 'repeat',]$error, sMeans[sMeans$transition == 'switch',]$error, paired = TRUE)
t1
statSum <- paste('t(', t1$parameter, ') = ', abs(round(t1$statistic,2)), ', p ', ifelse(t1$p.value < .001, '< .001', round(t1$p.value, 3)), sep = '')
sMeans %>%
group_by(transition) %>%
summarize(err = mean(error), se = sd(error) / sqrt(N)) %>%
ggplot(aes(x = transition, y = err)) +
geom_bar(stat = 'identity', color = 'black') +
geom_errorbar(aes(ymin = err - se, ymax = err + se), width = 0.5) +
scale_x_discrete(name = 'Transition', labels = c(`repeat` = 'Repeat', `switch` = 'Switch')) +
ylab('Error Rate')+
annotate('text', x = 'repeat', y = .07, label = statSum) +
theme_bw()
## trim errors
initialRows <- nrow(d)
d <- d %>%
mutate(errorTrim = ifelse(error | shift(error), 1, 0)) %>%
filter(error == 0, errorTrim == 0)
print(paste('Number of rows before trimming error trials and trials following error trials:', initialRows))
print(paste('Number of rows after trimming error trials and trials following error trials:', nrow(d)))
write.csv(d, '../../../data/pracCuedClean.csv', row.names = FALSE)
trimmingSummary <- rbind(trimmingSummary, data.frame(Data.Dropped = round(1 - (nrow(d) / initialRows), 2), Reason = 'Error trials and trials following error trials'))
trimmingSummary
sMeans <- d %>%
group_by(subject, transition) %>%
summarize(rt = mean(rt))
sMeans %>%
group_by(transition) %>%
summarize(Response.Time = mean(rt), se = sd(rt) / sqrt(N))
t1 <- t.test(sMeans[sMeans$transition == 'repeat',]$rt, sMeans[sMeans$transition == 'switch',]$rt, paired = TRUE)
t1
statSum <- paste('t(', t1$parameter, ') = ', abs(round(t1$statistic,2)), ', p ', ifelse(t1$p.value < .001, '< .001', round(t1$p.value, 3)), sep = '')
sMeans %>%
group_by(transition) %>%
summarize(RT = mean(rt), se = sd(rt) / sqrt(N)) %>%
ggplot(aes(x = transition, y = RT)) +
geom_bar(stat = 'identity', color = 'black') +
geom_errorbar(aes(ymin = RT - se, ymax = RT + se), width = 0.5) +
scale_x_discrete(name = 'Transition', labels = c(`repeat` = 'Repeat', `switch` = 'Switch')) +
ylab('Response Time (ms)')+
annotate('text', x = 'repeat', y = 1400, label = statSum) +
theme_bw()
q()
library(tidyverse)
library(data.table)
library(ggridges)
dst <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
rapidFire <- read.csv('../../data/rapidFire.csv')
pracCued <- read.csv('../../data/pracCued.csv')
n <- nrow(demo)
head(pracCued)
head(dst)
library(tidyverse)
library(data.table)
library(ggridges)
dst <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
rapidFire <- read.csv('../../data/rapidFire.csv')
pracCued <- read.csv('../../data/pracCued.csv')
n <- nrow(demo)
head(pracCued)
dstTrim <- dst %>%
group_by(subject) %>%
summarize(dstRunTimeMins = max(phaseRunTimeMins),
cycleThreshold = max(choiceTrial))
rapidFireTrim <- rapidFire %>%
group_by(subject) %>%
summarize(rapidFireRunTimeMins = max(phaseRunTimeMins))
pracCuedTrim <- pracCued %>%
group_by(subject) %>%
summarize(pracCuedRunTimeMins = max(runTimeMins))
demoTrim <- demo %>%
select(subject, totalTime_mins)
d <- dstTrim %>%
inner_join(rapidFireTrim) %>%
inner_join(pracCuedTrim) %>%
inner_join(demoTrim)
d
d %>%
ggplot(aes(x = totalTime_mins)) +
geom_histogram(color = 'black', fill = 'light grey') +
labs(
x = 'Total Run Time in Experiment (mins)',
caption = 'Extreme long times usually suggest participant left and came back at some point'
) +
theme_bw()
badSubjectsList <- demo[demo$vision == 'impaired',]$subject
badSubjects <- data.frame(subject = badSubjectsList, reason = rep('Vision impaired', length(badSubjectsList)))
badSubjectsList <- dst %>%
group_by(subject) %>%
summarize(error = mean(error))
badSubjectsList %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey', bins = ifelse(n < 10, 10, 30)) +
theme_bw() +
xlab('Mean Error Rates')
badSubjectsList <- badSubjectsList[badSubjectsList$error > .15,]$subject
badSubjects <- rbind(badSubjects, data.frame(subject = badSubjectsList, reason = rep('Error rate higher than 15%', length(badSubjectsList))))
write.csv(badSubjects, '../../data/badSubjects.csv', row.names = FALSE)
badSubjects
good <- dst %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error < .35)
bad <- dst %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
filter(error > .35)
good
bad
rejectList <- read.csv('../identitiesAndRejections/rejectList.csv')
rejectList <- ifelse(nrow(rejectList) > 0, rejectList$subject, -99)
dst %>%
filter(cuedRt < 10000) %>%
group_by(subject) %>%
summarize(error = mean(error), rt = mean(cuedRt)) %>%
ggplot(aes(x = error, y = rt)) +
geom_point() +
xlab('Mean Error Rate') +
ylab('Mean Cued Response Time (ms)') +
labs(caption = 'Red dashed lines represent the HIT rejection criteria') +
theme_bw() +
theme(legend.position = 'bottom') +
geom_vline(xintercept = 0.35, linetype = 'dashed', color = 'red') +
geom_hline(yintercept = 400, linetype = 'dashed', color = 'red')
print(paste('Number of rows before dropping bad subjects:', nrow(dst)))
dst <- dst[!(dst$subject %in% badSubjects$subject),]
print(paste('Number of rows after dropping bad subjects:', nrow(dst)))
demo <- demo[!(demo$subject %in% badSubjects$subject),]
rapidFire <- rapidFire[!(rapidFire$subject %in% badSubjects$subject),]
dst %>%
group_by(subject) %>%
summarize(error = mean(error)) %>%
ggplot(aes(x = error)) +
geom_histogram(color = 'black', fill = 'light grey') +
theme_bw() +
xlab('Error Rate')
## keep only cued < 10 s
initialRows <- nrow(dst)
print(paste('Number of rows before removing trials with RTs longer than 10 s:', initialRows))
dst <- dst %>%
filter(cuedRt < 10000)
print(paste('Number of rows after removing trials with RTs longer than 10 s:', nrow(dst)))
badTrials <- data.frame('Data Dropped' = round(1 - (nrow(dst) / initialRows), 4), Reason = 'Cued trials longer than 10 s')
badTrials
## subject-wise cued rt trimming
initialRows <- nrow(dst)
print(paste('Number of rows before removing trials where cued responses exceeded participant-wise cued RT cutoffs:', initialRows))
dst0 <- dst %>%
group_by(subject) %>%
summarize(meancuedRt = mean(cuedRt), sdcuedRt = sd(cuedRt)) %>%
inner_join(dst) %>%
mutate(badcued = ifelse(cuedRt <= meancuedRt - 2 * sdcuedRt | cuedRt > meancuedRt + 2 * sdcuedRt, 1, 0)) %>%
filter(badcued == 0) %>%
select(-badcued)
print(paste('Number of rows before removing trials where cued responses exceeded participant-wise cued RT cutoffs:', nrow(dst0)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(dst0) / initialRows), 4), Reason = 'Cued trials with RTs more extreme than two SDs beyond participant-wise means'))
badTrials
## choice first
## keep only < 10 s
initialRows <- nrow(dst0)
print(paste('Number of rows before removing trials where choices RTs exceeded 10 s', initialRows))
dst1 <- dst0 %>%
filter(choiceRt < 10000)
print(paste('Number of rows after removing trials where choices RTs exceeded 10 s', nrow(dst1)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(dst1) / initialRows), 4), Reason = 'Choice trials with with RTs  > 10 s'))
print(paste('Number of rows before removing trials where choices exceeded participant-wise choice RT cutoffs:', initialRows))
dst1 <- dst1 %>%
group_by(subject) %>%
summarize(meanChoiceRt = mean(choiceRt), sdChoiceRt = sd(choiceRt)) %>%
inner_join(dst) %>%
mutate(badChoice = ifelse(choiceRt <= meanChoiceRt - 2 * sdChoiceRt | choiceRt > meanChoiceRt + 2 * sdChoiceRt, 1, 0)) %>%
filter(badChoice == 0) %>%
select(-badChoice, meanChoiceRt, sdChoiceRt)
rapidFire <- rapidFire %>%
group_by(subject) %>%
summarize(meanChoiceRt = mean(choiceRt), sdChoiceRt = sd(choiceRt)) %>%
inner_join(rapidFire) %>%
mutate(badChoice = ifelse(choiceRt <= meanChoiceRt - 2 * sdChoiceRt | choiceRt > meanChoiceRt + 2 * sdChoiceRt, 1, 0)) %>%
filter(badChoice == 0) %>%
select(-badChoice, meanChoiceRt, sdChoiceRt)
print(paste('Number of rows after removing trials where choices exceeded participant-wise choice RT cutoffs:', nrow(dst1)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(dst1) / initialRows), 2), Reason = 'Choice trials with RTs more extreme than two SDs beyond participant-wise means'))
badTrials
write.csv(dst, '../../data/dstCleanErrors.csv', row.names = FALSE)
initialRows <- nrow(dst0)
print(paste('Number of rows before removing error trials and trials following error trials :', initialRows))
dst0 <- dst0 %>%
mutate(errorTrim = ifelse(error | shift(error), 1, 0)) %>%
filter(errorTrim == 0)
dst1 <- dst1 %>%
mutate(errorTrim = ifelse(error | shift(error), 1, 0)) %>%
filter(errorTrim == 0)
print(paste('Number of rows before removing error trials and trials following error trials :', nrow(dst0)))
badTrials <- rbind(badTrials, data.frame('Data Dropped' = round(1 - (nrow(dst0) / initialRows), 2), Reason = 'Trimming error trials and trials following error trials'))
badTrials
head(dst)
dst$corrected_effort_units
write.csv(dst0, '../../data/dstClean.csv', row.names = FALSE)
write.csv(demo, '../../data/demoClean.csv', row.names = FALSE)
write.csv(rapidFire, '../../data/rapidFireClean.csv', row.names = FALSE)
## save out condensed data with choices only
dst0 <- dst0 %>%
group_by(subject, choiceTrial) %>%
summarize(choiceRt = mean(choiceRt),
chosenDeckId = unique(chosenDeckId),
difference = unique(difference),
difficulty = unique(difficulty),
selectedDeckLocation = unique(selectedDeckLocation),
leftDeckId = unique(leftDeckId),
rightDeckId = unique(rightDeckId),
riskyDeckSwitchTop = unique(riskyDeckSwitchTop),
riskyDeckSwitchBottom = unique(riskyDeckSwitchBottom),
safeDeckSwitch = unique(safeDeckSwitch),
corrected_effort_units = unique(corrected_effort_units),
outcomeSwitch = unique(outcomeSwitch),
condition = unique(condition),
selectedRiskyDeck = unique(selectedRiskyDeck)) %>%
ungroup()
dst1 <- dst1 %>%
group_by(subject, choiceTrial) %>%
summarize(choiceRt = mean(choiceRt),
chosenDeckId = unique(chosenDeckId),
difference = unique(difference),
difficulty = unique(difficulty),
selectedDeckLocation = unique(selectedDeckLocation),
leftDeckId = unique(leftDeckId),
rightDeckId = unique(rightDeckId),
riskyDeckSwitchTop = unique(riskyDeckSwitchTop),
riskyDeckSwitchBottom = unique(riskyDeckSwitchBottom),
safeDeckSwitch = unique(safeDeckSwitch),
corrected_effort_units = unique(corrected_effort_units),
outcomeSwitch = unique(outcomeSwitch),
condition = unique(condition),
selectedRiskyDeck = unique(selectedRiskyDeck)) %>%
ungroup()
write.csv(dst0, '../../data/dstCleanChoice.csv', row.names = FALSE)
write.csv(dst1, '../../data/dstCleanChoice1.csv', row.names = FALSE)
n <- dst %>%
group_by(subject) %>%
summarize(n()) %>%
nrow()
q()
library(tidyverse)
library(data.table)
library(ggridges)
dst <- read.csv('../../data/dst.csv')
demo <- read.csv('../../data/demo.csv')
rapidFire <- read.csv('../../data/rapidFire.csv')
pracCued <- read.csv('../../data/pracCued.csv')
n <- nrow(demo)
head(pracCued)
colnames(d)
colnames(dst)
summary(dst$corrected_effort_units)
length(unique(dst[dst$corrected_effort_units=='false',]))
length(unique(dst[dst$corrected_effort_units=='false',]$subject))
111-97
q()
